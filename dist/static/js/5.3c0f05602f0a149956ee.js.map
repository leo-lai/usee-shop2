{"version":3,"sources":["webpack:///static/js/5.3c0f05602f0a149956ee.js","webpack:///./~/@babel/runtime/helpers/defineProperty.js?7d48","webpack:///./~/@babel/runtime/helpers/objectSpread.js?29fe","webpack:///./~/@babel/runtime/helpers/classCallCheck.js?2d74","webpack:///./~/@babel/runtime/helpers/createClass.js?50de","webpack:///./~/@babel/runtime/helpers/objectWithoutProperties.js?bdb4","webpack:///./~/@babel/runtime/helpers/objectWithoutPropertiesLoose.js?ca01","webpack:///./~/qrcanvas-vue/lib/qrcanvas-vue.common.js?67a9","webpack:///./~/qrcanvas/lib/qrcanvas.common.js?4bf2","webpack:///./~/qrcode-generator/qrcode.js?9078","webpack:///movie-quan.vue","webpack:///./src/pages/movie-quan.vue?d0f3","webpack:///./src/pages/movie-quan.vue?0e46","webpack:///./src/pages/movie-quan.vue","webpack:///./src/pages/movie-quan.vue?e87a"],"names":["webpackJsonp","23","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","24","__webpack_require__","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","43","_classCallCheck","instance","Constructor","TypeError","44","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","45","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","call","46","_objectWithoutPropertiesLoose","sourceKeys","75","_interopDefault","ex","qrcanvas","index","render","h","methods","update","options","this","mounted","$emit","$el","canvas","watch","76","getCanvas","_ref","undefined","width","height","rCanvas","helpers","createCanvas","cacheCanvas","cache","push","apply","drawCanvas","data","_ref2","cellSize","context","_ref2$clear","clear","queue","ctx","getContext","clearRect","globalCompositeOperation","item","shift","Array","isArray","isDrawable","image","style","x","col","y","row","w","cols","rows","drawImage","fillStyle","fillRect","drawText","text","padColorArr","_ref3","_ref3$fontSize","fontSize","_ref3$fontStyle","fontStyle","_ref3$fontFamily","fontFamily","color","_ref3$pad","pad","_ref3$padColor","padColor","COLOR_WHITE","_ref3$mode","mode","_ctx$getImageData","getImageData","font","Boolean","join","resetContext","textAlign","textBaseline","Math","ceil","measureText","fillText","COLOR_BLACK","imageData","total","padded","offset","_loop","loop","current","unique","last","j","k","putImageData","renderDefault","foreground","isDark","count","canvasMask","drawCells","canvasFg","renderRound","maskOptions","_maskOptions$value","radius","_ref4","beginPath","moveTo","drawCorner","fill","renderFusion","_ref5","_maskOptions$value2","_ref6","corners","fillCorner","renderSpot","_ref7","_maskOptions$foregrou","foregroundLight","canvasLayer","ctxLayer","dark","_ref8","fillSize","_ref9","drawEach","cornerX","cornerY","r","arcTo","lineTo","startX","startY","destX","destY","size","rest","renderer","QRCanvasRenderer","document","createElement","isCanvas","el","HTMLCanvasElement","HTMLImageElement","qrcode","notImplemented","Error","effects","default","round","fusion","spot","stringToBytes","stringToBytesFuncs","DEFAULT_PROPS","typeNumber","correctLevel","_this","_this$cache","qr","setOptions","normalizeEffect","normalizeLogo","_this$options","logo","addData","make","getModuleCount","effect","type","canvasOut","canvasBg","config","_this$options2","_this$options2$backgr","background","_this$options2$foregr","onRender","_cellSize","sketchSize","logoLayer","_logo$image","imageRatio","posRatio","min","77","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","qrPolynomial","num","_num","getAt","getLength","multiply","e","QRMath","gexp","glog","mod","ratio","errorCorrectionLevel","PAD0","PAD1","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","makeImpl","test","maskPattern","moduleCount","modules","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","c","getBestMaskPattern","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","bits","getBCHTypeNumber","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","maskFunc","getMaskFunction","mask","createBytes","buffer","rsBlocks","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","dataCount","ecCount","totalCount","max","getBuffer","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","totalCodeCount","dataList","QRRSBlock","getRSBlocks","qrBitBuffer","put","getMode","getLengthInBits","write","totalDataCount","putBit","newData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","createTableTag","margin","qrHtml","createSvgTag","mc","mr","rect","qrSvg","createDataURL","createImgTag","alt","img","_createHalfASCII","r1","r2","p","blocks","██","█ "," █","  ","ascii","substring","createASCII","white","black","line","renderTo2dContext","s","bytes","charCodeAt","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","read","b","b0","b1","b2","b3","String","fromCharCode","v","unknownChar","charAt","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","digit","d","errorCorrectLength","a","sameCount","darkCount","abs","EXP_TABLE","LOG_TABLE","n","RS_BLOCK_TABLE","qrRSBlock","getRsBlockTable","rsBlock","list","_buffer","_length","bufIndex","bit","_mode","_data","strToNum","chatToNum","getCode","_bytes","code","byteArrayOutputStream","writeByte","writeShort","writeBytes","off","len","writeString","toByteArray","toString","base64EncodeOutputStream","_buflen","_base64","writeEncoded","encode","flush","padlen","str","_str","_pos","match","decode","gifImage","_width","_height","setPixel","pixel","out","lzwMinCodeSize","raster","getLZWRaster","bitOutputStream","_out","_bitLength","_bitBuffer","clearCode","endCode","bitLength","table","lzwTable","add","byteOut","bitOut","dataIndex","contains","_map","_size","getPixel","gif","base64","toUTF8Array","utf8","charcode","factory","146","_interopRequireDefault","__esModule","_assign","_assign2","_qrcanvasVue","_qrcanvasVue2","components","Qrcanvas","qrcodeObj","qrcodeImg","info","getTicketInfo","ticketsId","$mui","showWaiting","$server","movie","then","usefulTime","datetimeStr","split","dateStr","timeStr","number","clearEdges","$nextTick","convertToImage","finally","hideWaiting","qrcodeCanvas","$refs","children","toDataURL","$route","params","id","257","version","sources","names","mappings","file","sourcesContent","sourceRoot","300","content","locals","365","Component","428","_vm","_h","$createElement","_c","_self","staticClass","$device","isWechat","_e","_v","_s","meta","title","attrs","projectName","src","projectImage","address","ref","_m","staticRenderFns"],"mappings":"AAAAA,cAAc,EAAE,KAEVC,GACA,SAAUC,EAAQC,GCHxB,QAAAC,GAAAC,EAAAC,EAAAC,GAYA,MAXAD,KAAAD,GACAG,OAAAC,eAAAJ,EAAAC,GACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,EAGAH,EAAAC,QAAAC,GDSMS,GACA,SAAUX,EAAQC,EAASW,GEvBjC,QAAAC,GAAAC,GACA,OAAAC,GAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,GAAAG,GAAA,MAAAF,UAAAD,GAAAC,UAAAD,MACAI,EAAAb,OAAAc,KAAAF,EAEA,mBAAAZ,QAAAe,wBACAF,IAAAG,OAAAhB,OAAAe,sBAAAH,GAAAK,OAAA,SAAAC,GACA,MAAAlB,QAAAmB,yBAAAP,EAAAM,GAAAhB,eAIAW,EAAAO,QAAA,SAAAtB,GACAG,EAAAO,EAAAV,EAAAc,EAAAd,MAIA,MAAAU,GAlBA,GAAAP,GAAAK,EAAA,GAqBAZ,GAAAC,QAAAY,GF+BMc,GACA,SAAU3B,EAAQC,GGrDxB,QAAA2B,GAAAC,EAAAC,GACA,KAAAD,YAAAC,IACA,SAAAC,WAAA,qCAIA/B,EAAAC,QAAA2B,GH2DMI,GACA,SAAUhC,EAAQC,GIlExB,QAAAgC,GAAAnB,EAAAoB,GACA,OAAAnB,GAAA,EAAiBA,EAAAmB,EAAAjB,OAAkBF,IAAA,CACnC,GAAAoB,GAAAD,EAAAnB,EACAoB,GAAA3B,WAAA2B,EAAA3B,aAAA,EACA2B,EAAA1B,cAAA,EACA,SAAA0B,OAAAzB,UAAA,GACAJ,OAAAC,eAAAO,EAAAqB,EAAA/B,IAAA+B,IAIA,QAAAC,GAAAN,EAAAO,EAAAC,GAGA,MAFAD,IAAAJ,EAAAH,EAAAS,UAAAF,GACAC,GAAAL,EAAAH,EAAAQ,GACAR,EAGA9B,EAAAC,QAAAmC,GJwEMI,GACA,SAAUxC,EAAQC,EAASW,GKvFjC,QAAA6B,GAAAvB,EAAAwB,GACA,SAAAxB,EAAA,QACA,IACAd,GAAAW,EADAD,EAAA6B,EAAAzB,EAAAwB,EAGA,IAAApC,OAAAe,sBAAA,CACA,GAAAuB,GAAAtC,OAAAe,sBAAAH,EAEA,KAAAH,EAAA,EAAeA,EAAA6B,EAAA3B,OAA6BF,IAC5CX,EAAAwC,EAAA7B,GACA2B,EAAAG,QAAAzC,IAAA,GACAE,OAAAiC,UAAAO,qBAAAC,KAAA7B,EAAAd,KACAU,EAAAV,GAAAc,EAAAd,IAIA,MAAAU,GAlBA,GAAA6B,GAAA/B,EAAA,GAqBAZ,GAAAC,QAAAwC,GL+FMO,GACA,SAAUhD,EAAQC,GMrHxB,QAAAgD,GAAA/B,EAAAwB,GACA,SAAAxB,EAAA,QACA,IAEAd,GAAAW,EAFAD,KACAoC,EAAA5C,OAAAc,KAAAF,EAGA,KAAAH,EAAA,EAAaA,EAAAmC,EAAAjC,OAAuBF,IACpCX,EAAA8C,EAAAnC,GACA2B,EAAAG,QAAAzC,IAAA,IACAU,EAAAV,GAAAc,EAAAd,GAGA,OAAAU,GAGAd,EAAAC,QAAAgD,GN2HME,GACA,SAAUnD,EAAQC,EAASW,GO3IjC,YAEA,SAAAwC,GAAAC,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,EAE/B,GAAAxC,GAAAuC,EAAAxC,EAAA,KACA0C,EAAA1C,EAAA,IAEA2C,GACArB,OAAA,WACAsB,OAAA,SAAAC,GACA,MAAAA,GAAA,WAEAC,SACAC,OAAA,SAAAC,GAEAC,KAAAC,UACAD,KAAAE,MAAA,eAAAF,KAAAG,KACAV,WAAAzC,KAAwC+C,GACxCK,OAAAJ,KAAAG,OAEAH,KAAAE,MAAA,UAAAF,KAAAG,QAGAE,OACAN,QAAA,UAEAE,QAAA,WACAD,KAAAC,SAAA,EACAD,KAAAF,OAAAE,KAAAD,UAIA5D,GAAAC,QAAAsD,GPkJMY,GACA,SAAUnE,EAAQC,EAASW,GQnLjC,YAIA,SAAAwC,GAAAC,GAA+B,MAAAA,IAAA,gBAAAA,IAAA,WAAAA,KAAA,QAAAA,EAkC/B,QAAAe,KACA,GAAAC,GAAArD,UAAAC,OAAA,GAAAqD,SAAAtD,UAAA,GAAAA,UAAA,MACAuD,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,OACAP,EAAAI,EAAAJ,OAEAQ,EAAAR,GAAAS,EAAAC,cAOA,OALAJ,KACAE,EAAAF,QACAE,EAAAD,OAAA,MAAAA,EAAAD,EAAAC,GAGAC,EAGA,QAAAG,KACAC,EAAAC,KAAAC,MAAAF,EAAA7D,WAYA,QAAAgE,GAAAf,EAAAgB,EAAArB,GACA,GAAAsB,GAAAtB,MACAuB,EAAAD,EAAAC,SACAC,EAAAF,EAAAE,QACAC,EAAAH,EAAAI,MACAA,EAAA,SAAAD,KAEAd,EAAAN,EAAAM,MACAC,EAAAP,EAAAO,OACAe,GAAAN,GACAO,EAAAJ,GAAAnB,EAAAwB,WAAA,KAIA,KAHAH,GAAAE,EAAAE,UAAA,IAAAnB,EAAAC,GACAgB,EAAAG,yBAAA,cAEAJ,EAAAtE,QAAA,CACA,GAAA2E,GAAAL,EAAAM,OAEA,IAAAC,MAAAC,QAAAH,GACAL,EAAAK,EAAAtE,OAAAiE,OACK,IAAAK,EAAA,CACL,GAAAzF,GAAA,MAGAA,GADAuE,EAAAsB,WAAAJ,IAEAK,MAAAL,GAEO,gBAAAA,IAEPM,MAAAN,GAGAA,CAGA,IAAAO,IAAA,OAAAhG,KAAAiG,IAAAjB,EAAAhF,EAAAgG,IAAA,EACAE,GAAA,OAAAlG,KAAAmG,IAAAnB,EAAAhF,EAAAkG,IAAA,CACAF,GAAA,IAAAA,GAAA5B,GACA8B,EAAA,IAAAA,GAAA9B,EACA,IAAAgC,IAAA,QAAApG,KAAAqG,KAAArB,EAAAhF,EAAAoG,IAAAhC,EACAd,GAAA,QAAAtD,KAAAsG,KAAAtB,EAAAhF,EAAAsD,IAAAc,CAEApE,GAAA8F,MACAT,EAAAkB,UAAAvG,EAAA8F,MAAAE,EAAAE,EAAAE,EAAA9C,IAEA+B,EAAAmB,UAAAxG,EAAA+F,OAAA,QACAV,EAAAoB,SAAAT,EAAAE,EAAAE,EAAA9C,KAKA,MAAAQ,GAGA,QAAA4C,GAAAC,EAAAlD,GACA,GAiBAmD,GAjBAC,EAAApD,MACAqD,EAAAD,EAAAE,SACAA,EAAA,SAAAD,EAAA,GAAAA,EACAE,EAAAH,EAAAI,UACAA,EAAA,SAAAD,EAAA,GAAAA,EACAE,EAAAL,EAAAM,WACAA,EAAA,SAAAD,EAAA,UAAAA,EACAE,EAAAP,EAAAO,MACAC,EAAAR,EAAAS,IACAA,EAAA,SAAAD,EAAA,EAAAA,EACAE,EAAAV,EAAAW,SACAA,EAAA,SAAAD,EAAAE,EAAAF,EACAG,EAAAb,EAAAc,KACAA,EAAA,SAAAD,EAAA,EAAAA,EAEA5D,EAAAG,IACAoB,EAAAvB,EAAAwB,WAAA,KAGA,IAAAkC,EAAA,CACAnC,EAAAmB,UAAAgB,EACAnC,EAAAoB,SAAA,QAEA,IAAAmB,GAAAvC,EAAAwC,aAAA,QAEAjB,GAAAgB,EAAA9C,KACA8B,EAAA,KAAAA,EAAA,MAGA,GAAAvC,GAAA0C,EAAA,EAAAO,EACAQ,GAAAb,EAAA,GAAA9F,OAAA4F,EAAA,MAAAI,GAAA/F,OAAA2G,SAAAC,KAAA,KAEAC,EAAA,WACA5C,EAAA6C,UAAA,SACA7C,EAAA8C,aAAA,SACA9C,EAAAyC,OAGAG,IACA,IAAA7D,GAAAgE,KAAAC,KAAAhD,EAAAiD,YAAA3B,GAAAvC,OAAA,EAAAkD,CACAxD,GAAAM,QACAN,EAAAO,SACA4D,GAEA,IAAAM,GAAA,WACAlD,EAAAmB,UAAAY,GAAAoB,EACAnD,EAAAkD,SAAA5B,EAAAvC,EAAA,EAAAC,EAAA,GAiEA,OA9DA,KAAAsD,GACAtC,EAAAmB,UAAAgB,EACAnC,EAAAoB,SAAA,IAAArC,EAAAC,GACAkE,MAEAA,IAEA3B,IACA,WA6CA,OA5CA6B,GAAApD,EAAAwC,aAAA,IAAAzD,EAAAC,GACAS,EAAA2D,EAAA3D,KACA4D,EAAAtE,EAAAC,EACAsE,KACAC,EAAA,EAEAC,EAAA,SAAAC,GACA,GAAAC,MACAC,IACAL,GAAAC,GAAAG,EACAH,EAAA,EAAAA,CACA,IAAAK,GAAAN,EAAAC,EAEA,KAAAK,EAAA,CACAA,IAEA,QAAArI,GAAA,EAA2BA,EAAA8H,EAAW9H,GAAA,EACtCqI,EAAAtE,KAAA/D,GAIAqI,EAAA1H,QAAA,SAAAX,GACAkE,EAAA,EAAAlE,EAAA,KACAA,EAAAwD,EAAAxD,EAAA,MAAAA,EAAA,GAAAwD,EAAAxD,EAAA,KAAAA,EAAAwD,EAAAxD,EAAAwD,GAAA7C,QAAA,SAAA2H,GACA,GAAAC,GAAA,EAAAD,CAEAC,IAAA,GAAAA,GAAArE,EAAAhE,SAAAkI,EAAAE,KACAF,EAAAE,GAAA,EACAH,EAAApE,KAAAuE,QAKAH,EAAAxH,QAAA,SAAAX,GACA,GAAAsI,GAAA,EAAAtI,CAEA,KAAAkE,EAAAoE,EAAA,GACA,OAAAC,GAAA,EAA6BA,EAAA,EAAOA,GAAA,EACpCrE,EAAAoE,EAAAC,GAAAvC,EAAAuC,MAMAL,EAAA,EAA0BA,EAAAxB,EAAYwB,GAAA,EACtCD,EAAAC,EAGAzD,GAAA+D,aAAAX,EAAA,SAKA3E,EAUA,QAAAuF,GAAAnF,GACA,GAAAoF,GAAApF,EAAAoF,WACAtE,EAAAd,EAAAc,SACAuE,EAAArF,EAAAqF,OACAC,EAAAtF,EAAAsF,MACAvF,EAAAM,EAAAN,UACAY,EAAAN,EAAAM,WACAJ,EAAAF,EAAAE,YACAL,EAAAY,EAAAwE,EACAC,EAAAxF,GACAG,UAEAa,EAAAwE,EAAAnE,WAAA,KACAL,GAAAuB,UAAAgC,EACAkB,GACA1E,WACAwE,SACG,SAAAzE,GACH,GAAAnE,GAAAmE,EAAAnE,EACAsI,EAAAnE,EAAAmE,EACAlD,EAAAjB,EAAAiB,EACAE,EAAAnB,EAAAmB,CAEAqD,GAAA3I,EAAAsI,IACAjE,EAAAwB,SAAAT,EAAAE,EAAAlB,MAGA,IAAA2E,GAAA1F,GACAG,SAEAS,GAAA8E,EAAAL,GACAtE,YAEA,IAAAK,GAAAsE,EAAArE,WAAA,KAIA,OAHAD,GAAAG,yBAAA,iBACAH,EAAAkB,UAAAkD,EAAA,KACAhF,EAAAgF,GACAE,EAGA,QAAAC,GAAA/C,EAAAgD,GACA,GAAAP,GAAAzC,EAAAyC,WACAtE,EAAA6B,EAAA7B,SACAuE,EAAA1C,EAAA0C,OACAC,EAAA3C,EAAA2C,MACAvF,EAAAM,EAAAN,UACAY,EAAAN,EAAAM,WACAJ,EAAAF,EAAAE,YACAL,EAAAY,EAAAwE,EACAC,EAAAxF,GACAG,UAEA0F,EAAAD,EAAA3J,MACAA,EAAA,SAAA4J,EAAA,EAAAA,EACAC,EAAA7J,EAAA8E,EAAA,EACAC,EAAAwE,EAAAnE,WAAA,KACAL,GAAAuB,UAAAgC,EACAkB,GACA1E,WACAwE,SACG,SAAAQ,GACH,GAAApJ,GAAAoJ,EAAApJ,EACAsI,EAAAc,EAAAd,EACAlD,EAAAgE,EAAAhE,EACAE,EAAA8D,EAAA9D,CAEAqD,GAAA3I,EAAAsI,KACAjE,EAAAgF,YACAhF,EAAAiF,OAAAlE,EAAA,GAAAhB,EAAAkB,GACAiE,EAAAlF,EAAAe,EAAAhB,EAAAkB,EAAAF,EAAAhB,EAAAkB,EAAA,GAAAlB,EAAA+E,GACAI,EAAAlF,EAAAe,EAAAhB,EAAAkB,EAAAlB,EAAAgB,EAAA,GAAAhB,EAAAkB,EAAAlB,EAAA+E,GACAI,EAAAlF,EAAAe,EAAAE,EAAAlB,EAAAgB,EAAAE,EAAA,GAAAlB,EAAA+E,GACAI,EAAAlF,EAAAe,EAAAE,EAAAF,EAAA,GAAAhB,EAAAkB,EAAA6D,GAEA9E,EAAAmF,SAGA,IAAAT,GAAA1F,GACAG,SAEAS,GAAA8E,EAAAL,GACAtE,YAEA,IAAAK,GAAAsE,EAAArE,WAAA,KAIA,OAHAD,GAAAG,yBAAA,iBACAH,EAAAkB,UAAAkD,EAAA,KACAhF,EAAAgF,GACAE,EAGA,QAAAU,GAAAC,EAAAT,GACA,GAAAP,GAAAgB,EAAAhB,WACAtE,EAAAsF,EAAAtF,SACAuE,EAAAe,EAAAf,OACAC,EAAAc,EAAAd,MACAvF,EAAAM,EAAAN,UACAY,EAAAN,EAAAM,WACAJ,EAAAF,EAAAE,YACAL,EAAAY,EAAAwE,EACAC,EAAAxF,GACAG,UAEAa,EAAAwE,EAAAnE,WAAA,KACAL,GAAAuB,UAAAgC,CACA,IAAA+B,GAAAV,EAAA3J,MACAA,EAAA,SAAAqK,EAAA,EAAAA,EACAR,EAAA7J,EAAA8E,EAAA,CACA0E,IACA1E,WACAwE,SACG,SAAAgB,GACH,GAAA5J,GAAA4J,EAAA5J,EACAsI,EAAAsB,EAAAtB,EACAlD,EAAAwE,EAAAxE,EACAE,EAAAsE,EAAAtE,EACAuE,GAAA,QAEAlB,GAAA3I,EAAA,EAAAsI,KACAuB,EAAA,MACAA,EAAA,OAGAlB,EAAA3I,EAAA,EAAAsI,KACAuB,EAAA,MACAA,EAAA,OAGAlB,EAAA3I,EAAAsI,EAAA,KACAuB,EAAA,MACAA,EAAA,OAGAlB,EAAA3I,EAAAsI,EAAA,KACAuB,EAAA,MACAA,EAAA,OAGAlB,EAAA3I,EAAAsI,IACAK,EAAA3I,EAAA,EAAAsI,EAAA,KAAAuB,EAAA,OACAlB,EAAA3I,EAAA,EAAAsI,EAAA,KAAAuB,EAAA,OACAlB,EAAA3I,EAAA,EAAAsI,EAAA,KAAAuB,EAAA,OACAlB,EAAA3I,EAAA,EAAAsI,EAAA,KAAAuB,EAAA,OACAxF,EAAAgF,YACAhF,EAAAiF,OAAAlE,EAAA,GAAAhB,EAAAkB,GACAiE,EAAAlF,EAAAe,EAAAhB,EAAAkB,EAAAF,EAAAhB,EAAAkB,EAAA,GAAAlB,EAAAyF,EAAA,KAAAV,GACAI,EAAAlF,EAAAe,EAAAhB,EAAAkB,EAAAlB,EAAAgB,EAAA,GAAAhB,EAAAkB,EAAAlB,EAAAyF,EAAA,KAAAV,GACAI,EAAAlF,EAAAe,EAAAE,EAAAlB,EAAAgB,EAAAE,EAAA,GAAAlB,EAAAyF,EAAA,KAAAV,GACAI,EAAAlF,EAAAe,EAAAE,EAAAF,EAAA,GAAAhB,EAAAkB,EAAAuE,EAAA,KAAAV,GAEA9E,EAAAmF,SAEA,IAAAK,EAAA,IACAC,EAAAzF,EAAAe,EAAAE,EAAA,GAAAlB,EAAAgB,EAAAE,EAAAF,EAAA,GAAAhB,EAAAkB,EAAA6D,GAGA,IAAAU,EAAA,IACAC,EAAAzF,EAAAe,EAAA,GAAAhB,EAAAkB,EAAAF,EAAAhB,EAAAkB,EAAAF,EAAAhB,EAAAkB,EAAA,GAAAlB,EAAA+E,GAGA,IAAAU,EAAA,IACAC,EAAAzF,EAAAe,EAAAhB,EAAAkB,EAAA,GAAAlB,EAAAgB,EAAAhB,EAAAkB,EAAAlB,EAAAgB,EAAA,GAAAhB,EAAAkB,EAAAlB,EAAA+E,GAGA,IAAAU,EAAA,IACAC,EAAAzF,EAAAe,EAAA,GAAAhB,EAAAkB,EAAAlB,EAAAgB,EAAAE,EAAAlB,EAAAgB,EAAAE,EAAA,GAAAlB,EAAA+E,KAIA,IAAAJ,GAAA1F,GACAG,SAEAS,GAAA8E,EAAAL,GACAtE,YAEA,IAAAK,GAAAsE,EAAArE,WAAA,KAIA,OAHAD,GAAAG,yBAAA,iBACAH,EAAAkB,UAAAkD,EAAA,KACAhF,EAAAgF,GACAE,EAGA,QAAAgB,GAAAC,EAAAf,GACA,GAAAP,GAAAsB,EAAAtB,WACAtE,EAAA4F,EAAA5F,SACAuE,EAAAqB,EAAArB,OACAC,EAAAoB,EAAApB,MACAvF,EAAAM,EAAAN,UACAY,EAAAN,EAAAM,WACAJ,EAAAF,EAAAE,YACAL,EAAAY,EAAAwE,EACAC,EAAAxF,GACAG,UAEAlE,EAAA2J,EAAA3J,MACA2K,EAAAhB,EAAAiB,gBACAA,EAAA,SAAAD,EAAApD,EAAAoD,EACA5F,EAAAwE,EAAAnE,WAAA,MACAyF,EAAA9G,GACAG,UAEAuF,EAAA1F,GACAG,UAEA4G,EAAAD,EAAAzF,WAAA,KA4CA,SA1CA2F,MAAA,EACA3B,eAEA2B,MAAA,EACA3B,WAAAwB,IACGvJ,QAAA,SAAAkE,GACHR,EAAAuB,UAAAgC,EACAvD,EAAAM,UAAA,IAAAnB,KACAsF,GACA1E,WACAwE,SACK,SAAA0B,GACL,GAAAtK,GAAAsK,EAAAtK,EACAsI,EAAAgC,EAAAhC,EACAlD,EAAAkF,EAAAlF,EACAE,EAAAgF,EAAAhF,CAEA,IAAAqD,EAAA3I,EAAAsI,IAAAzD,EAAAwF,KAAA,CACA,GAAAE,EAGAA,GADAvK,GAAA,GAAAsI,GAAA,GAAAtI,GAAA,GAAA4I,EAAAN,EAAA,MAAAM,EAAA5I,EAAA,MAAAsI,GAAA,GAAAtI,EAAA,GAAA4I,GAAA5I,EAAA,GAAA4I,GAAAN,EAAA,GAAAM,GAAAN,EAAA,GAAAM,GAAA,IAAA5I,GAAA,IAAAsI,EACA,KAAAhJ,EAEA,GAGA,IAAA0I,IAAA,EAAAuC,GAAA,CACAlG,GAAAwB,SAAAT,EAAA4C,EAAA5D,EAAAkB,EAAA0C,EAAA5D,EAAAmG,EAAAnG,EAAAmG,EAAAnG,MAGAH,EAAAkG,EAAAtF,EAAA6D,YACAtE,WACAC,QAAA+F,IAEAA,EAAAxF,yBAAA,iBACAwF,EAAAzE,UAAAkD,EAAA,KACA5E,EAAA8E,EAAAoB,GACA/F,WACAG,OAAA,MAGAV,EAAAgF,EAAAsB,GACApB,EAGA,QAAAD,GAAA0B,EAAAC,GAIA,OAHArG,GAAAoG,EAAApG,SACAwE,EAAA4B,EAAA5B,MAEA5I,EAAA,EAAiBA,EAAA4I,EAAW5I,GAAA,EAC5B,OAAAsI,GAAA,EAAmBA,EAAAM,EAAWN,GAAA,GAC9B,GAAAlD,GAAAkD,EAAAlE,EACAkB,EAAAtF,EAAAoE,CACAqG,IACAzK,IACAsI,IACAlD,IACAE,OAMA,QAAAiE,GAAA9E,EAAAiG,EAAAC,EAAAvF,EAAAE,EAAAsF,GACAA,EACAnG,EAAAoG,MAAAH,EAAAC,EAAAvF,EAAAE,EAAAsF,IAEAnG,EAAAqG,OAAAJ,EAAAC,GACAlG,EAAAqG,OAAA1F,EAAAE,IAIA,QAAAwE,GAAAzF,EAAA0G,EAAAC,EAAAN,EAAAC,EAAAM,EAAAC,EAAA/B,GACA9E,EAAAgF,YACAhF,EAAAiF,OAAAyB,EAAAC,GACAzB,EAAAlF,EAAAqG,EAAAC,EAAAM,EAAAC,EAAA/B,GACA9E,EAAAyG,OAAAJ,EAAAC,GACAtG,EAAAyG,OAAAC,EAAAC,GAEA3G,EAAAmF,OA8LA,QAAAjH,GAAAM,GACA,GAAAK,GAAAL,EAAAK,OACAiI,EAAAtI,EAAAsI,KACA/G,EAAAvB,EAAAuB,SACAgH,EAAA1J,EAAAmB,GAAA,6BAEAwI,EAAA,GAAAC,GAAAF,EACA,OAAAC,GAAA5I,OAAAS,GACAiI,OACA/G,aAQA,QAAAR,KACA,MAAA2H,UAAAC,cAAA,UAGA,QAAAC,GAAAC,GACA,MAAAA,aAAAC,mBAGA,QAAA1G,GAAAyG,GACA,MAAAD,GAAAC,gBAAAE,kBApuBArM,OAAAC,eAAAN,EAAA,cAA8CI,OAAA,GAI9C,IAAAQ,GAAAuC,EAAAxC,EAAA,KACAgB,EAAAwB,EAAAxC,EAAA,KACAwB,EAAAgB,EAAAxC,EAAA,KACAV,EAAAkD,EAAAxC,EAAA,KACAgM,EAAAxJ,EAAAxC,EAAA,KACA6B,EAAAW,EAAAxC,EAAA,KAEA+H,EAAA,OACAf,EAAA,OAEA/C,KAEAgI,EAAA,WACA,SAAAC,OAAA,oBAGApI,GACAC,aAAAkI,EACAL,SAAAK,EACA7G,WAAA6G,EACAzI,YACAQ,cACAI,aACA6B,YA8MAkG,GACAC,QAAAxD,EACAyD,MAAAlD,EACAmD,OAAA1C,EACA2C,KAAArC,EAkSA8B,GAAAQ,cAAAR,EAAAS,mBAAA,QACA,IAAAC,IACAC,WAAA,EACAC,aAAA,IACAvI,KAAA,IAGAoH,EAEA,WACA,QAAAA,GAAAzI,GACA,GAAA6J,GAAA5J,IAEAjC,GAAAiC,KAAAwI,GAEAnM,EAAA2D,KAAA,UAAAhD,KAAqDyM,IAErDpN,EAAA2D,KAAA,YAEA3D,EAAA2D,KAAA,kBAAA9C,EAAAsI,GACA,GAAAqE,GAAAD,EAAA5I,MACA8I,EAAAD,EAAAC,GACAhE,EAAA+D,EAAA/D,KACA,SAAA5I,EAAA,GAAAA,GAAA4I,GAAAN,EAAA,GAAAA,GAAAM,IACAgE,EAAAjE,OAAA3I,EAAAsI,KAGAxF,KAAA+J,WAAAhK,GA6JA,MA1JAxB,GAAAiK,IACAjM,IAAA,aACAC,MAAA,SAAAuD,GACAC,KAAAD,QAAA/C,KAAqCgD,KAAAD,WACrCC,KAAAgK,kBACAhK,KAAAiK,eACA,IAAAC,GAAAlK,KAAAD,QACA2J,EAAAQ,EAAAR,WACAtI,EAAA8I,EAAA9I,KACA+I,EAAAD,EAAAC,KAEAR,EAAA3J,KAAAD,QAAA4J,YACAQ,KAAA,SAAAnL,QAAA2K,GAAA,IAAAA,EAAA,IACA,IAAAG,GAAAf,EAAAW,EAAAC,EACAG,GAAAM,QAAAhJ,GAAA,IACA0I,EAAAO,MACA,IAAAvE,GAAAgE,EAAAQ,gBACAtK,MAAAgB,OACA8I,KACAhE,YAIAvJ,IAAA,kBACAC,MAAA,WACA,GAAA+N,GAAAvK,KAAAD,QAAAwK,MAEA,iBAAAA,KACAA,GACAC,KAAAD,IAIAvK,KAAAD,QAAAwK,gBAGAhO,IAAA,gBACAC,MAAA,WACA,GAAA2F,GAAAtB,EAAAsB,WACAa,EAAAnC,EAAAmC,SACAmH,EAAAnK,KAAAD,QAAAoK,IAEAA,KACAhI,EAAAgI,GACAA,GACA/H,MAAA+H,GAEShI,EAAAgI,EAAA/H,SACT,gBAAA+H,KACAA,GACAlH,KAAAkH,IAKAA,EADA,gBAAAA,GAAAlH,MAEAb,MAAAY,EAAAmH,EAAAlH,KAAAkH,EAAApK,UAGA,OAKAC,KAAAD,QAAAoK,UAGA5N,IAAA,SACAC,MAAA,SAAA4D,GACA,GAcAqK,GACAC,EACAzE,EAhBA0E,EAAAxN,UAAAC,OAAA,GAAAqD,SAAAtD,UAAA,GAAAA,UAAA,MACAyN,EAAA5K,KAAAD,QACA8K,EAAAD,EAAAE,WACAA,EAAA,SAAAD,EAAA,QAAAA,EACAE,EAAAH,EAAAhF,WACAA,EAAA,SAAAmF,EAAA,QAAAA,EACAR,EAAAK,EAAAL,OACAJ,EAAAS,EAAAT,KACAa,EAAA9B,EAAAqB,EAAAC,OAAAtB,EAAAC,QACArD,EAAA9F,KAAAgB,MAAA8E,MACAvF,EAAAM,EAAAN,UACAY,EAAAN,EAAAM,WACAJ,EAAAF,EAAAE,YACAsH,EAAAsC,EAAAtC,KAMA/G,EAAAqJ,EAAArJ,QACAlB,IAAAkB,GAAA+G,IAAA/G,EAAA,GACAA,IAAA+G,EAAAvC,EAAAxE,GAEA+G,EACAoC,EAAAlK,GACAH,SACAM,MAAA2H,KAGAA,EAAAjI,EAAAM,MACA+J,EAAArK,EAKA,IAAA6K,GAAAvG,KAAAC,KAAA0D,EAAAvC,GAEAoF,EAAAD,EAAAnF,CAaA,IAZA4E,EAAAnK,GACAG,MAAAuK,EAAAnF,IAEA3E,EAAAuJ,EAAAI,GACAxJ,SAAA2J,IAEAhF,EAAA+E,EAAAhO,GACA4I,aACAtE,SAAA2J,EACApF,OAAA7F,KAAA6F,QACS7F,KAAAgB,OAAAhB,KAAAD,QAAAwK,QAETJ,EAAA,CACA,GAAAgB,GAAAnO,KAA0CmN,EAE1C,MAAAA,EAAAzH,GAAAyH,EAAAvK,GAAAuK,EAAAxH,MAAAwH,EAAAvH,MAAA,CACA,GAAAwI,GAAAjB,EAAA/H,MACA1B,EAAA0K,EAAA1K,MACAC,EAAAyK,EAAAzK,OACA0K,EAAA3K,EAAAC,EACA2K,EAAA5G,KAAA6G,KAAAzF,EAAA,IAAAA,EAAA,KACAlG,EAAA8E,KAAA6G,IAAAL,EAAAI,EAAAJ,EAAAI,EAAAD,GACA3I,EAAA9C,EAAAyL,EACA/I,GAAA4I,EAAAxI,GAAA,EACAF,GAAA0I,EAAAtL,GAAA,CACAuL,GAAAzI,IACAyI,EAAAvL,IACAuL,EAAA7I,IACA6I,EAAA3I,IAGArB,EAAA8E,EAAAkF,GACA1J,OAAA,IAWA,MANAN,GAAAsJ,IACArI,MAAAsI,IAEAtI,MAAA6D,KAEAlF,EAAA2J,EAAAzE,GACAwE,MAIAjC,IAgBA3H,GAAAC,eACAD,EAAA8H,WACA9H,EAAAsB,aAcA/F,EAAAqD,WACArD,EAAAyE,UACAzE,EAAA8M,WR0LMsC,GACA,SAAUrP,EAAQC,EAASW,GSt6BjC,GAAA0O,GAAAC,EAAAC,EAiBA5C,EAAA,WA0lCA,QAAA6C,GAAAC,EAAA7J,GAEA,sBAAA6J,GAAAzO,OACA,KAAAyO,GAAAzO,OAAA,IAAA4E,CAGA,IAAA8J,GAAA,WAEA,IADA,GAAA5G,GAAA,EACAA,EAAA2G,EAAAzO,QAAA,GAAAyO,EAAA3G,IACAA,GAAA,CAGA,QADA4G,GAAA,GAAA7J,OAAA4J,EAAAzO,OAAA8H,EAAAlD,GACA9E,EAAA,EAAqBA,EAAA2O,EAAAzO,OAAA8H,EAAyBhI,GAAA,EAC9C4O,EAAA5O,GAAA2O,EAAA3O,EAAAgI,EAEA,OAAA4G,MAGAlC,IA4CA,OA1CAA,GAAAmC,MAAA,SAAArM,GACA,MAAAoM,GAAApM,IAGAkK,EAAAoC,UAAA,WACA,MAAAF,GAAA1O,QAGAwM,EAAAqC,SAAA,SAAAC,GAIA,OAFAL,GAAA,GAAA5J,OAAA2H,EAAAoC,YAAAE,EAAAF,YAAA,GAEA9O,EAAA,EAAqBA,EAAA0M,EAAAoC,YAAuB9O,GAAA,EAC5C,OAAAsI,GAAA,EAAuBA,EAAA0G,EAAAF,YAAmBxG,GAAA,EAC1CqG,EAAA3O,EAAAsI,IAAA2G,EAAAC,KAAAD,EAAAE,KAAAzC,EAAAmC,MAAA7O,IAAAiP,EAAAE,KAAAH,EAAAH,MAAAvG,IAIA,OAAAoG,GAAAC,EAAA,IAGAjC,EAAA0C,IAAA,SAAAJ,GAEA,GAAAtC,EAAAoC,YAAAE,EAAAF,YAAA,EACA,MAAApC,EAMA,QAHA2C,GAAAJ,EAAAE,KAAAzC,EAAAmC,MAAA,IAAAI,EAAAE,KAAAH,EAAAH,MAAA,IAEAF,EAAA,GAAA5J,OAAA2H,EAAAoC,aACA9O,EAAA,EAAqBA,EAAA0M,EAAAoC,YAAuB9O,GAAA,EAC5C2O,EAAA3O,GAAA0M,EAAAmC,MAAA7O,EAGA,QAAAA,GAAA,EAAqBA,EAAAgP,EAAAF,YAAmB9O,GAAA,EACxC2O,EAAA3O,IAAAiP,EAAAC,KAAAD,EAAAE,KAAAH,EAAAH,MAAA7O,IAAAqP,EAIA,OAAAX,GAAAC,EAAA,GAAAS,IAAAJ,IAGAtC,EA7oCA,GAAAb,GAAA,SAAAW,EAAA8C,GAEA,GAAAC,GAAA,IACAC,EAAA,GAEAC,EAAAjD,EACAkD,EAAAC,EAAAL,GACAM,EAAA,KACAC,EAAA,EACAC,EAAA,KACAC,KAEArD,KAEAsD,EAAA,SAAAC,EAAAC,GAEAL,EAAA,EAAAJ,EAAA,GACAG,EAAA,SAAAO,GAEA,OADAC,GAAA,GAAArL,OAAAoL,GACA5K,EAAA,EAAyBA,EAAA4K,EAAmB5K,GAAA,GAC5C6K,EAAA7K,GAAA,GAAAR,OAAAoL,EACA,QAAA9K,GAAA,EAA2BA,EAAA8K,EAAmB9K,GAAA,EAC9C+K,EAAA7K,GAAAF,GAAA,KAGA,MAAA+K,IACOP,GAEPQ,EAAA,KACAA,EAAAR,EAAA,KACAQ,EAAA,EAAAR,EAAA,GACAS,IACAC,IACAC,EAAAP,EAAAC,GAEAT,GAAA,GACAgB,EAAAR,GAGA,MAAAH,IACAA,EAAAY,EAAAjB,EAAAC,EAAAK,IAGAY,EAAAb,EAAAI,IAGAG,EAAA,SAAA9K,EAAAF,GAEA,OAAAuF,IAAA,EAAsBA,GAAA,EAAQA,GAAA,EAE9B,KAAArF,EAAAqF,IAAA,GAAAiF,GAAAtK,EAAAqF,GAEA,OAAAgG,IAAA,EAAwBA,GAAA,EAAQA,GAAA,EAEhCvL,EAAAuL,IAAA,GAAAf,GAAAxK,EAAAuL,IAEA,GAAAhG,MAAA,OAAAgG,GAAA,GAAAA,IACA,GAAAA,MAAA,OAAAhG,GAAA,GAAAA,IACA,GAAAA,MAAA,MAAAgG,MAAA,EACAhB,EAAArK,EAAAqF,GAAAvF,EAAAuL,IAAA,EAEAhB,EAAArK,EAAAqF,GAAAvF,EAAAuL,IAAA,IAMAC,EAAA,WAKA,OAHAC,GAAA,EACAC,EAAA,EAEA/Q,EAAA,EAAqBA,EAAA,EAAOA,GAAA,GAE5BgQ,GAAA,EAAAhQ,EAEA,IAAAgR,GAAAC,EAAAC,aAAAxE,IAEA,GAAA1M,GAAA8Q,EAAAE,KACAF,EAAAE,EACAD,EAAA/Q,GAIA,MAAA+Q,IAGAR,EAAA,WAEA,OAAA3F,GAAA,EAAqBA,EAAAiF,EAAA,EAAsBjF,GAAA,EAC3C,MAAAgF,EAAAhF,GAAA,KAGAgF,EAAAhF,GAAA,GAAAA,EAAA,KAGA,QAAAgG,GAAA,EAAqBA,EAAAf,EAAA,EAAsBe,GAAA,EAC3C,MAAAhB,EAAA,GAAAgB,KAGAhB,EAAA,GAAAgB,KAAA,OAIAN,EAAA,WAIA,OAFAa,GAAAF,EAAAG,mBAAA3B,GAEAzP,EAAA,EAAqBA,EAAAmR,EAAAjR,OAAgBF,GAAA,EAErC,OAAAsI,GAAA,EAAuBA,EAAA6I,EAAAjR,OAAgBoI,GAAA,GAEvC,GAAA/C,GAAA4L,EAAAnR,GACAqF,EAAA8L,EAAA7I,EAEA,UAAAsH,EAAArK,GAAAF,GAIA,OAAAuF,IAAA,EAA0BA,GAAA,EAAQA,GAAA,EAElC,OAAAgG,IAAA,EAA4BA,GAAA,EAAQA,GAAA,EAEpChG,IAAA,MAAAA,GAAAgG,IAAA,MAAAA,GACA,GAAAhG,GAAA,GAAAgG,EACAhB,EAAArK,EAAAqF,GAAAvF,EAAAuL,IAAA,EAEAhB,EAAArK,EAAAqF,GAAAvF,EAAAuL,IAAA,IAQAH,EAAA,SAAAR,GAIA,OAFAoB,GAAAJ,EAAAK,iBAAA7B,GAEAzP,EAAA,EAAqBA,EAAA,GAAQA,GAAA,GAC7B,GAAAoP,IAAAa,GAAA,IAAAoB,GAAArR,EAAA,EACA4P,GAAApI,KAAA+J,MAAAvR,EAAA,IAAAA,EAAA,EAAA6P,EAAA,KAAAT,EAGA,OAAApP,GAAA,EAAqBA,EAAA,GAAQA,GAAA,GAC7B,GAAAoP,IAAAa,GAAA,IAAAoB,GAAArR,EAAA,EACA4P,GAAA5P,EAAA,EAAA6P,EAAA,KAAArI,KAAA+J,MAAAvR,EAAA,IAAAoP,IAIAoB,EAAA,SAAAP,EAAAC,GAMA,OAJAhM,GAAAwL,GAAA,EAAAQ,EACAmB,EAAAJ,EAAAO,eAAAtN,GAGAlE,EAAA,EAAqBA,EAAA,GAAQA,GAAA,GAE7B,GAAAoP,IAAAa,GAAA,IAAAoB,GAAArR,EAAA,EAEAA,GAAA,EACA4P,EAAA5P,GAAA,GAAAoP,EACSpP,EAAA,EACT4P,EAAA5P,EAAA,MAAAoP,EAEAQ,EAAAC,EAAA,GAAA7P,GAAA,GAAAoP,EAKA,OAAApP,GAAA,EAAqBA,EAAA,GAAQA,GAAA,GAE7B,GAAAoP,IAAAa,GAAA,IAAAoB,GAAArR,EAAA,EAEAA,GAAA,EACA4P,EAAA,GAAAC,EAAA7P,EAAA,GAAAoP,EACSpP,EAAA,EACT4P,EAAA,MAAA5P,EAAA,KAAAoP,EAEAQ,EAAA,MAAA5P,EAAA,GAAAoP,EAKAQ,EAAAC,EAAA,OAAAI,GAGAU,EAAA,SAAAzM,EAAAgM,GAQA,OANAuB,IAAA,EACAlM,EAAAsK,EAAA,EACA6B,EAAA,EACAC,EAAA,EACAC,EAAAX,EAAAY,gBAAA3B,GAEA7K,EAAAwK,EAAA,EAAsCxK,EAAA,EAASA,GAAA,EAI/C,IAFA,GAAAA,OAAA,KAEA,CAEA,OAAAuL,GAAA,EAAyBA,EAAA,EAAOA,GAAA,EAEhC,SAAAhB,EAAArK,GAAAF,EAAAuL,GAAA,CAEA,GAAAvG,IAAA,CAEAsH,GAAAzN,EAAAhE,SACAmK,EAAA,IAAAnG,EAAAyN,KAAAD,EAAA,GAGA,IAAAI,GAAAF,EAAArM,EAAAF,EAAAuL,EAEAkB,KACAzH,MAGAuF,EAAArK,GAAAF,EAAAuL,GAAAvG,EACAqH,GAAA,EAEAA,IAAA,IACAC,GAAA,EACAD,EAAA,GAOA,GAFAnM,GAAAkM,EAEAlM,EAAA,GAAAsK,GAAAtK,EAAA,CACAA,GAAAkM,EACAA,IACA,UAMAM,EAAA,SAAAC,EAAAC,GAUA,OARAjK,GAAA,EAEAkK,EAAA,EACAC,EAAA,EAEAC,EAAA,GAAArN,OAAAkN,EAAA/R,QACAmS,EAAA,GAAAtN,OAAAkN,EAAA/R,QAEA0K,EAAA,EAAqBA,EAAAqH,EAAA/R,OAAqB0K,GAAA,GAE1C,GAAA0H,GAAAL,EAAArH,GAAA2H,UACAC,EAAAP,EAAArH,GAAA6H,WAAAH,CAEAJ,GAAA1K,KAAAkL,IAAAR,EAAAI,GACAH,EAAA3K,KAAAkL,IAAAP,EAAAK,GAEAJ,EAAAxH,GAAA,GAAA7F,OAAAuN,EAEA,QAAAtS,GAAA,EAAuBA,EAAAoS,EAAAxH,GAAA1K,OAAsBF,GAAA,EAC7CoS,EAAAxH,GAAA5K,GAAA,IAAAgS,EAAAW,YAAA3S,EAAAgI,EAEAA,IAAAsK,CAEA,IAAAM,GAAA3B,EAAA4B,0BAAAL,GACAM,EAAApE,EAAA0D,EAAAxH,GAAAgI,EAAA9D,YAAA,GAEAiE,EAAAD,EAAA1D,IAAAwD,EACAP,GAAAzH,GAAA,GAAA7F,OAAA6N,EAAA9D,YAAA,EACA,QAAA9O,GAAA,EAAuBA,EAAAqS,EAAAzH,GAAA1K,OAAsBF,GAAA,GAC7C,GAAAgT,GAAAhT,EAAA+S,EAAAjE,YAAAuD,EAAAzH,GAAA1K,MACAmS,GAAAzH,GAAA5K,GAAAgT,GAAA,EAAAD,EAAAlE,MAAAmE,GAAA,GAKA,OADAC,GAAA,EACAjT,EAAA,EAAqBA,EAAAiS,EAAA/R,OAAqBF,GAAA,EAC1CiT,GAAAhB,EAAAjS,GAAAyS,UAMA,QAHAvO,GAAA,GAAAa,OAAAkO,GACAzQ,EAAA,EAEAxC,EAAA,EAAqBA,EAAAkS,EAAgBlS,GAAA,EACrC,OAAA4K,GAAA,EAAuBA,EAAAqH,EAAA/R,OAAqB0K,GAAA,EAC5C5K,EAAAoS,EAAAxH,GAAA1K,SACAgE,EAAA1B,GAAA4P,EAAAxH,GAAA5K,GACAwC,GAAA,EAKA,QAAAxC,GAAA,EAAqBA,EAAAmS,EAAgBnS,GAAA,EACrC,OAAA4K,GAAA,EAAuBA,EAAAqH,EAAA/R,OAAqB0K,GAAA,EAC5C5K,EAAAqS,EAAAzH,GAAA1K,SACAgE,EAAA1B,GAAA6P,EAAAzH,GAAA5K,GACAwC,GAAA,EAKA,OAAA0B,IAGAwM,EAAA,SAAAlE,EAAA8C,EAAA4D,GAMA,OAJAjB,GAAAkB,EAAAC,YAAA5G,EAAA8C,GAEA0C,EAAAqB,IAEArT,EAAA,EAAqBA,EAAAkT,EAAAhT,OAAqBF,GAAA,GAC1C,GAAAkE,GAAAgP,EAAAlT,EACAgS,GAAAsB,IAAApP,EAAAqP,UAAA,GACAvB,EAAAsB,IAAApP,EAAA4K,YAAAmC,EAAAuC,gBAAAtP,EAAAqP,UAAA/G,IACAtI,EAAAuP,MAAAzB,GAKA,OADA0B,GAAA,EACA1T,EAAA,EAAqBA,EAAAiS,EAAA/R,OAAqBF,GAAA,EAC1C0T,GAAAzB,EAAAjS,GAAAuS,SAGA,IAAAP,EAAAwB,kBAAA,EAAAE,EACA,+BACA1B,EAAAwB,kBACA,IACA,EAAAE,EACA,GASA,KALA1B,EAAAwB,kBAAA,KAAAE,GACA1B,EAAAsB,IAAA,KAIAtB,EAAAwB,kBAAA,MACAxB,EAAA2B,QAAA,EAIA,SAEA,GAAA3B,EAAAwB,mBAAA,EAAAE,EACA,KAIA,IAFA1B,EAAAsB,IAAA/D,EAAA,GAEAyC,EAAAwB,mBAAA,EAAAE,EACA,KAEA1B,GAAAsB,IAAA9D,EAAA,GAGA,MAAAuC,GAAAC,EAAAC,GAGAvF,GAAAQ,QAAA,SAAAhJ,EAAA6C,GAEAA,KAAA,MAEA,IAAA6M,GAAA,IAEA,QAAA7M,GACA,cACA6M,EAAAC,EAAA3P,EACA,MACA,oBACA0P,EAAAE,EAAA5P,EACA,MACA,YACA0P,EAAAG,EAAA7P,EACA,MACA,aACA0P,EAAAI,EAAA9P,EACA,MACA,SACA,aAAA6C,EAGAgJ,EAAAhM,KAAA6P,GACA9D,EAAA,MAGApD,EAAA/D,OAAA,SAAApD,EAAAF,GACA,GAAAE,EAAA,GAAAsK,GAAAtK,GAAAF,EAAA,GAAAwK,GAAAxK,EACA,KAAAE,GAAA,IAAAF,CAEA,OAAAuK,GAAArK,GAAAF,IAGAqH,EAAAU,eAAA,WACA,MAAAyC,IAGAnD,EAAAS,KAAA,WACA,GAAAsC,EAAA,GAGA,IAFA,GAAAjD,GAAA,EAEcA,EAAA,GAAiBA,IAAA,CAI/B,OAHAyF,GAAAkB,EAAAC,YAAA5G,EAAAkD,GACAsC,EAAAqB,IAEArT,EAAA,EAAyBA,EAAA+P,EAAA7P,OAAsBF,IAAA,CAC/C,GAAAkE,GAAA6L,EAAA/P,EACAgS,GAAAsB,IAAApP,EAAAqP,UAAA,GACAvB,EAAAsB,IAAApP,EAAA4K,YAAAmC,EAAAuC,gBAAAtP,EAAAqP,UAAA/G,IACAtI,EAAAuP,MAAAzB,GAIA,OADA0B,GAAA,EACA1T,EAAA,EAAyBA,EAAAiS,EAAA/R,OAAqBF,IAC9C0T,GAAAzB,EAAAjS,GAAAuS,SAGA,IAAAP,EAAAwB,mBAAA,EAAAE,EACA,MAIAjE,EAAAjD,EAGAwD,GAAA,EAAAa,MAGAnE,EAAAuH,eAAA,SAAA7P,EAAA8P,GAEA9P,KAAA,EACA8P,EAAA,mBAAAA,GAAA,EAAA9P,EAAA8P,CAEA,IAAAC,GAAA,EAEAA,IAAA,iBACAA,GAAA,0CACAA,GAAA,8BACAA,GAAA,0BAA+BD,EAAA,MAC/BC,GAAA,KACAA,GAAA,SAEA,QAAAvJ,GAAA,EAAqBA,EAAA8B,EAAAU,iBAA4BxC,GAAA,GAEjDuJ,GAAA,MAEA,QAAAvD,GAAA,EAAuBA,EAAAlE,EAAAU,iBAA4BwD,GAAA,EACnDuD,GAAA,cACAA,GAAA,0CACAA,GAAA,8BACAA,GAAA,8BACAA,GAAA,WAAA/P,EAAA,MACA+P,GAAA,YAAA/P,EAAA,MACA+P,GAAA,sBACAA,GAAAzH,EAAA/D,OAAAiC,EAAAgG,GAAA,oBACAuD,GAAA,IACAA,GAAA,KAGAA,IAAA,QAMA,MAHAA,IAAA,WACAA,GAAA,YAKAzH,EAAA0H,aAAA,SAAAhQ,EAAA8P,GAEA9P,KAAA,EACA8P,EAAA,mBAAAA,GAAA,EAAA9P,EAAA8P,CACA,IACAtD,GAAAyD,EAAAzJ,EAAA0J,EAAAC,EADApJ,EAAAuB,EAAAU,iBAAAhJ,EAAA,EAAA8P,EACAM,EAAA,EAaA,KAXAD,EAAA,IAAAnQ,EAAA,QAAAA,EACA,KAAAA,EAAA,SAAAA,EAAA,KAEAoQ,GAAA,wDACAA,GAAA,WAAArJ,EAAA,MACAqJ,GAAA,YAAArJ,EAAA,MACAqJ,GAAA,iBAAArJ,EAAA,IAAAA,EAAA,KACAqJ,GAAA,wCACAA,GAAA,gEACAA,GAAA,YAEA5J,EAAA,EAAiBA,EAAA8B,EAAAU,iBAA4BxC,GAAA,EAE7C,IADA0J,EAAA1J,EAAAxG,EAAA8P,EACAtD,EAAA,EAAmBA,EAAAlE,EAAAU,iBAA4BwD,GAAA,EAC/ClE,EAAA/D,OAAAiC,EAAAgG,KACAyD,EAAAzD,EAAAxM,EAAA8P,EACAM,GAAA,IAAAH,EAAA,IAAAC,EAAAC,EAQA,OAHAC,IAAA,wCACAA,GAAA,UAKA9H,EAAA+H,cAAA,SAAArQ,EAAA8P,GAEA9P,KAAA,EACA8P,EAAA,mBAAAA,GAAA,EAAA9P,EAAA8P,CAEA,IAAA/I,GAAAuB,EAAAU,iBAAAhJ,EAAA,EAAA8P,EACA7F,EAAA6F,EACAxB,EAAAvH,EAAA+I,CAEA,OAAAO,GAAAtJ,IAAA,SAAA/F,EAAAE,GACA,GAAA+I,GAAAjJ,KAAAsN,GAAArE,GAAA/I,KAAAoN,EAAA,CACA,GAAA9B,GAAApJ,KAAA+J,OAAAnM,EAAAiJ,GAAAjK,GACAwG,EAAApD,KAAA+J,OAAAjM,EAAA+I,GAAAjK,EACA,OAAAsI,GAAA/D,OAAAiC,EAAAgG,GAAA,IAEA,YAKAlE,EAAAgI,aAAA,SAAAtQ,EAAA8P,EAAAS,GAEAvQ,KAAA,EACA8P,EAAA,mBAAAA,GAAA,EAAA9P,EAAA8P,CAEA,IAAA/I,GAAAuB,EAAAU,iBAAAhJ,EAAA,EAAA8P,EAEAU,EAAA,EAkBA,OAjBAA,IAAA,OACAA,GAAA,SACAA,GAAAlI,EAAA+H,cAAArQ,EAAA8P,GACAU,GAAA,IACAA,GAAA,WACAA,GAAAzJ,EACAyJ,GAAA,IACAA,GAAA,YACAA,GAAAzJ,EACAyJ,GAAA,IACAD,IACAC,GAAA,SACAA,GAAAD,EACAC,GAAA,KAEAA,GAAA,KAKA,IAAAC,GAAA,SAAAX,GACA,GAAA9P,GAAA,CACA8P,GAAA,mBAAAA,GAAA,EAAA9P,EAAA8P,CAEA,IAIA5O,GAAAF,EAAA0P,EAAAC,EAAAC,EAJA7J,EAAAuB,EAAAU,iBAAAhJ,EAAA,EAAA8P,EACA7F,EAAA6F,EACAxB,EAAAvH,EAAA+I,EAIAe,GACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KAGAC,EAAA,EACA,KAAAhQ,EAAA,EAAiBA,EAAA6F,EAAU7F,GAAA,GAG3B,IAFAwP,EAAAtN,KAAA+J,OAAAjM,EAAA+I,GAAAjK,GACA2Q,EAAAvN,KAAA+J,OAAAjM,EAAA,EAAA+I,GAAAjK,GACAgB,EAAA,EAAmBA,EAAA+F,EAAU/F,GAAA,EAC7B4P,EAAA,IAEA3G,GAAAjJ,KAAAsN,GAAArE,GAAA/I,KAAAoN,GAAAhG,EAAA/D,OAAAmM,EAAAtN,KAAA+J,OAAAnM,EAAAiJ,GAAAjK,MACA4Q,EAAA,KAIAA,GADA3G,GAAAjJ,KAAAsN,GAAArE,GAAA/I,EAAA,GAAAA,EAAA,EAAAoN,GAAAhG,EAAA/D,OAAAoM,EAAAvN,KAAA+J,OAAAnM,EAAAiJ,GAAAjK,IACA,IAGA,IAIAkR,GAAAL,EAAAD,EAGAM,IAAA,KAGA,MAAAnK,GAAA,EACAmK,EAAAC,UAAA,EAAAD,EAAApV,OAAAiL,EAAA,GAAApG,MAAAoG,EAAA,GAAA/D,KAAA,KAGAkO,EAAAC,UAAA,EAAAD,EAAApV,OAAA,GAyDA,OAtDAwM,GAAA8I,YAAA,SAAApR,EAAA8P,GAGA,GAFA9P,KAAA,EAEAA,EAAA,EACA,MAAAyQ,GAAAX,EAGA9P,IAAA,EACA8P,EAAA,mBAAAA,GAAA,EAAA9P,EAAA8P,CAEA,IAIA5O,GAAAF,EAAAwF,EAAAoK,EAJA7J,EAAAuB,EAAAU,iBAAAhJ,EAAA,EAAA8P,EACA7F,EAAA6F,EACAxB,EAAAvH,EAAA+I,EAIAuB,EAAA1Q,MAAAX,EAAA,GAAAgD,KAAA,MACAsO,EAAA3Q,MAAAX,EAAA,GAAAgD,KAAA,MAEAkO,EAAA,GACAK,EAAA,EACA,KAAArQ,EAAA,EAAiBA,EAAA6F,EAAU7F,GAAA,GAG3B,IAFAsF,EAAApD,KAAA+J,OAAAjM,EAAA+I,GAAAjK,GACAuR,EAAA,GACAvQ,EAAA,EAAmBA,EAAA+F,EAAU/F,GAAA,EAC7B4P,EAAA,EAEA3G,GAAAjJ,KAAAsN,GAAArE,GAAA/I,KAAAoN,GAAAhG,EAAA/D,OAAAiC,EAAApD,KAAA+J,OAAAnM,EAAAiJ,GAAAjK,MACA4Q,EAAA,GAIAW,GAAAX,EAAAS,EAAAC,CAGA,KAAA9K,EAAA,EAAmBA,EAAAxG,EAAcwG,GAAA,EACjC0K,GAAAK,EAAA,KAIA,MAAAL,GAAAC,UAAA,EAAAD,EAAApV,OAAA,IAGAwM,EAAAkJ,kBAAA,SAAAvR,EAAAD,GACAA,KAAA,CAEA,QADAlE,GAAAwM,EAAAU,iBACA7H,EAAA,EAAuBA,EAAArF,EAAcqF,IACrC,OAAAF,GAAA,EAAyBA,EAAAnF,EAAcmF,IACvChB,EAAAuB,UAAA8G,EAAA/D,OAAApD,EAAAF,GAAA,gBACAhB,EAAAwB,SAAAN,EAAAnB,EAAAiB,EAAAjB,QAKAsI,EAOAb,GAAAS,oBACAL,QAAA,SAAA4J,GAEA,OADAC,MACA9V,EAAA,EAAqBA,EAAA6V,EAAA3V,OAAcF,GAAA,GACnC,GAAA4Q,GAAAiF,EAAAE,WAAA/V,EACA8V,GAAA/R,KAAA,IAAA6M,GAEA,MAAAkF,KAIAjK,EAAAQ,cAAAR,EAAAS,mBAAA,QAWAT,EAAAmK,oBAAA,SAAAC,EAAAC,GAIA,GAAAC,GAAA,WAWA,IATA,GAAAC,GAAAC,EAAAJ,GACAK,EAAA,WACA,GAAAC,GAAAH,EAAAE,MACA,IAAAC,IAAA,YACA,OAAAA,IAGA3N,EAAA,EACAuN,OACA,CACA,GAAAK,GAAAJ,EAAAE,MACA,IAAAE,IAAA,OACA,IAAAC,GAAAH,IACAI,EAAAJ,IACAK,EAAAL,IACA/N,EAAAqO,OAAAC,aAAAL,GAAA,EAAAC,GACAK,EAAAJ,GAAA,EAAAC,CACAR,GAAA5N,GAAAuO,EACAlO,GAAA,EAEA,GAAAA,GAAAsN,EACA,KAAAtN,GAAA,OAAAsN,CAGA,OAAAC,MAGAY,EAAA,IAAAhB,WAAA,EAEA,iBAAAF,GAEA,OADAC,MACA9V,EAAA,EAAqBA,EAAA6V,EAAA3V,OAAcF,GAAA,GACnC,GAAA4Q,GAAAiF,EAAAE,WAAA/V,EACA,IAAA4Q,EAAA,IACAkF,EAAA/R,KAAA6M,OACS,CACT,GAAA2F,GAAAJ,EAAAN,EAAAmB,OAAAhX,GACA,iBAAAuW,IACA,IAAAA,MAEAT,EAAA/R,KAAAwS,IAGAT,EAAA/R,KAAAwS,IAAA,GACAT,EAAA/R,KAAA,IAAAwS,IAGAT,EAAA/R,KAAAgT,IAIA,MAAAjB,IAQA,IAAAmB,IACAC,YAAA,EACAC,eAAA,EACAC,eAAA,EACAC,WAAA,GAOA1H,GACA2H,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAOAC,GACAC,WAAA,EACAC,WAAA,EACAC,WAAA,EACAC,WAAA,EACAC,WAAA,EACAC,WAAA,EACAC,WAAA,EACAC,WAAA,GAOAjH,EAAA,WAEA,GAAAkH,QAEA,OACA,OACA,OACA,OACA,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBAEAC,EAAA,KACAC,EAAA,KACAC,EAAA,MAEA5L,KAEA6L,EAAA,SAAArU,GAEA,IADA,GAAAsU,GAAA,EACA,GAAAtU,GACAsU,GAAA,EACAtU,KAAA,CAEA,OAAAsU,GAgNA,OA7MA9L,GAAA8E,eAAA,SAAAtN,GAEA,IADA,GAAAuU,GAAAvU,GAAA,GACAqU,EAAAE,GAAAF,EAAAH,IAAA,GACAK,GAAAL,GAAAG,EAAAE,GAAAF,EAAAH,EAEA,QAAAlU,GAAA,GAAAuU,GAAAH,GAGA5L,EAAA4E,iBAAA,SAAApN,GAEA,IADA,GAAAuU,GAAAvU,GAAA,GACAqU,EAAAE,GAAAF,EAAAF,IAAA,GACAI,GAAAJ,GAAAE,EAAAE,GAAAF,EAAAF,EAEA,OAAAnU,IAAA,GAAAuU,GAGA/L,EAAA0E,mBAAA,SAAA5E,GACA,MAAA2L,GAAA3L,EAAA,IAGAE,EAAAmF,gBAAA,SAAA3B,GAEA,OAAAA,GAEA,IAAAwH,GAAAC,WACA,gBAAA3X,EAAAsI,GAA+B,OAAAtI,EAAAsI,GAAA,KAC/B,KAAAoP,GAAAE,WACA,gBAAA5X,EAAAsI,GAA+B,MAAAtI,GAAA,KAC/B,KAAA0X,GAAAG,WACA,gBAAA7X,EAAAsI,GAA+B,MAAAA,GAAA,KAC/B,KAAAoP,GAAAI,WACA,gBAAA9X,EAAAsI,GAA+B,OAAAtI,EAAAsI,GAAA,KAC/B,KAAAoP,GAAAK,WACA,gBAAA/X,EAAAsI,GAA+B,OAAAd,KAAA+J,MAAAvR,EAAA,GAAAwH,KAAA+J,MAAAjJ,EAAA,SAC/B,KAAAoP,GAAAM,WACA,gBAAAhY,EAAAsI,GAA+B,MAAAtI,GAAAsI,EAAA,EAAAtI,EAAAsI,EAAA,KAC/B,KAAAoP,GAAAO,WACA,gBAAAjY,EAAAsI,GAA+B,OAAAtI,EAAAsI,EAAA,EAAAtI,EAAAsI,EAAA,QAC/B,KAAAoP,GAAAQ,WACA,gBAAAlY,EAAAsI,GAA+B,OAAAtI,EAAAsI,EAAA,GAAAtI,EAAAsI,GAAA,QAE/B,SACA,wBAAA4H,IAIAxD,EAAAmG,0BAAA,SAAA6F,GAEA,OADAC,GAAAjK,GAAA,MACA1O,EAAA,EAAqBA,EAAA0Y,EAAwB1Y,GAAA,EAC7C2Y,IAAA5J,SAAAL,GAAA,EAAAO,EAAAC,KAAAlP,IAAA,GAEA,OAAA2Y,IAGAjM,EAAA8G,gBAAA,SAAAzM,EAAAuG,GAEA,MAAAA,KAAA,GAIA,OAAAvG,GACA,IAAAkQ,GAAAC,YAAA,SACA,KAAAD,GAAAE,eAAA,QACA,KAAAF,GAAAG,eAAA,QACA,KAAAH,GAAAI,WAAA,QACA,SACA,aAAAtQ,MAGO,IAAAuG,EAAA,GAIP,OAAAvG,GACA,IAAAkQ,GAAAC,YAAA,SACA,KAAAD,GAAAE,eAAA,SACA,KAAAF,GAAAG,eAAA,SACA,KAAAH,GAAAI,WAAA,SACA,SACA,aAAAtQ,MAGO,MAAAuG,EAAA,IAcP,aAAAA,CAVA,QAAAvG,GACA,IAAAkQ,GAAAC,YAAA,SACA,KAAAD,GAAAE,eAAA,SACA,KAAAF,GAAAG,eAAA,SACA,KAAAH,GAAAI,WAAA,SACA,SACA,aAAAtQ,KAQA2F,EAAAwE,aAAA,SAAArF,GAQA,OANAsE,GAAAtE,EAAAuB,iBAEA4D,EAAA,EAIAzL,EAAA,EAAuBA,EAAA4K,EAAmB5K,GAAA,EAC1C,OAAAF,GAAA,EAAyBA,EAAA8K,EAAmB9K,GAAA,GAK5C,OAHAuT,GAAA,EACAvO,EAAAwB,EAAAlD,OAAApD,EAAAF,GAEAuF,GAAA,EAA0BA,GAAA,EAAQA,GAAA,EAElC,KAAArF,EAAAqF,EAAA,GAAAuF,GAAA5K,EAAAqF,GAIA,OAAAgG,IAAA,EAA4BA,GAAA,EAAQA,GAAA,EAEpCvL,EAAAuL,EAAA,GAAAT,GAAA9K,EAAAuL,GAIA,GAAAhG,GAAA,GAAAgG,GAIAvG,GAAAwB,EAAAlD,OAAApD,EAAAqF,EAAAvF,EAAAuL,KACAgI,GAAA,EAKAA,GAAA,IACA5H,GAAA,EAAA4H,EAAA,GAOA,OAAArT,GAAA,EAAuBA,EAAA4K,EAAA,EAAuB5K,GAAA,EAC9C,OAAAF,GAAA,EAAyBA,EAAA8K,EAAA,EAAuB9K,GAAA,GAChD,GAAAuD,GAAA,CACAiD,GAAAlD,OAAApD,EAAAF,KAAAuD,GAAA,GACAiD,EAAAlD,OAAApD,EAAA,EAAAF,KAAAuD,GAAA,GACAiD,EAAAlD,OAAApD,EAAAF,EAAA,KAAAuD,GAAA,GACAiD,EAAAlD,OAAApD,EAAA,EAAAF,EAAA,KAAAuD,GAAA,GACA,GAAAA,GAAA,GAAAA,IACAoI,GAAA,GAOA,OAAAzL,GAAA,EAAuBA,EAAA4K,EAAmB5K,GAAA,EAC1C,OAAAF,GAAA,EAAyBA,EAAA8K,EAAA,EAAuB9K,GAAA,EAChDwG,EAAAlD,OAAApD,EAAAF,KACAwG,EAAAlD,OAAApD,EAAAF,EAAA,IACAwG,EAAAlD,OAAApD,EAAAF,EAAA,IACAwG,EAAAlD,OAAApD,EAAAF,EAAA,IACAwG,EAAAlD,OAAApD,EAAAF,EAAA,KACAwG,EAAAlD,OAAApD,EAAAF,EAAA,IACAwG,EAAAlD,OAAApD,EAAAF,EAAA,KACA2L,GAAA,GAKA,QAAA3L,GAAA,EAAuBA,EAAA8K,EAAmB9K,GAAA,EAC1C,OAAAE,GAAA,EAAyBA,EAAA4K,EAAA,EAAuB5K,GAAA,EAChDsG,EAAAlD,OAAApD,EAAAF,KACAwG,EAAAlD,OAAApD,EAAA,EAAAF,IACAwG,EAAAlD,OAAApD,EAAA,EAAAF,IACAwG,EAAAlD,OAAApD,EAAA,EAAAF,IACAwG,EAAAlD,OAAApD,EAAA,EAAAF,KACAwG,EAAAlD,OAAApD,EAAA,EAAAF,IACAwG,EAAAlD,OAAApD,EAAA,EAAAF,KACA2L,GAAA,GASA,QAFA6H,GAAA,EAEAxT,EAAA,EAAuBA,EAAA8K,EAAmB9K,GAAA,EAC1C,OAAAE,GAAA,EAAyBA,EAAA4K,EAAmB5K,GAAA,EAC5CsG,EAAAlD,OAAApD,EAAAF,KACAwT,GAAA,EAKA,IAAAxJ,GAAA7H,KAAAsR,IAAA,IAAAD,EAAA1I,IAAA,KAGA,OAFAa,IAAA,GAAA3B,GAKA3C,KAOAuC,EAAA,WAMA,OAJA8J,GAAA,GAAAhU,OAAA,KACAiU,EAAA,GAAAjU,OAAA,KAGA/E,EAAA,EAAmBA,EAAA,EAAOA,GAAA,EAC1B+Y,EAAA/Y,GAAA,GAAAA,CAEA,QAAAA,GAAA,EAAmBA,EAAA,IAASA,GAAA,EAC5B+Y,EAAA/Y,GAAA+Y,EAAA/Y,EAAA,GACA+Y,EAAA/Y,EAAA,GACA+Y,EAAA/Y,EAAA,GACA+Y,EAAA/Y,EAAA,EAEA,QAAAA,GAAA,EAAmBA,EAAA,IAASA,GAAA,EAC5BgZ,EAAAD,EAAA/Y,KAGA,IAAA0M,KAwBA,OAtBAA,GAAAyC,KAAA,SAAA8J,GAEA,GAAAA,EAAA,EACA,aAAAA,EAAA,GAGA,OAAAD,GAAAC,IAGAvM,EAAAwC,KAAA,SAAA+J,GAEA,KAAAA,EAAA,GACAA,GAAA,GAGA,MAAAA,GAAA,KACAA,GAAA,GAGA,OAAAF,GAAAE,IAGAvM,KA4EAyG,EAAA,WAEA,GAAA+F,KAQA,UACA,UACA,UACA,SAGA,UACA,UACA,UACA,UAGA,UACA,UACA,UACA,UAGA,WACA,UACA,UACA,SAGA,YACA,UACA,kBACA,kBAGA,UACA,UACA,UACA,UAGA,UACA,UACA,kBACA,kBAGA,WACA,kBACA,kBACA,kBAGA,YACA,kBACA,kBACA,kBAGA,kBACA,kBACA,kBACA,kBAGA,WACA,kBACA,kBACA,kBAGA,oBACA,kBACA,kBACA,kBAGA,YACA,kBACA,kBACA,mBAGA,sBACA,kBACA,mBACA,mBAGA,oBACA,kBACA,kBACA,mBAGA,oBACA,kBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,mBAGA,sBACA,kBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,oBAGA,sBACA,WACA,mBACA,mBAGA,sBACA,WACA,mBACA,WAGA,sBACA,mBACA,oBACA,oBAGA,sBACA,mBACA,oBACA,mBAGA,sBACA,mBACA,mBACA,oBAGA,uBACA,mBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,oBAGA,uBACA,mBACA,mBACA,oBAGA,sBACA,mBACA,mBACA,oBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,mBACA,mBACA,oBAGA,aACA,oBACA,oBACA,oBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,oBACA,mBACA,mBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,mBACA,oBACA,mBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,mBACA,oBACA,oBAGA,uBACA,oBACA,oBACA,oBAGAC,EAAA,SAAA1G,EAAAF,GACA,GAAA7F,KAGA,OAFAA,GAAA+F,aACA/F,EAAA6F,YACA7F,GAGAA,KAEA0M,EAAA,SAAA5M,EAAA8C,GAEA,OAAAA,GACA,IAAAK,GAAA2H,EACA,MAAA4B,GAAA,GAAA1M,EAAA,KACA,KAAAmD,GAAA4H,EACA,MAAA2B,GAAA,GAAA1M,EAAA,KACA,KAAAmD,GAAA6H,EACA,MAAA0B,GAAA,GAAA1M,EAAA,KACA,KAAAmD,GAAA8H,EACA,MAAAyB,GAAA,GAAA1M,EAAA,KACA,SACA,QA+BA,OA3BAE,GAAA0G,YAAA,SAAA5G,EAAA8C,GAEA,GAAA+J,GAAAD,EAAA5M,EAAA8C,EAEA,uBAAA+J,GACA,kCAAA7M,EACA,yBAAA8C,CAOA,QAJApP,GAAAmZ,EAAAnZ,OAAA,EAEAoZ,KAEAtZ,EAAA,EAAqBA,EAAAE,EAAYF,GAAA,EAMjC,OAJA4I,GAAAyQ,EAAA,EAAArZ,EAAA,GACAyS,EAAA4G,EAAA,EAAArZ,EAAA,GACAuS,EAAA8G,EAAA,EAAArZ,EAAA,GAEAsI,EAAA,EAAuBA,EAAAM,EAAWN,GAAA,EAClCgR,EAAAvV,KAAAoV,EAAA1G,EAAAF,GAIA,OAAA+G,IAGA5M,KAOA2G,EAAA,WAEA,GAAAkG,MACAC,EAAA,EAEA9M,IAmCA,OAjCAA,GAAAiG,UAAA,WACA,MAAA4G,IAGA7M,EAAAmC,MAAA,SAAArM,GACA,GAAAiX,GAAAjS,KAAA+J,MAAA/O,EAAA,EACA,YAAA+W,EAAAE,KAAA,EAAAjX,EAAA,MAGAkK,EAAA4G,IAAA,SAAA3E,EAAAzO,GACA,OAAAF,GAAA,EAAqBA,EAAAE,EAAYF,GAAA,EACjC0M,EAAAiH,OAAA,IAAAhF,IAAAzO,EAAAF,EAAA,OAIA0M,EAAA8G,gBAAA,WACA,MAAAgG,IAGA9M,EAAAiH,OAAA,SAAA+F,GAEA,GAAAD,GAAAjS,KAAA+J,MAAAiI,EAAA,EACAD,GAAArZ,QAAAuZ,GACAF,EAAAxV,KAAA,GAGA2V,IACAH,EAAAE,IAAA,MAAAD,EAAA,GAGAA,GAAA,GAGA9M,GAOAmH,EAAA,SAAA3P,GAEA,GAAAyV,GAAA1C,EAAAC,YACA0C,EAAA1V,EAEAwI,IAEAA,GAAA6G,QAAA,WACA,MAAAoG,IAGAjN,EAAAoC,UAAA,SAAAkD,GACA,MAAA4H,GAAA1Z,QAGAwM,EAAA+G,MAAA,SAAAzB,GAMA,IAJA,GAAA9N,GAAA0V,EAEA5Z,EAAA,EAEAA,EAAA,EAAAkE,EAAAhE,QACA8R,EAAAsB,IAAAuG,EAAA3V,EAAAqR,UAAAvV,IAAA,QACAA,GAAA,CAGAA,GAAAkE,EAAAhE,SACAgE,EAAAhE,OAAAF,GAAA,EACAgS,EAAAsB,IAAAuG,EAAA3V,EAAAqR,UAAAvV,IAAA,OACSkE,EAAAhE,OAAAF,GAAA,GACTgS,EAAAsB,IAAAuG,EAAA3V,EAAAqR,UAAAvV,IAAA,QAKA,IAAA6Z,GAAA,SAAAhE,GAEA,OADAlH,GAAA,EACA3O,EAAA,EAAqBA,EAAA6V,EAAA3V,OAAcF,GAAA,EACnC2O,EAAA,GAAAA,EAAAmL,EAAAjE,EAAAmB,OAAAhX,GAEA,OAAA2O,IAGAmL,EAAA,SAAAlJ,GACA,QAAAA,MAAA,IACA,MAAAA,GAAAmF,WAAA,OAAAA,WAAA,EAEA,uBAAAnF,EAGA,OAAAlE,IAOAoH,EAAA,SAAA5P,GAEA,GAAAyV,GAAA1C,EAAAE,eACAyC,EAAA1V,EAEAwI,IAEAA,GAAA6G,QAAA,WACA,MAAAoG,IAGAjN,EAAAoC,UAAA,SAAAkD,GACA,MAAA4H,GAAA1Z,QAGAwM,EAAA+G,MAAA,SAAAzB,GAMA,IAJA,GAAA6D,GAAA+D,EAEA5Z,EAAA,EAEAA,EAAA,EAAA6V,EAAA3V,QACA8R,EAAAsB,IACA,GAAAyG,EAAAlE,EAAAmB,OAAAhX,IACA+Z,EAAAlE,EAAAmB,OAAAhX,EAAA,QACAA,GAAA,CAGAA,GAAA6V,EAAA3V,QACA8R,EAAAsB,IAAAyG,EAAAlE,EAAAmB,OAAAhX,IAAA,GAIA,IAAA+Z,GAAA,SAAAnJ,GAEA,QAAAA,MAAA,IACA,MAAAA,GAAAmF,WAAA,OAAAA,WAAA,EACO,SAAAnF,MAAA,IACP,MAAAA,GAAAmF,WAAA,OAAAA,WAAA,KAEA,QAAAnF,GACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,SACA,sBAAAA,GAKA,OAAAlE,IAOAqH,EAAA,SAAA7P,GAEA,GAAAyV,GAAA1C,EAAAG,eAEA4C,EAAAnO,EAAAQ,cAAAnI,GAEAwI,IAgBA,OAdAA,GAAA6G,QAAA,WACA,MAAAoG,IAGAjN,EAAAoC,UAAA,SAAAkD,GACA,MAAAgI,GAAA9Z,QAGAwM,EAAA+G,MAAA,SAAAzB,GACA,OAAAhS,GAAA,EAAqBA,EAAAga,EAAA9Z,OAAmBF,GAAA,EACxCgS,EAAAsB,IAAA0G,EAAAha,GAAA,IAIA0M,GAOAsH,EAAA,SAAA9P,GAEA,GAAAyV,GAAA1C,EAAAI,WAGAhL,EAAAR,EAAAS,mBAAA,IACA,KAAAD,EACA,4BAEA,SAAAuE,EAAAqJ,GAEA,GAAAhK,GAAA5D,EAAAuE,EACA,OAAAX,EAAA/P,SAAA+P,EAAA,MAAAA,EAAA,KAAAgK,EACA,4BAEK,UAEL,IAAAD,GAAA3N,EAAAnI,GAEAwI,IAwCA,OAtCAA,GAAA6G,QAAA,WACA,MAAAoG,IAGAjN,EAAAoC,UAAA,SAAAkD,GACA,SAAAgI,EAAA9Z,OAAA,IAGAwM,EAAA+G,MAAA,SAAAzB,GAMA,IAJA,GAAA9N,GAAA8V,EAEAha,EAAA,EAEAA,EAAA,EAAAkE,EAAAhE,QAAA,CAEA,GAAA0Q,IAAA,IAAA1M,EAAAlE,KAAA,MAAAkE,EAAAlE,EAAA,EAEA,WAAA4Q,MAAA,MACAA,GAAA,UACS,aAAAA,MAAA,OAGT,yBAAA5Q,EAAA,OAAA4Q,CAFAA,IAAA,MAKAA,EAAA,KAAAA,IAAA,YAAAA,GAEAoB,EAAAsB,IAAA1C,EAAA,IAEA5Q,GAAA,EAGA,GAAAA,EAAAkE,EAAAhE,OACA,yBAAAF,EAAA,IAIA0M,GAWAwN,EAAA,WAEA,GAAAF,MAEAtN,IA0CA,OAxCAA,GAAAyN,UAAA,SAAA5D,GACAyD,EAAAjW,KAAA,IAAAwS,IAGA7J,EAAA0N,WAAA,SAAApa,GACA0M,EAAAyN,UAAAna,GACA0M,EAAAyN,UAAAna,IAAA,IAGA0M,EAAA2N,WAAA,SAAA9D,EAAA+D,EAAAC,GACAD,KAAA,EACAC,KAAAhE,EAAArW,MACA,QAAAF,GAAA,EAAqBA,EAAAua,EAASva,GAAA,EAC9B0M,EAAAyN,UAAA5D,EAAAvW,EAAAsa,KAIA5N,EAAA8N,YAAA,SAAA3E,GACA,OAAA7V,GAAA,EAAqBA,EAAA6V,EAAA3V,OAAcF,GAAA,EACnC0M,EAAAyN,UAAAtE,EAAAE,WAAA/V,KAIA0M,EAAA+N,YAAA,WACA,MAAAT,IAGAtN,EAAAgO,SAAA,WACA,GAAA7E,GAAA,EACAA,IAAA,GACA,QAAA7V,GAAA,EAAqBA,EAAAga,EAAA9Z,OAAmBF,GAAA,EACxCA,EAAA,IACA6V,GAAA,KAEAA,GAAAmE,EAAAha,EAGA,OADA6V,IAAA,KAIAnJ,GAOAiO,EAAA,WAEA,GAAApB,GAAA,EACAqB,EAAA,EACApB,EAAA,EACAqB,EAAA,GAEAnO,KAEAoO,EAAA,SAAAvE,GACAsE,GAAAjE,OAAAC,aAAAkE,EAAA,GAAAxE,KAGAwE,EAAA,SAAA9B,GACA,GAAAA,EAAA,OAEO,IAAAA,EAAA,GACP,UAAAA,CACO,IAAAA,EAAA,GACP,WAAAA,EAAA,GACO,IAAAA,EAAA,GACP,WAAAA,EAAA,GACO,QAAAA,EACP,SACO,QAAAA,EACP,UAEA,UAAAA,EAoCA,OAjCAvM,GAAAyN,UAAA,SAAAlB,GAMA,IAJAM,KAAA,MAAAN,EACA2B,GAAA,EACApB,GAAA,EAEAoB,GAAA,GACAE,EAAAvB,IAAAqB,EAAA,GACAA,GAAA,GAIAlO,EAAAsO,MAAA,WAQA,GANAJ,EAAA,IACAE,EAAAvB,GAAA,EAAAqB,GACArB,EAAA,EACAqB,EAAA,GAGApB,EAAA,KAGA,OADAyB,GAAA,EAAAzB,EAAA,EACAxZ,EAAA,EAAuBA,EAAAib,EAAYjb,GAAA,EACnC6a,GAAA,KAKAnO,EAAAgO,SAAA,WACA,MAAAG,IAGAnO,GAOA2J,EAAA,SAAA6E,GAEA,GAAAC,GAAAD,EACAE,EAAA,EACA7B,EAAA,EACAqB,EAAA,EAEAlO,IAEAA,GAAA4J,KAAA,WAEA,KAAAsE,EAAA,IAEA,GAAAQ,GAAAD,EAAAjb,OAAA,CACA,MAAA0a,EACA,QAEA,iCAAAA,EAGA,GAAAhK,GAAAuK,EAAAnE,OAAAoE,EAGA,IAFAA,GAAA,EAEA,KAAAxK,EAEA,MADAgK,GAAA,GACA,CACShK,GAAAyK,MAAA,UAKT9B,KAAA,EAAA+B,EAAA1K,EAAAmF,WAAA,IACA6E,GAAA,GAGA,GAAA3B,GAAAM,IAAAqB,EAAA,KAEA,OADAA,IAAA,EACA3B,EAGA,IAAAqC,GAAA,SAAA1K,GACA,OAAAA,MAAA,GACA,MAAAA,GAAA,EACO,QAAAA,MAAA,IACP,MAAAA,GAAA,KACO,QAAAA,MAAA,GACP,MAAAA,GAAA,KACO,QAAAA,EACP,SACO,QAAAA,EACP,SAEA,WAAAA,EAIA,OAAAlE,IAOA6O,EAAA,SAAA/X,EAAAC,GAEA,GAAA+X,GAAAhY,EACAiY,EAAAhY,EACAmW,EAAA,GAAA7U,OAAAvB,EAAAC,GAEAiJ,IAEAA,GAAAgP,SAAA,SAAAtW,EAAAE,EAAAqW,GACA/B,EAAAtU,EAAAkW,EAAApW,GAAAuW,GAGAjP,EAAA+G,MAAA,SAAAmI,GAKAA,EAAApB,YAAA,UAKAoB,EAAAxB,WAAAoB,GACAI,EAAAxB,WAAAqB,GAEAG,EAAAzB,UAAA,KACAyB,EAAAzB,UAAA,GACAyB,EAAAzB,UAAA,GAMAyB,EAAAzB,UAAA,GACAyB,EAAAzB,UAAA,GACAyB,EAAAzB,UAAA,GAGAyB,EAAAzB,UAAA,KACAyB,EAAAzB,UAAA,KACAyB,EAAAzB,UAAA,KAKAyB,EAAApB,YAAA,KACAoB,EAAAxB,WAAA,GACAwB,EAAAxB,WAAA,GACAwB,EAAAxB,WAAAoB,GACAI,EAAAxB,WAAAqB,GACAG,EAAAzB,UAAA,EAQA,IAAA0B,GAAA,EACAC,EAAAC,EAAAF,EAEAD,GAAAzB,UAAA0B,EAIA,KAFA,GAAA7T,GAAA,EAEA8T,EAAA5b,OAAA8H,EAAA,KACA4T,EAAAzB,UAAA,KACAyB,EAAAvB,WAAAyB,EAAA9T,EAAA,KACAA,GAAA,GAGA4T,GAAAzB,UAAA2B,EAAA5b,OAAA8H,GACA4T,EAAAvB,WAAAyB,EAAA9T,EAAA8T,EAAA5b,OAAA8H,GACA4T,EAAAzB,UAAA,GAIAyB,EAAApB,YAAA,KAGA,IAAAwB,GAAA,SAAAJ,GAEA,GAAAK,GAAAL,EACAM,EAAA,EACAC,EAAA,EAEAzP,IA0BA,OAxBAA,GAAA+G,MAAA,SAAAvP,EAAAhE,GAEA,GAAAgE,IAAAhE,GAAA,EACA,kBAGA,MAAAgc,EAAAhc,GAAA,GACA+b,EAAA9B,UAAA,KAAAjW,GAAAgY,EAAAC,IACAjc,GAAA,EAAAgc,EACAhY,KAAA,EAAAgY,EACAC,EAAA,EACAD,EAAA,CAGAC,IAAAjY,GAAAgY,EACAA,GAAAhc,GAGAwM,EAAAsO,MAAA,WACAkB,EAAA,GACAD,EAAA9B,UAAAgC,IAIAzP,GAGAqP,EAAA,SAAAF,GASA,OAPAO,GAAA,GAAAP,EACAQ,GAAA,GAAAR,GAAA,EACAS,EAAAT,EAAA,EAGAU,EAAAC,IAEAxc,EAAA,EAAqBA,EAAAoc,EAAepc,GAAA,EACpCuc,EAAAE,IAAA7F,OAAAC,aAAA7W,GAEAuc,GAAAE,IAAA7F,OAAAC,aAAAuF,IACAG,EAAAE,IAAA7F,OAAAC,aAAAwF,GAEA,IAAAK,GAAAxC,IACAyC,EAAAX,EAAAU,EAGAC,GAAAlJ,MAAA2I,EAAAE,EAEA,IAAAM,GAAA,EAEA/G,EAAAe,OAAAC,aAAA+C,EAAAgD,GAGA,KAFAA,GAAA,EAEAA,EAAAhD,EAAA1Z,QAAA,CAEA,GAAA0Q,GAAAgG,OAAAC,aAAA+C,EAAAgD,GACAA,IAAA,EAEAL,EAAAM,SAAAhH,EAAAjF,GAEAiF,GAAAjF,GAIA+L,EAAAlJ,MAAA8I,EAAAza,QAAA+T,GAAAyG,GAEAC,EAAApR,OAAA,OAEAoR,EAAApR,QAAA,GAAAmR,IACAA,GAAA,GAGAC,EAAAE,IAAA5G,EAAAjF,IAGAiF,EAAAjF,GAWA,MAPA+L,GAAAlJ,MAAA8I,EAAAza,QAAA+T,GAAAyG,GAGAK,EAAAlJ,MAAA4I,EAAAC,GAEAK,EAAA3B,QAEA0B,EAAAjC,eAGA+B,EAAA,WAEA,GAAAM,MACAC,EAAA,EAEArQ,IAsBA,OApBAA,GAAA+P,IAAA,SAAApd,GACA,GAAAqN,EAAAmQ,SAAAxd,GACA,gBAAAA,CAEAyd,GAAAzd,GAAA0d,EACAA,GAAA,GAGArQ,EAAAvB,KAAA,WACA,MAAA4R,IAGArQ,EAAA5K,QAAA,SAAAzC,GACA,MAAAyd,GAAAzd,IAGAqN,EAAAmQ,SAAA,SAAAxd,GACA,yBAAAyd,GAAAzd,IAGAqN,EAGA,OAAAA,IAGA+H,EAAA,SAAAjR,EAAAC,EAAAuZ,GAEA,OADAC,GAAA1B,EAAA/X,EAAAC,GACA6B,EAAA,EAAmBA,EAAA7B,EAAY6B,GAAA,EAC/B,OAAAF,GAAA,EAAqBA,EAAA5B,EAAW4B,GAAA,EAChC6X,EAAAvB,SAAAtW,EAAAE,EAAA0X,EAAA5X,EAAAE,GAIA,IAAAiR,GAAA2D,GACA+C,GAAAxJ,MAAA8C,EAIA,QAFA2G,GAAAvC,IACA7E,EAAAS,EAAAkE,cACAza,EAAA,EAAmBA,EAAA8V,EAAA5V,OAAkBF,GAAA,EACrCkd,EAAA/C,UAAArE,EAAA9V,GAIA,OAFAkd,GAAAlC,QAEA,yBAA2BkC,EAM3B,OAAArR,OAIA,WAEAA,EAAAS,mBAAA,kBAAAuJ,GAEA,QAAAsH,GAAAjC,GAEA,OADAkC,MACApd,EAAA,EAAmBA,EAAAkb,EAAAhb,OAAgBF,IAAA,CACnC,GAAAqd,GAAAnC,EAAAnF,WAAA/V,EACAqd,GAAA,IAAAD,EAAArZ,KAAAsZ,GACAA,EAAA,KACAD,EAAArZ,KAAA,IAAAsZ,GAAA,EACA,OAAAA,GAEAA,EAAA,OAAAA,GAAA,MACAD,EAAArZ,KAAA,IAAAsZ,GAAA,GACA,IAAAA,GAAA,KACA,OAAAA,IAIArd,IAIAqd,EAAA,aAAAA,IAAA,GACA,KAAAnC,EAAAnF,WAAA/V,IACAod,EAAArZ,KAAA,IAAAsZ,GAAA,GACA,IAAAA,GAAA,MACA,IAAAA,GAAA,KACA,OAAAA,IAGA,MAAAD,GAEA,MAAAD,GAAAtH,OAKA,SAAAyH,GAEA9O,KAAAD,EAAA,EAAAE,EAAA,kBAAAF,KAAAvK,MAAA9E,EAAAsP,GAAAD,IAAAhL,SAAAkL,IAAAxP,EAAAC,QAAAuP,KAIC,WACD,MAAA5C,MT86BM0R,IACA,SAAUte,EAAQC,EAASW,GAEhC,YAcA,SAAS2d,GAAuBpe,GAAO,MAAOA,IAAOA,EAAIqe,WAAare,GAAQ6M,QAAS7M,GAZvFG,OAAOC,eAAeN,EAAS,cAC7BI,OAAO,GAGT,IAAIoe,GAAU7d,EAAoB,IAE9B8d,EAAWH,EAAuBE,GAElCE,EAAe/d,EAAoB,IAEnCge,EAAgBL,EAAuBI,EAI3C1e,GAAQ+M,SU/kGT6R,YACAC,SAAAF,EAAA5R,SAEA/H,KAJA,WAKA,OACA8Z,aACAC,UAAA,GACAC,UAGAvb,SACAwb,cADA,WACA,GAAAzR,GAAA5J,KAAAsb,EAAAne,UAAAC,OAAA,GAAAqD,SAAAtD,UAAA,GAAAA,UAAA,KACA6C,MAAAub,KAAAC,cACAxb,KAAAyb,QAAAC,MAAAL,eAAAC,cAAAK,KAAA,SAAAnb,GAAA,GAAAY,GAAAZ,EAAAY,IACA,IAAAA,EAAAwa,WAAA,CACA,GAAAC,GAAAza,EAAAwa,WAAAE,MAAA,IACA1a,GAAA2a,QAAAF,EAAA,GACAza,EAAA4a,QAAAH,EAAA,GAAApJ,UAAA,EAAAoJ,EAAA,GAAAze,OAAA,GAEAwM,EAAAwR,KAAAha,EAGAwI,EAAAsR,WAAA,EAAAL,EAAA1R,aACA/H,OAAA6a,OACA3a,SAAA,EACAqI,aAAA,IACAD,WAAA,EACAS,MACA1G,WAAA,QACA4E,KAAA,IACA3E,MAAA,OACAT,KAAA,OACAiZ,WAAA,EACA9K,OAAA,IAEA7G,QACAhO,IAAA,QACAC,MAAA,MAIAoN,EAAAuS,UAAA,WACAvS,EAAAuR,UAAAvR,EAAAwS,qBAGAC,QAAA,WACAzS,EAAA2R,KAAAe,iBAGAF,eAvCA,WAwCA,GAAAG,GAAAvc,KAAAwc,MAAAzT,OAAA0T,SAAA,EACA,KAAAF,EAAA,QAEA,IAAA/R,GAAA,YAEAzF,EAAAwX,EAAAG,UAAAlS,IAAA,EACA,OAAAzF,KAGA9E,QA5DA,WA6DAD,KAAAqb,cAAArb,KAAA2c,OAAAC,OAAAC,OV2lGMC,IACA,SAAU3gB,EAAQC,EAASW,GW/sGjCX,EAAAD,EAAAC,QAAAW,EAAA,KAKAX,EAAA6E,MAAA9E,EAAA0gB,GAAA,2tBAAovB,IAAQE,QAAA,EAAAC,SAAA,+BAAAC,SAAAC,SAAA;AAAAC,KAAA,iBAAAC,gBAAA,2tBAAkoCC,WAAA,iBXwtGx3DC,IACA,SAAUnhB,EAAQC,EAASW,GY3tGjC,GAAAwgB,GAAAxgB,EAAA,IACA,iBAAAwgB,SAAAphB,EAAA0gB,GAAAU,EAAA,KAEAxgB,GAAA,GAAAwgB,KACAA,GAAAC,SAAArhB,EAAAC,QAAAmhB,EAAAC,SZivGMC,IACA,SAAUthB,EAAQC,EAASW,GavvGjCA,EAAA,IAEA,IAAA2gB,GAAA3gB,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,kBAEA,KAGAZ,GAAAC,QAAAshB,EAAAthB,SbgwGMuhB,IACA,SAAUxhB,EAAQC,GchxGxBD,EAAAC,SAAgBuD,OAAA,WAAmB,GAAAie,GAAA5d,KAAa6d,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CAC1E,OAAAE,GAAA,OACAE,YAAA,WACGL,EAAAM,QAAAC,SAMAP,EAAAQ,KANAL,EAAA,UACHE,YAAA,gCACGF,EAAA,MACHE,YAAA,cACGL,EAAAS,GAAAT,EAAAU,GAAAV,EAAAjB,OAAA4B,KAAAC,UAAAZ,EAAAS,GAAA,KAAAN,EAAA,KACHE,YAAA,0DACGL,EAAAS,GAAA,KAAAN,EAAA,OACHE,YAAA,cACAQ,OACA5B,GAAA,oBAEGkB,EAAA,OACHE,YAAA,iBACGF,EAAA,OACHE,YAAA,UACGF,EAAA,KACHE,YAAA,uBACGL,EAAAS,GAAA,UAAAT,EAAAS,GAAA,KAAAN,EAAA,MAAAH,EAAAS,GAAAT,EAAAU,GAAAV,EAAAxC,KAAAsD,kBAAAd,EAAAS,GAAA,KAAAN,EAAA,OACHU,OACAE,IAAAf,EAAAxC,KAAAwD,aACA/M,IAAA,MAEG+L,EAAAS,GAAA,KAAAN,EAAA,OACHE,YAAA,uBACGF,EAAA,OACHE,YAAA,WACGF,EAAA,KACHE,YAAA,wBACGL,EAAAS,GAAA,QAAAT,EAAAS,GAAA,KAAAN,EAAA,KAAAH,EAAAS,GAAAT,EAAAU,GAAAV,EAAAxC,KAAAW,cAAA6B,EAAAS,GAAA,KAAAN,EAAA,OACHE,YAAA,WACGF,EAAA,KACHE,YAAA,wBACGL,EAAAS,GAAA,QAAAT,EAAAS,GAAA,KAAAN,EAAA,KAAAH,EAAAS,GAAAT,EAAAU,GAAAV,EAAAxC,KAAAY,cAAA4B,EAAAS,GAAA,KAAAN,EAAA,OACHE,YAAA,WACGF,EAAA,KACHE,YAAA,wBACGL,EAAAS,GAAA,QAAAT,EAAAS,GAAA,KAAAN,EAAA,KAAAH,EAAAS,GAAAT,EAAAU,GAAAV,EAAAxC,KAAAa,eAAA2B,EAAAS,GAAA,KAAAN,EAAA,OACHE,YAAA,aACGF,EAAA,KACHE,YAAA,wBACGL,EAAAS,GAAA,UAAAT,EAAAS,GAAA,KAAAN,EAAA,KAAAH,EAAAS,GAAAT,EAAAU,GAAAV,EAAAxC,KAAAyD,cAAAjB,EAAAS,GAAA,KAAAN,EAAA,OACHE,YAAA,2BACGF,EAAA,OACHE,YAAA,iBACGF,EAAA,OACHe,IAAA,SACAb,YAAA,WACGF,EAAA,YACHU,OACA1e,QAAA6d,EAAA1C,cAEG,GAAA0C,EAAAS,GAAA,KAAAN,EAAA,OACHU,OACAE,IAAAf,EAAAzC,UACAtJ,IAAA,QAEG+L,EAAAS,GAAA,KAAAN,EAAA,KACHE,YAAA,uBACGL,EAAAS,GAAA,gBAAAT,EAAAS,GAAA,KAAAT,EAAAmB,GAAA,UACFC,iBAAA,WAA+B,GAAApB,GAAA5d,KAAa6d,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CACvE,OAAAE,GAAA,MACAE,YAAA,mBACGF,EAAA,MAAAH,EAAAS,GAAA,kDAAAT,EAAAS,GAAA,KAAAN,EAAA,MAAAH,EAAAS,GAAA,uBAAAT,EAAAS,GAAA,KAAAN,EAAA,MAAAH,EAAAS,GAAA","file":"static/js/5.3c0f05602f0a149956ee.js","sourcesContent":["webpackJsonp([5,34],{\n\n/***/ 23:\n/***/ (function(module, exports) {\n\n\tfunction _defineProperty(obj, key, value) {\n\t  if (key in obj) {\n\t    Object.defineProperty(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\tmodule.exports = _defineProperty;\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar defineProperty = __webpack_require__(23);\n\t\n\tfunction _objectSpread(target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i] != null ? arguments[i] : {};\n\t    var ownKeys = Object.keys(source);\n\t\n\t    if (typeof Object.getOwnPropertySymbols === 'function') {\n\t      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n\t        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n\t      }));\n\t    }\n\t\n\t    ownKeys.forEach(function (key) {\n\t      defineProperty(target, key, source[key]);\n\t    });\n\t  }\n\t\n\t  return target;\n\t}\n\t\n\tmodule.exports = _objectSpread;\n\n/***/ }),\n\n/***/ 43:\n/***/ (function(module, exports) {\n\n\tfunction _classCallCheck(instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t}\n\t\n\tmodule.exports = _classCallCheck;\n\n/***/ }),\n\n/***/ 44:\n/***/ (function(module, exports) {\n\n\tfunction _defineProperties(target, props) {\n\t  for (var i = 0; i < props.length; i++) {\n\t    var descriptor = props[i];\n\t    descriptor.enumerable = descriptor.enumerable || false;\n\t    descriptor.configurable = true;\n\t    if (\"value\" in descriptor) descriptor.writable = true;\n\t    Object.defineProperty(target, descriptor.key, descriptor);\n\t  }\n\t}\n\t\n\tfunction _createClass(Constructor, protoProps, staticProps) {\n\t  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n\t  if (staticProps) _defineProperties(Constructor, staticProps);\n\t  return Constructor;\n\t}\n\t\n\tmodule.exports = _createClass;\n\n/***/ }),\n\n/***/ 45:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar objectWithoutPropertiesLoose = __webpack_require__(46);\n\t\n\tfunction _objectWithoutProperties(source, excluded) {\n\t  if (source == null) return {};\n\t  var target = objectWithoutPropertiesLoose(source, excluded);\n\t  var key, i;\n\t\n\t  if (Object.getOwnPropertySymbols) {\n\t    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\t\n\t    for (i = 0; i < sourceSymbolKeys.length; i++) {\n\t      key = sourceSymbolKeys[i];\n\t      if (excluded.indexOf(key) >= 0) continue;\n\t      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n\t      target[key] = source[key];\n\t    }\n\t  }\n\t\n\t  return target;\n\t}\n\t\n\tmodule.exports = _objectWithoutProperties;\n\n/***/ }),\n\n/***/ 46:\n/***/ (function(module, exports) {\n\n\tfunction _objectWithoutPropertiesLoose(source, excluded) {\n\t  if (source == null) return {};\n\t  var target = {};\n\t  var sourceKeys = Object.keys(source);\n\t  var key, i;\n\t\n\t  for (i = 0; i < sourceKeys.length; i++) {\n\t    key = sourceKeys[i];\n\t    if (excluded.indexOf(key) >= 0) continue;\n\t    target[key] = source[key];\n\t  }\n\t\n\t  return target;\n\t}\n\t\n\tmodule.exports = _objectWithoutPropertiesLoose;\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar _objectSpread = _interopDefault(__webpack_require__(24));\n\tvar qrcanvas = __webpack_require__(76);\n\t\n\tvar index = {\n\t  props: ['options'],\n\t  render: function render(h) {\n\t    return h('canvas');\n\t  },\n\t  methods: {\n\t    update: function update(options) {\n\t      // Render only if mounted, skip SSR.\n\t      if (!this.mounted) return;\n\t      this.$emit('beforeUpdate', this.$el);\n\t      qrcanvas.qrcanvas(_objectSpread({}, options, {\n\t        canvas: this.$el\n\t      }));\n\t      this.$emit('updated', this.$el);\n\t    }\n\t  },\n\t  watch: {\n\t    options: 'update'\n\t  },\n\t  mounted: function mounted() {\n\t    this.mounted = true;\n\t    this.update(this.options);\n\t  }\n\t};\n\t\n\tmodule.exports = index;\n\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar _objectSpread = _interopDefault(__webpack_require__(24));\n\tvar _classCallCheck = _interopDefault(__webpack_require__(43));\n\tvar _createClass = _interopDefault(__webpack_require__(44));\n\tvar _defineProperty = _interopDefault(__webpack_require__(23));\n\tvar qrcode = _interopDefault(__webpack_require__(77));\n\tvar _objectWithoutProperties = _interopDefault(__webpack_require__(45));\n\t\n\tvar COLOR_BLACK = '#000';\n\tvar COLOR_WHITE = '#fff';\n\t\n\tvar cache = [];\n\t\n\tvar notImplemented = function notImplemented() {\n\t  throw new Error('Not implemented');\n\t};\n\t\n\tvar helpers = {\n\t  createCanvas: notImplemented,\n\t  isCanvas: notImplemented,\n\t  isDrawable: notImplemented,\n\t  getCanvas: getCanvas,\n\t  cacheCanvas: cacheCanvas,\n\t  drawCanvas: drawCanvas,\n\t  drawText: drawText\n\t};\n\t/**\n\t * @desc Create a new canvas.\n\t * @param {Int} width Width of the canvas.\n\t * @param {Int} height Height of the canvas.\n\t * @return {Canvas}\n\t */\n\t\n\tfunction getCanvas() {\n\t  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t      width = _ref.width,\n\t      height = _ref.height,\n\t      canvas = _ref.canvas;\n\t\n\t  var rCanvas = canvas || helpers.createCanvas();\n\t\n\t  if (width) {\n\t    rCanvas.width = width;\n\t    rCanvas.height = height == null ? width : height;\n\t  }\n\t\n\t  return rCanvas;\n\t}\n\t\n\tfunction cacheCanvas() {\n\t  cache.push.apply(cache, arguments);\n\t}\n\t/**\n\t * @desc Draw to the canvas with given image or colors.\n\t * @param {Canvas} canvas The canvas to initialize.\n\t * @param {Image | String | Array} data\n\t * @param {Object} options\n\t *    cellSize: {Int}\n\t *    clear: {Boolean}\n\t */\n\t\n\t\n\tfunction drawCanvas(canvas, data, options) {\n\t  var _ref2 = options || {},\n\t      cellSize = _ref2.cellSize,\n\t      context = _ref2.context,\n\t      _ref2$clear = _ref2.clear,\n\t      clear = _ref2$clear === void 0 ? true : _ref2$clear;\n\t\n\t  var width = canvas.width,\n\t      height = canvas.height;\n\t  var queue = [data];\n\t  var ctx = context || canvas.getContext('2d');\n\t  if (clear) ctx.clearRect(0, 0, width, height);\n\t  ctx.globalCompositeOperation = 'source-over';\n\t\n\t  while (queue.length) {\n\t    var item = queue.shift();\n\t\n\t    if (Array.isArray(item)) {\n\t      queue = item.concat(queue);\n\t    } else if (item) {\n\t      var obj = void 0;\n\t\n\t      if (helpers.isDrawable(item)) {\n\t        obj = {\n\t          image: item\n\t        };\n\t      } else if (typeof item === 'string') {\n\t        obj = {\n\t          style: item\n\t        };\n\t      } else {\n\t        obj = item;\n\t      }\n\t\n\t      var x = ('col' in obj ? obj.col * cellSize : obj.x) || 0;\n\t      var y = ('row' in obj ? obj.row * cellSize : obj.y) || 0;\n\t      if (x < 0) x += width;\n\t      if (y < 0) y += width;\n\t      var w = ('cols' in obj ? obj.cols * cellSize : obj.w) || width;\n\t      var h = ('rows' in obj ? obj.rows * cellSize : obj.h) || width;\n\t\n\t      if (obj.image) {\n\t        ctx.drawImage(obj.image, x, y, w, h);\n\t      } else {\n\t        ctx.fillStyle = obj.style || 'black';\n\t        ctx.fillRect(x, y, w, h);\n\t      }\n\t    }\n\t  }\n\t\n\t  return canvas;\n\t}\n\t\n\tfunction drawText(text, options) {\n\t  var _ref3 = options || {},\n\t      _ref3$fontSize = _ref3.fontSize,\n\t      fontSize = _ref3$fontSize === void 0 ? 64 : _ref3$fontSize,\n\t      _ref3$fontStyle = _ref3.fontStyle,\n\t      fontStyle = _ref3$fontStyle === void 0 ? '' : _ref3$fontStyle,\n\t      _ref3$fontFamily = _ref3.fontFamily,\n\t      fontFamily = _ref3$fontFamily === void 0 ? 'Cursive' : _ref3$fontFamily,\n\t      color = _ref3.color,\n\t      _ref3$pad = _ref3.pad,\n\t      pad = _ref3$pad === void 0 ? 8 : _ref3$pad,\n\t      _ref3$padColor = _ref3.padColor,\n\t      padColor = _ref3$padColor === void 0 ? COLOR_WHITE : _ref3$padColor,\n\t      _ref3$mode = _ref3.mode,\n\t      mode = _ref3$mode === void 0 ? 1 : _ref3$mode;\n\t\n\t  var canvas = getCanvas();\n\t  var ctx = canvas.getContext('2d');\n\t  var padColorArr;\n\t\n\t  if (padColor) {\n\t    ctx.fillStyle = padColor;\n\t    ctx.fillRect(0, 0, 1, 1);\n\t\n\t    var _ctx$getImageData = ctx.getImageData(0, 0, 1, 1);\n\t\n\t    padColorArr = _ctx$getImageData.data;\n\t    if (!padColorArr[3]) padColorArr = null;\n\t  }\n\t\n\t  var height = fontSize + 2 * pad;\n\t  var font = [fontStyle, \"\".concat(fontSize, \"px\"), fontFamily].filter(Boolean).join(' ');\n\t\n\t  var resetContext = function resetContext() {\n\t    ctx.textAlign = 'center';\n\t    ctx.textBaseline = 'middle';\n\t    ctx.font = font;\n\t  };\n\t\n\t  resetContext();\n\t  var width = Math.ceil(ctx.measureText(text).width) + 2 * pad;\n\t  canvas.width = width;\n\t  canvas.height = height;\n\t  resetContext();\n\t\n\t  var fillText = function fillText() {\n\t    ctx.fillStyle = color || COLOR_BLACK;\n\t    ctx.fillText(text, width / 2, height / 2);\n\t  };\n\t\n\t  if (mode === 1) {\n\t    ctx.fillStyle = padColor;\n\t    ctx.fillRect(0, 0, width, height);\n\t    fillText();\n\t  } else {\n\t    fillText();\n\t\n\t    if (padColorArr) {\n\t      (function () {\n\t        var imageData = ctx.getImageData(0, 0, width, height);\n\t        var data = imageData.data;\n\t        var total = width * height;\n\t        var padded = [];\n\t        var offset = 0;\n\t\n\t        var _loop = function _loop(loop) {\n\t          var current = [];\n\t          var unique = {};\n\t          padded[offset] = current;\n\t          offset = 1 - offset;\n\t          var last = padded[offset];\n\t\n\t          if (!last) {\n\t            last = [];\n\t\n\t            for (var i = 0; i < total; i += 1) {\n\t              last.push(i);\n\t            }\n\t          }\n\t\n\t          last.forEach(function (i) {\n\t            if (data[4 * i + 3]) {\n\t              [i % width ? i - 1 : -1, (i + 1) % width ? i + 1 : -1, i - width, i + width].forEach(function (j) {\n\t                var k = 4 * j;\n\t\n\t                if (k >= 0 && k <= data.length && !unique[j]) {\n\t                  unique[j] = 1;\n\t                  current.push(j);\n\t                }\n\t              });\n\t            }\n\t          });\n\t          current.forEach(function (i) {\n\t            var j = 4 * i;\n\t\n\t            if (!data[j + 3]) {\n\t              for (var k = 0; k < 4; k += 1) {\n\t                data[j + k] = padColorArr[k];\n\t              }\n\t            }\n\t          });\n\t        };\n\t\n\t        for (var loop = 0; loop < pad; loop += 1) {\n\t          _loop(loop);\n\t        }\n\t\n\t        ctx.putImageData(imageData, 0, 0);\n\t      })();\n\t    }\n\t  }\n\t\n\t  return canvas;\n\t}\n\t\n\tvar effects = {\n\t  default: renderDefault,\n\t  round: renderRound,\n\t  fusion: renderFusion,\n\t  spot: renderSpot\n\t};\n\t\n\tfunction renderDefault(_ref) {\n\t  var foreground = _ref.foreground,\n\t      cellSize = _ref.cellSize,\n\t      isDark = _ref.isDark,\n\t      count = _ref.count;\n\t  var getCanvas = helpers.getCanvas,\n\t      drawCanvas = helpers.drawCanvas,\n\t      cacheCanvas = helpers.cacheCanvas;\n\t  var width = cellSize * count;\n\t  var canvasMask = getCanvas({\n\t    width: width\n\t  });\n\t  var context = canvasMask.getContext('2d');\n\t  context.fillStyle = COLOR_BLACK;\n\t  drawCells({\n\t    cellSize: cellSize,\n\t    count: count\n\t  }, function (_ref2) {\n\t    var i = _ref2.i,\n\t        j = _ref2.j,\n\t        x = _ref2.x,\n\t        y = _ref2.y;\n\t\n\t    if (isDark(i, j)) {\n\t      context.fillRect(x, y, cellSize, cellSize);\n\t    }\n\t  });\n\t  var canvasFg = getCanvas({\n\t    width: width\n\t  });\n\t  drawCanvas(canvasFg, foreground, {\n\t    cellSize: cellSize\n\t  });\n\t  var ctx = canvasFg.getContext('2d');\n\t  ctx.globalCompositeOperation = 'destination-in';\n\t  ctx.drawImage(canvasMask, 0, 0);\n\t  cacheCanvas(canvasMask);\n\t  return canvasFg;\n\t}\n\t\n\tfunction renderRound(_ref3, maskOptions) {\n\t  var foreground = _ref3.foreground,\n\t      cellSize = _ref3.cellSize,\n\t      isDark = _ref3.isDark,\n\t      count = _ref3.count;\n\t  var getCanvas = helpers.getCanvas,\n\t      drawCanvas = helpers.drawCanvas,\n\t      cacheCanvas = helpers.cacheCanvas;\n\t  var width = cellSize * count;\n\t  var canvasMask = getCanvas({\n\t    width: width\n\t  });\n\t  var _maskOptions$value = maskOptions.value,\n\t      value = _maskOptions$value === void 0 ? 1 : _maskOptions$value;\n\t  var radius = value * cellSize / 2;\n\t  var context = canvasMask.getContext('2d');\n\t  context.fillStyle = COLOR_BLACK;\n\t  drawCells({\n\t    cellSize: cellSize,\n\t    count: count\n\t  }, function (_ref4) {\n\t    var i = _ref4.i,\n\t        j = _ref4.j,\n\t        x = _ref4.x,\n\t        y = _ref4.y;\n\t\n\t    if (isDark(i, j)) {\n\t      context.beginPath();\n\t      context.moveTo(x + 0.5 * cellSize, y);\n\t      drawCorner(context, x + cellSize, y, x + cellSize, y + 0.5 * cellSize, radius);\n\t      drawCorner(context, x + cellSize, y + cellSize, x + 0.5 * cellSize, y + cellSize, radius);\n\t      drawCorner(context, x, y + cellSize, x, y + 0.5 * cellSize, radius);\n\t      drawCorner(context, x, y, x + 0.5 * cellSize, y, radius); // context.closePath();\n\t\n\t      context.fill();\n\t    }\n\t  });\n\t  var canvasFg = getCanvas({\n\t    width: width\n\t  });\n\t  drawCanvas(canvasFg, foreground, {\n\t    cellSize: cellSize\n\t  });\n\t  var ctx = canvasFg.getContext('2d');\n\t  ctx.globalCompositeOperation = 'destination-in';\n\t  ctx.drawImage(canvasMask, 0, 0);\n\t  cacheCanvas(canvasMask);\n\t  return canvasFg;\n\t}\n\t\n\tfunction renderFusion(_ref5, maskOptions) {\n\t  var foreground = _ref5.foreground,\n\t      cellSize = _ref5.cellSize,\n\t      isDark = _ref5.isDark,\n\t      count = _ref5.count;\n\t  var getCanvas = helpers.getCanvas,\n\t      drawCanvas = helpers.drawCanvas,\n\t      cacheCanvas = helpers.cacheCanvas;\n\t  var width = cellSize * count;\n\t  var canvasMask = getCanvas({\n\t    width: width\n\t  });\n\t  var context = canvasMask.getContext('2d');\n\t  context.fillStyle = COLOR_BLACK;\n\t  var _maskOptions$value2 = maskOptions.value,\n\t      value = _maskOptions$value2 === void 0 ? 1 : _maskOptions$value2;\n\t  var radius = value * cellSize / 2;\n\t  drawCells({\n\t    cellSize: cellSize,\n\t    count: count\n\t  }, function (_ref6) {\n\t    var i = _ref6.i,\n\t        j = _ref6.j,\n\t        x = _ref6.x,\n\t        y = _ref6.y;\n\t    var corners = [0, 0, 0, 0]; // NW, NE, SE, SW\n\t\n\t    if (isDark(i - 1, j)) {\n\t      corners[0] += 1;\n\t      corners[1] += 1;\n\t    }\n\t\n\t    if (isDark(i + 1, j)) {\n\t      corners[2] += 1;\n\t      corners[3] += 1;\n\t    }\n\t\n\t    if (isDark(i, j - 1)) {\n\t      corners[0] += 1;\n\t      corners[3] += 1;\n\t    }\n\t\n\t    if (isDark(i, j + 1)) {\n\t      corners[1] += 1;\n\t      corners[2] += 1;\n\t    }\n\t\n\t    if (isDark(i, j)) {\n\t      if (isDark(i - 1, j - 1)) corners[0] += 1;\n\t      if (isDark(i - 1, j + 1)) corners[1] += 1;\n\t      if (isDark(i + 1, j + 1)) corners[2] += 1;\n\t      if (isDark(i + 1, j - 1)) corners[3] += 1;\n\t      context.beginPath();\n\t      context.moveTo(x + 0.5 * cellSize, y);\n\t      drawCorner(context, x + cellSize, y, x + cellSize, y + 0.5 * cellSize, corners[1] ? 0 : radius);\n\t      drawCorner(context, x + cellSize, y + cellSize, x + 0.5 * cellSize, y + cellSize, corners[2] ? 0 : radius);\n\t      drawCorner(context, x, y + cellSize, x, y + 0.5 * cellSize, corners[3] ? 0 : radius);\n\t      drawCorner(context, x, y, x + 0.5 * cellSize, y, corners[0] ? 0 : radius); // context.closePath();\n\t\n\t      context.fill();\n\t    } else {\n\t      if (corners[0] === 2) {\n\t        fillCorner(context, x, y + 0.5 * cellSize, x, y, x + 0.5 * cellSize, y, radius);\n\t      }\n\t\n\t      if (corners[1] === 2) {\n\t        fillCorner(context, x + 0.5 * cellSize, y, x + cellSize, y, x + cellSize, y + 0.5 * cellSize, radius);\n\t      }\n\t\n\t      if (corners[2] === 2) {\n\t        fillCorner(context, x + cellSize, y + 0.5 * cellSize, x + cellSize, y + cellSize, x + 0.5 * cellSize, y + cellSize, radius);\n\t      }\n\t\n\t      if (corners[3] === 2) {\n\t        fillCorner(context, x + 0.5 * cellSize, y + cellSize, x, y + cellSize, x, y + 0.5 * cellSize, radius);\n\t      }\n\t    }\n\t  });\n\t  var canvasFg = getCanvas({\n\t    width: width\n\t  });\n\t  drawCanvas(canvasFg, foreground, {\n\t    cellSize: cellSize\n\t  });\n\t  var ctx = canvasFg.getContext('2d');\n\t  ctx.globalCompositeOperation = 'destination-in';\n\t  ctx.drawImage(canvasMask, 0, 0);\n\t  cacheCanvas(canvasMask);\n\t  return canvasFg;\n\t}\n\t\n\tfunction renderSpot(_ref7, maskOptions) {\n\t  var foreground = _ref7.foreground,\n\t      cellSize = _ref7.cellSize,\n\t      isDark = _ref7.isDark,\n\t      count = _ref7.count;\n\t  var getCanvas = helpers.getCanvas,\n\t      drawCanvas = helpers.drawCanvas,\n\t      cacheCanvas = helpers.cacheCanvas;\n\t  var width = cellSize * count;\n\t  var canvasMask = getCanvas({\n\t    width: width\n\t  });\n\t  var value = maskOptions.value,\n\t      _maskOptions$foregrou = maskOptions.foregroundLight,\n\t      foregroundLight = _maskOptions$foregrou === void 0 ? COLOR_WHITE : _maskOptions$foregrou;\n\t  var context = canvasMask.getContext('2d');\n\t  var canvasLayer = getCanvas({\n\t    width: width\n\t  });\n\t  var canvasFg = getCanvas({\n\t    width: width\n\t  });\n\t  var ctxLayer = canvasLayer.getContext('2d');\n\t  [{\n\t    dark: true,\n\t    foreground: foreground\n\t  }, {\n\t    dark: false,\n\t    foreground: foregroundLight\n\t  }].forEach(function (item) {\n\t    context.fillStyle = COLOR_BLACK;\n\t    context.clearRect(0, 0, width, width);\n\t    drawCells({\n\t      cellSize: cellSize,\n\t      count: count\n\t    }, function (_ref8) {\n\t      var i = _ref8.i,\n\t          j = _ref8.j,\n\t          x = _ref8.x,\n\t          y = _ref8.y;\n\t\n\t      if (isDark(i, j) ^ !item.dark) {\n\t        var fillSize;\n\t\n\t        if (i <= 7 && j <= 7 || i <= 7 && count - j - 1 <= 7 || count - i - 1 <= 7 && j <= 7 || i + 5 <= count && i + 9 >= count && j + 5 <= count && j + 9 >= count || i === 7 || j === 7) {\n\t          fillSize = 1 - 0.1 * value;\n\t        } else {\n\t          fillSize = 0.25;\n\t        }\n\t\n\t        var offset = (1 - fillSize) / 2;\n\t        context.fillRect(x + offset * cellSize, y + offset * cellSize, fillSize * cellSize, fillSize * cellSize);\n\t      }\n\t    });\n\t    drawCanvas(canvasLayer, item.foreground, {\n\t      cellSize: cellSize,\n\t      context: ctxLayer\n\t    });\n\t    ctxLayer.globalCompositeOperation = 'destination-in';\n\t    ctxLayer.drawImage(canvasMask, 0, 0);\n\t    drawCanvas(canvasFg, canvasLayer, {\n\t      cellSize: cellSize,\n\t      clear: false\n\t    });\n\t  });\n\t  cacheCanvas(canvasMask, canvasLayer);\n\t  return canvasFg;\n\t}\n\t\n\tfunction drawCells(_ref9, drawEach) {\n\t  var cellSize = _ref9.cellSize,\n\t      count = _ref9.count;\n\t\n\t  for (var i = 0; i < count; i += 1) {\n\t    for (var j = 0; j < count; j += 1) {\n\t      var x = j * cellSize;\n\t      var y = i * cellSize;\n\t      drawEach({\n\t        i: i,\n\t        j: j,\n\t        x: x,\n\t        y: y\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tfunction drawCorner(ctx, cornerX, cornerY, x, y, r) {\n\t  if (r) {\n\t    ctx.arcTo(cornerX, cornerY, x, y, r);\n\t  } else {\n\t    ctx.lineTo(cornerX, cornerY);\n\t    ctx.lineTo(x, y);\n\t  }\n\t}\n\t\n\tfunction fillCorner(context, startX, startY, cornerX, cornerY, destX, destY, radius) {\n\t  context.beginPath();\n\t  context.moveTo(startX, startY);\n\t  drawCorner(context, cornerX, cornerY, destX, destY, radius);\n\t  context.lineTo(cornerX, cornerY);\n\t  context.lineTo(startX, startY); // context.closePath();\n\t\n\t  context.fill();\n\t}\n\t\n\tqrcode.stringToBytes = qrcode.stringToBytesFuncs['UTF-8'];\n\tvar DEFAULT_PROPS = {\n\t  typeNumber: 0,\n\t  correctLevel: 'L',\n\t  data: ''\n\t};\n\t\n\tvar QRCanvasRenderer =\n\t/*#__PURE__*/\n\tfunction () {\n\t  function QRCanvasRenderer(options) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, QRCanvasRenderer);\n\t\n\t    _defineProperty(this, \"options\", _objectSpread({}, DEFAULT_PROPS));\n\t\n\t    _defineProperty(this, \"cache\", {});\n\t\n\t    _defineProperty(this, \"isDark\", function (i, j) {\n\t      var _this$cache = _this.cache,\n\t          qr = _this$cache.qr,\n\t          count = _this$cache.count;\n\t      if (i < 0 || i >= count || j < 0 || j >= count) return false;\n\t      return qr.isDark(i, j);\n\t    });\n\t\n\t    this.setOptions(options);\n\t  }\n\t\n\t  _createClass(QRCanvasRenderer, [{\n\t    key: \"setOptions\",\n\t    value: function setOptions(options) {\n\t      this.options = _objectSpread({}, this.options, options);\n\t      this.normalizeEffect();\n\t      this.normalizeLogo();\n\t      var _this$options = this.options,\n\t          typeNumber = _this$options.typeNumber,\n\t          data = _this$options.data,\n\t          logo = _this$options.logo; // L / M / Q / H\n\t\n\t      var correctLevel = this.options.correctLevel;\n\t      if (logo && ['Q', 'H'].indexOf(correctLevel) < 0) correctLevel = 'H';\n\t      var qr = qrcode(typeNumber, correctLevel);\n\t      qr.addData(data || '');\n\t      qr.make();\n\t      var count = qr.getModuleCount();\n\t      this.cache = {\n\t        qr: qr,\n\t        count: count\n\t      };\n\t    }\n\t  }, {\n\t    key: \"normalizeEffect\",\n\t    value: function normalizeEffect() {\n\t      var effect = this.options.effect;\n\t\n\t      if (typeof effect === 'string') {\n\t        effect = {\n\t          type: effect\n\t        };\n\t      }\n\t\n\t      this.options.effect = effect || {};\n\t    }\n\t  }, {\n\t    key: \"normalizeLogo\",\n\t    value: function normalizeLogo() {\n\t      var isDrawable = helpers.isDrawable,\n\t          drawText = helpers.drawText;\n\t      var logo = this.options.logo;\n\t\n\t      if (logo) {\n\t        if (isDrawable(logo)) {\n\t          logo = {\n\t            image: logo\n\t          };\n\t        } else if (!isDrawable(logo.image)) {\n\t          if (typeof logo === 'string') {\n\t            logo = {\n\t              text: logo\n\t            };\n\t          }\n\t\n\t          if (typeof logo.text === 'string') {\n\t            logo = {\n\t              image: drawText(logo.text, logo.options)\n\t            };\n\t          } else {\n\t            logo = null;\n\t          }\n\t        }\n\t      }\n\t\n\t      this.options.logo = logo;\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render(canvas) {\n\t      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t      var _this$options2 = this.options,\n\t          _this$options2$backgr = _this$options2.background,\n\t          background = _this$options2$backgr === void 0 ? 'white' : _this$options2$backgr,\n\t          _this$options2$foregr = _this$options2.foreground,\n\t          foreground = _this$options2$foregr === void 0 ? 'black' : _this$options2$foregr,\n\t          effect = _this$options2.effect,\n\t          logo = _this$options2.logo;\n\t      var onRender = effects[effect.type] || effects.default;\n\t      var count = this.cache.count;\n\t      var getCanvas = helpers.getCanvas,\n\t          drawCanvas = helpers.drawCanvas,\n\t          cacheCanvas = helpers.cacheCanvas;\n\t      var size = config.size;\n\t      var canvasOut;\n\t      var canvasBg;\n\t      var canvasFg; // Prepare output canvas, resize it if cellSize or size is provided.\n\t\n\t      {\n\t        var cellSize = config.cellSize;\n\t        if (!canvas && !cellSize && !size) cellSize = 6;\n\t        if (cellSize) size = count * cellSize;\n\t\n\t        if (size) {\n\t          canvasOut = getCanvas({\n\t            canvas: canvas,\n\t            width: size\n\t          });\n\t        } else {\n\t          size = canvas.width;\n\t          canvasOut = canvas;\n\t        }\n\t      } // Create foreground and background layers on canvas\n\t\n\t      {\n\t        var _cellSize = Math.ceil(size / count);\n\t\n\t        var sketchSize = _cellSize * count;\n\t        canvasBg = getCanvas({\n\t          width: _cellSize * count\n\t        });\n\t        drawCanvas(canvasBg, background, {\n\t          cellSize: _cellSize\n\t        });\n\t        canvasFg = onRender(_objectSpread({\n\t          foreground: foreground,\n\t          cellSize: _cellSize,\n\t          isDark: this.isDark\n\t        }, this.cache), this.options.effect); // draw logo\n\t\n\t        if (logo) {\n\t          var logoLayer = _objectSpread({}, logo);\n\t\n\t          if (!logo.w && !logo.h && !logo.cols && !logo.rows) {\n\t            var _logo$image = logo.image,\n\t                width = _logo$image.width,\n\t                height = _logo$image.height;\n\t            var imageRatio = width / height;\n\t            var posRatio = Math.min((count - 18) / count, 0.38);\n\t            var h = Math.min(sketchSize * posRatio, sketchSize * posRatio / imageRatio);\n\t            var w = h * imageRatio;\n\t            var x = (sketchSize - w) / 2;\n\t            var y = (sketchSize - h) / 2;\n\t            logoLayer.w = w;\n\t            logoLayer.h = h;\n\t            logoLayer.x = x;\n\t            logoLayer.y = y;\n\t          }\n\t\n\t          drawCanvas(canvasFg, logoLayer, {\n\t            clear: false\n\t          });\n\t        }\n\t      } // Combine the layers\n\t\n\t      drawCanvas(canvasOut, [{\n\t        image: canvasBg\n\t      }, {\n\t        image: canvasFg\n\t      }]);\n\t      cacheCanvas(canvasBg, canvasFg);\n\t      return canvasOut;\n\t    }\n\t  }]);\n\t\n\t  return QRCanvasRenderer;\n\t}();\n\t\n\tfunction qrcanvas(options) {\n\t  var canvas = options.canvas,\n\t      size = options.size,\n\t      cellSize = options.cellSize,\n\t      rest = _objectWithoutProperties(options, [\"canvas\", \"size\", \"cellSize\"]);\n\t\n\t  var renderer = new QRCanvasRenderer(rest);\n\t  return renderer.render(canvas, {\n\t    size: size,\n\t    cellSize: cellSize\n\t  });\n\t}\n\t\n\thelpers.createCanvas = createCanvas;\n\thelpers.isCanvas = isCanvas;\n\thelpers.isDrawable = isDrawable;\n\t\n\tfunction createCanvas() {\n\t  return document.createElement('canvas');\n\t}\n\t\n\tfunction isCanvas(el) {\n\t  return el instanceof HTMLCanvasElement;\n\t}\n\t\n\tfunction isDrawable(el) {\n\t  return isCanvas(el) || el instanceof HTMLImageElement;\n\t}\n\t\n\texports.qrcanvas = qrcanvas;\n\texports.helpers = helpers;\n\texports.effects = effects;\n\n\n/***/ }),\n\n/***/ 77:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;//---------------------------------------------------------------------\n\t//\n\t// QR Code Generator for JavaScript\n\t//\n\t// Copyright (c) 2009 Kazuhiko Arase\n\t//\n\t// URL: http://www.d-project.com/\n\t//\n\t// Licensed under the MIT license:\n\t//  http://www.opensource.org/licenses/mit-license.php\n\t//\n\t// The word 'QR Code' is registered trademark of\n\t// DENSO WAVE INCORPORATED\n\t//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n\t//\n\t//---------------------------------------------------------------------\n\t\n\tvar qrcode = function() {\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrcode\n\t  //---------------------------------------------------------------------\n\t\n\t  /**\n\t   * qrcode\n\t   * @param typeNumber 1 to 40\n\t   * @param errorCorrectionLevel 'L','M','Q','H'\n\t   */\n\t  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\t\n\t    var PAD0 = 0xEC;\n\t    var PAD1 = 0x11;\n\t\n\t    var _typeNumber = typeNumber;\n\t    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n\t    var _modules = null;\n\t    var _moduleCount = 0;\n\t    var _dataCache = null;\n\t    var _dataList = [];\n\t\n\t    var _this = {};\n\t\n\t    var makeImpl = function(test, maskPattern) {\n\t\n\t      _moduleCount = _typeNumber * 4 + 17;\n\t      _modules = function(moduleCount) {\n\t        var modules = new Array(moduleCount);\n\t        for (var row = 0; row < moduleCount; row += 1) {\n\t          modules[row] = new Array(moduleCount);\n\t          for (var col = 0; col < moduleCount; col += 1) {\n\t            modules[row][col] = null;\n\t          }\n\t        }\n\t        return modules;\n\t      }(_moduleCount);\n\t\n\t      setupPositionProbePattern(0, 0);\n\t      setupPositionProbePattern(_moduleCount - 7, 0);\n\t      setupPositionProbePattern(0, _moduleCount - 7);\n\t      setupPositionAdjustPattern();\n\t      setupTimingPattern();\n\t      setupTypeInfo(test, maskPattern);\n\t\n\t      if (_typeNumber >= 7) {\n\t        setupTypeNumber(test);\n\t      }\n\t\n\t      if (_dataCache == null) {\n\t        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n\t      }\n\t\n\t      mapData(_dataCache, maskPattern);\n\t    };\n\t\n\t    var setupPositionProbePattern = function(row, col) {\n\t\n\t      for (var r = -1; r <= 7; r += 1) {\n\t\n\t        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\t\n\t        for (var c = -1; c <= 7; c += 1) {\n\t\n\t          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\t\n\t          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t            _modules[row + r][col + c] = true;\n\t          } else {\n\t            _modules[row + r][col + c] = false;\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    var getBestMaskPattern = function() {\n\t\n\t      var minLostPoint = 0;\n\t      var pattern = 0;\n\t\n\t      for (var i = 0; i < 8; i += 1) {\n\t\n\t        makeImpl(true, i);\n\t\n\t        var lostPoint = QRUtil.getLostPoint(_this);\n\t\n\t        if (i == 0 || minLostPoint > lostPoint) {\n\t          minLostPoint = lostPoint;\n\t          pattern = i;\n\t        }\n\t      }\n\t\n\t      return pattern;\n\t    };\n\t\n\t    var setupTimingPattern = function() {\n\t\n\t      for (var r = 8; r < _moduleCount - 8; r += 1) {\n\t        if (_modules[r][6] != null) {\n\t          continue;\n\t        }\n\t        _modules[r][6] = (r % 2 == 0);\n\t      }\n\t\n\t      for (var c = 8; c < _moduleCount - 8; c += 1) {\n\t        if (_modules[6][c] != null) {\n\t          continue;\n\t        }\n\t        _modules[6][c] = (c % 2 == 0);\n\t      }\n\t    };\n\t\n\t    var setupPositionAdjustPattern = function() {\n\t\n\t      var pos = QRUtil.getPatternPosition(_typeNumber);\n\t\n\t      for (var i = 0; i < pos.length; i += 1) {\n\t\n\t        for (var j = 0; j < pos.length; j += 1) {\n\t\n\t          var row = pos[i];\n\t          var col = pos[j];\n\t\n\t          if (_modules[row][col] != null) {\n\t            continue;\n\t          }\n\t\n\t          for (var r = -2; r <= 2; r += 1) {\n\t\n\t            for (var c = -2; c <= 2; c += 1) {\n\t\n\t              if (r == -2 || r == 2 || c == -2 || c == 2\n\t                  || (r == 0 && c == 0) ) {\n\t                _modules[row + r][col + c] = true;\n\t              } else {\n\t                _modules[row + r][col + c] = false;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    var setupTypeNumber = function(test) {\n\t\n\t      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\t\n\t      for (var i = 0; i < 18; i += 1) {\n\t        var mod = (!test && ( (bits >> i) & 1) == 1);\n\t        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n\t      }\n\t\n\t      for (var i = 0; i < 18; i += 1) {\n\t        var mod = (!test && ( (bits >> i) & 1) == 1);\n\t        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t      }\n\t    };\n\t\n\t    var setupTypeInfo = function(test, maskPattern) {\n\t\n\t      var data = (_errorCorrectionLevel << 3) | maskPattern;\n\t      var bits = QRUtil.getBCHTypeInfo(data);\n\t\n\t      // vertical\n\t      for (var i = 0; i < 15; i += 1) {\n\t\n\t        var mod = (!test && ( (bits >> i) & 1) == 1);\n\t\n\t        if (i < 6) {\n\t          _modules[i][8] = mod;\n\t        } else if (i < 8) {\n\t          _modules[i + 1][8] = mod;\n\t        } else {\n\t          _modules[_moduleCount - 15 + i][8] = mod;\n\t        }\n\t      }\n\t\n\t      // horizontal\n\t      for (var i = 0; i < 15; i += 1) {\n\t\n\t        var mod = (!test && ( (bits >> i) & 1) == 1);\n\t\n\t        if (i < 8) {\n\t          _modules[8][_moduleCount - i - 1] = mod;\n\t        } else if (i < 9) {\n\t          _modules[8][15 - i - 1 + 1] = mod;\n\t        } else {\n\t          _modules[8][15 - i - 1] = mod;\n\t        }\n\t      }\n\t\n\t      // fixed module\n\t      _modules[_moduleCount - 8][8] = (!test);\n\t    };\n\t\n\t    var mapData = function(data, maskPattern) {\n\t\n\t      var inc = -1;\n\t      var row = _moduleCount - 1;\n\t      var bitIndex = 7;\n\t      var byteIndex = 0;\n\t      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\t\n\t      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\t\n\t        if (col == 6) col -= 1;\n\t\n\t        while (true) {\n\t\n\t          for (var c = 0; c < 2; c += 1) {\n\t\n\t            if (_modules[row][col - c] == null) {\n\t\n\t              var dark = false;\n\t\n\t              if (byteIndex < data.length) {\n\t                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t              }\n\t\n\t              var mask = maskFunc(row, col - c);\n\t\n\t              if (mask) {\n\t                dark = !dark;\n\t              }\n\t\n\t              _modules[row][col - c] = dark;\n\t              bitIndex -= 1;\n\t\n\t              if (bitIndex == -1) {\n\t                byteIndex += 1;\n\t                bitIndex = 7;\n\t              }\n\t            }\n\t          }\n\t\n\t          row += inc;\n\t\n\t          if (row < 0 || _moduleCount <= row) {\n\t            row -= inc;\n\t            inc = -inc;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    var createBytes = function(buffer, rsBlocks) {\n\t\n\t      var offset = 0;\n\t\n\t      var maxDcCount = 0;\n\t      var maxEcCount = 0;\n\t\n\t      var dcdata = new Array(rsBlocks.length);\n\t      var ecdata = new Array(rsBlocks.length);\n\t\n\t      for (var r = 0; r < rsBlocks.length; r += 1) {\n\t\n\t        var dcCount = rsBlocks[r].dataCount;\n\t        var ecCount = rsBlocks[r].totalCount - dcCount;\n\t\n\t        maxDcCount = Math.max(maxDcCount, dcCount);\n\t        maxEcCount = Math.max(maxEcCount, ecCount);\n\t\n\t        dcdata[r] = new Array(dcCount);\n\t\n\t        for (var i = 0; i < dcdata[r].length; i += 1) {\n\t          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n\t        }\n\t        offset += dcCount;\n\t\n\t        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\t\n\t        var modPoly = rawPoly.mod(rsPoly);\n\t        ecdata[r] = new Array(rsPoly.getLength() - 1);\n\t        for (var i = 0; i < ecdata[r].length; i += 1) {\n\t          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n\t        }\n\t      }\n\t\n\t      var totalCodeCount = 0;\n\t      for (var i = 0; i < rsBlocks.length; i += 1) {\n\t        totalCodeCount += rsBlocks[i].totalCount;\n\t      }\n\t\n\t      var data = new Array(totalCodeCount);\n\t      var index = 0;\n\t\n\t      for (var i = 0; i < maxDcCount; i += 1) {\n\t        for (var r = 0; r < rsBlocks.length; r += 1) {\n\t          if (i < dcdata[r].length) {\n\t            data[index] = dcdata[r][i];\n\t            index += 1;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < maxEcCount; i += 1) {\n\t        for (var r = 0; r < rsBlocks.length; r += 1) {\n\t          if (i < ecdata[r].length) {\n\t            data[index] = ecdata[r][i];\n\t            index += 1;\n\t          }\n\t        }\n\t      }\n\t\n\t      return data;\n\t    };\n\t\n\t    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\t\n\t      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\t\n\t      var buffer = qrBitBuffer();\n\t\n\t      for (var i = 0; i < dataList.length; i += 1) {\n\t        var data = dataList[i];\n\t        buffer.put(data.getMode(), 4);\n\t        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n\t        data.write(buffer);\n\t      }\n\t\n\t      // calc num max data.\n\t      var totalDataCount = 0;\n\t      for (var i = 0; i < rsBlocks.length; i += 1) {\n\t        totalDataCount += rsBlocks[i].dataCount;\n\t      }\n\t\n\t      if (buffer.getLengthInBits() > totalDataCount * 8) {\n\t        throw 'code length overflow. ('\n\t          + buffer.getLengthInBits()\n\t          + '>'\n\t          + totalDataCount * 8\n\t          + ')';\n\t      }\n\t\n\t      // end code\n\t      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t        buffer.put(0, 4);\n\t      }\n\t\n\t      // padding\n\t      while (buffer.getLengthInBits() % 8 != 0) {\n\t        buffer.putBit(false);\n\t      }\n\t\n\t      // padding\n\t      while (true) {\n\t\n\t        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t          break;\n\t        }\n\t        buffer.put(PAD0, 8);\n\t\n\t        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t          break;\n\t        }\n\t        buffer.put(PAD1, 8);\n\t      }\n\t\n\t      return createBytes(buffer, rsBlocks);\n\t    };\n\t\n\t    _this.addData = function(data, mode) {\n\t\n\t      mode = mode || 'Byte';\n\t\n\t      var newData = null;\n\t\n\t      switch(mode) {\n\t      case 'Numeric' :\n\t        newData = qrNumber(data);\n\t        break;\n\t      case 'Alphanumeric' :\n\t        newData = qrAlphaNum(data);\n\t        break;\n\t      case 'Byte' :\n\t        newData = qr8BitByte(data);\n\t        break;\n\t      case 'Kanji' :\n\t        newData = qrKanji(data);\n\t        break;\n\t      default :\n\t        throw 'mode:' + mode;\n\t      }\n\t\n\t      _dataList.push(newData);\n\t      _dataCache = null;\n\t    };\n\t\n\t    _this.isDark = function(row, col) {\n\t      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n\t        throw row + ',' + col;\n\t      }\n\t      return _modules[row][col];\n\t    };\n\t\n\t    _this.getModuleCount = function() {\n\t      return _moduleCount;\n\t    };\n\t\n\t    _this.make = function() {\n\t      if (_typeNumber < 1) {\n\t        var typeNumber = 1;\n\t\n\t        for (; typeNumber < 40; typeNumber++) {\n\t          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n\t          var buffer = qrBitBuffer();\n\t\n\t          for (var i = 0; i < _dataList.length; i++) {\n\t            var data = _dataList[i];\n\t            buffer.put(data.getMode(), 4);\n\t            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n\t            data.write(buffer);\n\t          }\n\t\n\t          var totalDataCount = 0;\n\t          for (var i = 0; i < rsBlocks.length; i++) {\n\t            totalDataCount += rsBlocks[i].dataCount;\n\t          }\n\t\n\t          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n\t            break;\n\t          }\n\t        }\n\t\n\t        _typeNumber = typeNumber;\n\t      }\n\t\n\t      makeImpl(false, getBestMaskPattern() );\n\t    };\n\t\n\t    _this.createTableTag = function(cellSize, margin) {\n\t\n\t      cellSize = cellSize || 2;\n\t      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\t\n\t      var qrHtml = '';\n\t\n\t      qrHtml += '<table style=\"';\n\t      qrHtml += ' border-width: 0px; border-style: none;';\n\t      qrHtml += ' border-collapse: collapse;';\n\t      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n\t      qrHtml += '\">';\n\t      qrHtml += '<tbody>';\n\t\n\t      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\t\n\t        qrHtml += '<tr>';\n\t\n\t        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n\t          qrHtml += '<td style=\"';\n\t          qrHtml += ' border-width: 0px; border-style: none;';\n\t          qrHtml += ' border-collapse: collapse;';\n\t          qrHtml += ' padding: 0px; margin: 0px;';\n\t          qrHtml += ' width: ' + cellSize + 'px;';\n\t          qrHtml += ' height: ' + cellSize + 'px;';\n\t          qrHtml += ' background-color: ';\n\t          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n\t          qrHtml += ';';\n\t          qrHtml += '\"/>';\n\t        }\n\t\n\t        qrHtml += '</tr>';\n\t      }\n\t\n\t      qrHtml += '</tbody>';\n\t      qrHtml += '</table>';\n\t\n\t      return qrHtml;\n\t    };\n\t\n\t    _this.createSvgTag = function(cellSize, margin) {\n\t\n\t      cellSize = cellSize || 2;\n\t      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\t      var size = _this.getModuleCount() * cellSize + margin * 2;\n\t      var c, mc, r, mr, qrSvg='', rect;\n\t\n\t      rect = 'l' + cellSize + ',0 0,' + cellSize +\n\t        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\t\n\t      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n\t      qrSvg += ' width=\"' + size + 'px\"';\n\t      qrSvg += ' height=\"' + size + 'px\"';\n\t      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n\t      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\">';\n\t      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n\t      qrSvg += '<path d=\"';\n\t\n\t      for (r = 0; r < _this.getModuleCount(); r += 1) {\n\t        mr = r * cellSize + margin;\n\t        for (c = 0; c < _this.getModuleCount(); c += 1) {\n\t          if (_this.isDark(r, c) ) {\n\t            mc = c*cellSize+margin;\n\t            qrSvg += 'M' + mc + ',' + mr + rect;\n\t          }\n\t        }\n\t      }\n\t\n\t      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n\t      qrSvg += '</svg>';\n\t\n\t      return qrSvg;\n\t    };\n\t\n\t    _this.createDataURL = function(cellSize, margin) {\n\t\n\t      cellSize = cellSize || 2;\n\t      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\t\n\t      var size = _this.getModuleCount() * cellSize + margin * 2;\n\t      var min = margin;\n\t      var max = size - margin;\n\t\n\t      return createDataURL(size, size, function(x, y) {\n\t        if (min <= x && x < max && min <= y && y < max) {\n\t          var c = Math.floor( (x - min) / cellSize);\n\t          var r = Math.floor( (y - min) / cellSize);\n\t          return _this.isDark(r, c)? 0 : 1;\n\t        } else {\n\t          return 1;\n\t        }\n\t      } );\n\t    };\n\t\n\t    _this.createImgTag = function(cellSize, margin, alt) {\n\t\n\t      cellSize = cellSize || 2;\n\t      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\t\n\t      var size = _this.getModuleCount() * cellSize + margin * 2;\n\t\n\t      var img = '';\n\t      img += '<img';\n\t      img += '\\u0020src=\"';\n\t      img += _this.createDataURL(cellSize, margin);\n\t      img += '\"';\n\t      img += '\\u0020width=\"';\n\t      img += size;\n\t      img += '\"';\n\t      img += '\\u0020height=\"';\n\t      img += size;\n\t      img += '\"';\n\t      if (alt) {\n\t        img += '\\u0020alt=\"';\n\t        img += alt;\n\t        img += '\"';\n\t      }\n\t      img += '/>';\n\t\n\t      return img;\n\t    };\n\t\n\t    var _createHalfASCII = function(margin) {\n\t      var cellSize = 1;\n\t      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\t\n\t      var size = _this.getModuleCount() * cellSize + margin * 2;\n\t      var min = margin;\n\t      var max = size - margin;\n\t\n\t      var y, x, r1, r2, p;\n\t\n\t      var blocks = {\n\t        '██': '█',\n\t        '█ ': '▀',\n\t        ' █': '▄',\n\t        '  ': ' '\n\t      };\n\t\n\t      var ascii = '';\n\t      for (y = 0; y < size; y += 2) {\n\t        r1 = Math.floor((y - min) / cellSize);\n\t        r2 = Math.floor((y + 1 - min) / cellSize);\n\t        for (x = 0; x < size; x += 1) {\n\t          p = '█';\n\t\n\t          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n\t            p = ' ';\n\t          }\n\t\n\t          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n\t            p += ' ';\n\t          }\n\t          else {\n\t            p += '█';\n\t          }\n\t\n\t          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n\t          ascii += blocks[p];\n\t        }\n\t\n\t        ascii += '\\n';\n\t      }\n\t\n\t      if (size % 2) {\n\t        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n\t      }\n\t\n\t      return ascii.substring(0, ascii.length-1);\n\t    };\n\t\n\t    _this.createASCII = function(cellSize, margin) {\n\t      cellSize = cellSize || 1;\n\t\n\t      if (cellSize < 2) {\n\t        return _createHalfASCII(margin);\n\t      }\n\t\n\t      cellSize -= 1;\n\t      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\t\n\t      var size = _this.getModuleCount() * cellSize + margin * 2;\n\t      var min = margin;\n\t      var max = size - margin;\n\t\n\t      var y, x, r, p;\n\t\n\t      var white = Array(cellSize+1).join('██');\n\t      var black = Array(cellSize+1).join('  ');\n\t\n\t      var ascii = '';\n\t      var line = '';\n\t      for (y = 0; y < size; y += 1) {\n\t        r = Math.floor( (y - min) / cellSize);\n\t        line = '';\n\t        for (x = 0; x < size; x += 1) {\n\t          p = 1;\n\t\n\t          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n\t            p = 0;\n\t          }\n\t\n\t          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n\t          line += p ? white : black;\n\t        }\n\t\n\t        for (r = 0; r < cellSize; r += 1) {\n\t          ascii += line + '\\n';\n\t        }\n\t      }\n\t\n\t      return ascii.substring(0, ascii.length-1);\n\t    };\n\t\n\t    _this.renderTo2dContext = function(context, cellSize) {\n\t      cellSize = cellSize || 2;\n\t      var length = _this.getModuleCount();\n\t      for (var row = 0; row < length; row++) {\n\t        for (var col = 0; col < length; col++) {\n\t          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n\t          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n\t        }\n\t      }\n\t    }\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrcode.stringToBytes\n\t  //---------------------------------------------------------------------\n\t\n\t  qrcode.stringToBytesFuncs = {\n\t    'default' : function(s) {\n\t      var bytes = [];\n\t      for (var i = 0; i < s.length; i += 1) {\n\t        var c = s.charCodeAt(i);\n\t        bytes.push(c & 0xff);\n\t      }\n\t      return bytes;\n\t    }\n\t  };\n\t\n\t  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrcode.createStringToBytes\n\t  //---------------------------------------------------------------------\n\t\n\t  /**\n\t   * @param unicodeData base64 string of byte array.\n\t   * [16bit Unicode],[16bit Bytes], ...\n\t   * @param numChars\n\t   */\n\t  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\t\n\t    // create conversion map.\n\t\n\t    var unicodeMap = function() {\n\t\n\t      var bin = base64DecodeInputStream(unicodeData);\n\t      var read = function() {\n\t        var b = bin.read();\n\t        if (b == -1) throw 'eof';\n\t        return b;\n\t      };\n\t\n\t      var count = 0;\n\t      var unicodeMap = {};\n\t      while (true) {\n\t        var b0 = bin.read();\n\t        if (b0 == -1) break;\n\t        var b1 = read();\n\t        var b2 = read();\n\t        var b3 = read();\n\t        var k = String.fromCharCode( (b0 << 8) | b1);\n\t        var v = (b2 << 8) | b3;\n\t        unicodeMap[k] = v;\n\t        count += 1;\n\t      }\n\t      if (count != numChars) {\n\t        throw count + ' != ' + numChars;\n\t      }\n\t\n\t      return unicodeMap;\n\t    }();\n\t\n\t    var unknownChar = '?'.charCodeAt(0);\n\t\n\t    return function(s) {\n\t      var bytes = [];\n\t      for (var i = 0; i < s.length; i += 1) {\n\t        var c = s.charCodeAt(i);\n\t        if (c < 128) {\n\t          bytes.push(c);\n\t        } else {\n\t          var b = unicodeMap[s.charAt(i)];\n\t          if (typeof b == 'number') {\n\t            if ( (b & 0xff) == b) {\n\t              // 1byte\n\t              bytes.push(b);\n\t            } else {\n\t              // 2bytes\n\t              bytes.push(b >>> 8);\n\t              bytes.push(b & 0xff);\n\t            }\n\t          } else {\n\t            bytes.push(unknownChar);\n\t          }\n\t        }\n\t      }\n\t      return bytes;\n\t    };\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // QRMode\n\t  //---------------------------------------------------------------------\n\t\n\t  var QRMode = {\n\t    MODE_NUMBER :    1 << 0,\n\t    MODE_ALPHA_NUM : 1 << 1,\n\t    MODE_8BIT_BYTE : 1 << 2,\n\t    MODE_KANJI :     1 << 3\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // QRErrorCorrectionLevel\n\t  //---------------------------------------------------------------------\n\t\n\t  var QRErrorCorrectionLevel = {\n\t    L : 1,\n\t    M : 0,\n\t    Q : 3,\n\t    H : 2\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // QRMaskPattern\n\t  //---------------------------------------------------------------------\n\t\n\t  var QRMaskPattern = {\n\t    PATTERN000 : 0,\n\t    PATTERN001 : 1,\n\t    PATTERN010 : 2,\n\t    PATTERN011 : 3,\n\t    PATTERN100 : 4,\n\t    PATTERN101 : 5,\n\t    PATTERN110 : 6,\n\t    PATTERN111 : 7\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // QRUtil\n\t  //---------------------------------------------------------------------\n\t\n\t  var QRUtil = function() {\n\t\n\t    var PATTERN_POSITION_TABLE = [\n\t      [],\n\t      [6, 18],\n\t      [6, 22],\n\t      [6, 26],\n\t      [6, 30],\n\t      [6, 34],\n\t      [6, 22, 38],\n\t      [6, 24, 42],\n\t      [6, 26, 46],\n\t      [6, 28, 50],\n\t      [6, 30, 54],\n\t      [6, 32, 58],\n\t      [6, 34, 62],\n\t      [6, 26, 46, 66],\n\t      [6, 26, 48, 70],\n\t      [6, 26, 50, 74],\n\t      [6, 30, 54, 78],\n\t      [6, 30, 56, 82],\n\t      [6, 30, 58, 86],\n\t      [6, 34, 62, 90],\n\t      [6, 28, 50, 72, 94],\n\t      [6, 26, 50, 74, 98],\n\t      [6, 30, 54, 78, 102],\n\t      [6, 28, 54, 80, 106],\n\t      [6, 32, 58, 84, 110],\n\t      [6, 30, 58, 86, 114],\n\t      [6, 34, 62, 90, 118],\n\t      [6, 26, 50, 74, 98, 122],\n\t      [6, 30, 54, 78, 102, 126],\n\t      [6, 26, 52, 78, 104, 130],\n\t      [6, 30, 56, 82, 108, 134],\n\t      [6, 34, 60, 86, 112, 138],\n\t      [6, 30, 58, 86, 114, 142],\n\t      [6, 34, 62, 90, 118, 146],\n\t      [6, 30, 54, 78, 102, 126, 150],\n\t      [6, 24, 50, 76, 102, 128, 154],\n\t      [6, 28, 54, 80, 106, 132, 158],\n\t      [6, 32, 58, 84, 110, 136, 162],\n\t      [6, 26, 54, 82, 110, 138, 166],\n\t      [6, 30, 58, 86, 114, 142, 170]\n\t    ];\n\t    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n\t    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n\t    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\t\n\t    var _this = {};\n\t\n\t    var getBCHDigit = function(data) {\n\t      var digit = 0;\n\t      while (data != 0) {\n\t        digit += 1;\n\t        data >>>= 1;\n\t      }\n\t      return digit;\n\t    };\n\t\n\t    _this.getBCHTypeInfo = function(data) {\n\t      var d = data << 10;\n\t      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n\t        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n\t      }\n\t      return ( (data << 10) | d) ^ G15_MASK;\n\t    };\n\t\n\t    _this.getBCHTypeNumber = function(data) {\n\t      var d = data << 12;\n\t      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n\t        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n\t      }\n\t      return (data << 12) | d;\n\t    };\n\t\n\t    _this.getPatternPosition = function(typeNumber) {\n\t      return PATTERN_POSITION_TABLE[typeNumber - 1];\n\t    };\n\t\n\t    _this.getMaskFunction = function(maskPattern) {\n\t\n\t      switch (maskPattern) {\n\t\n\t      case QRMaskPattern.PATTERN000 :\n\t        return function(i, j) { return (i + j) % 2 == 0; };\n\t      case QRMaskPattern.PATTERN001 :\n\t        return function(i, j) { return i % 2 == 0; };\n\t      case QRMaskPattern.PATTERN010 :\n\t        return function(i, j) { return j % 3 == 0; };\n\t      case QRMaskPattern.PATTERN011 :\n\t        return function(i, j) { return (i + j) % 3 == 0; };\n\t      case QRMaskPattern.PATTERN100 :\n\t        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n\t      case QRMaskPattern.PATTERN101 :\n\t        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n\t      case QRMaskPattern.PATTERN110 :\n\t        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n\t      case QRMaskPattern.PATTERN111 :\n\t        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\t\n\t      default :\n\t        throw 'bad maskPattern:' + maskPattern;\n\t      }\n\t    };\n\t\n\t    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n\t      var a = qrPolynomial([1], 0);\n\t      for (var i = 0; i < errorCorrectLength; i += 1) {\n\t        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n\t      }\n\t      return a;\n\t    };\n\t\n\t    _this.getLengthInBits = function(mode, type) {\n\t\n\t      if (1 <= type && type < 10) {\n\t\n\t        // 1 - 9\n\t\n\t        switch(mode) {\n\t        case QRMode.MODE_NUMBER    : return 10;\n\t        case QRMode.MODE_ALPHA_NUM : return 9;\n\t        case QRMode.MODE_8BIT_BYTE : return 8;\n\t        case QRMode.MODE_KANJI     : return 8;\n\t        default :\n\t          throw 'mode:' + mode;\n\t        }\n\t\n\t      } else if (type < 27) {\n\t\n\t        // 10 - 26\n\t\n\t        switch(mode) {\n\t        case QRMode.MODE_NUMBER    : return 12;\n\t        case QRMode.MODE_ALPHA_NUM : return 11;\n\t        case QRMode.MODE_8BIT_BYTE : return 16;\n\t        case QRMode.MODE_KANJI     : return 10;\n\t        default :\n\t          throw 'mode:' + mode;\n\t        }\n\t\n\t      } else if (type < 41) {\n\t\n\t        // 27 - 40\n\t\n\t        switch(mode) {\n\t        case QRMode.MODE_NUMBER    : return 14;\n\t        case QRMode.MODE_ALPHA_NUM : return 13;\n\t        case QRMode.MODE_8BIT_BYTE : return 16;\n\t        case QRMode.MODE_KANJI     : return 12;\n\t        default :\n\t          throw 'mode:' + mode;\n\t        }\n\t\n\t      } else {\n\t        throw 'type:' + type;\n\t      }\n\t    };\n\t\n\t    _this.getLostPoint = function(qrcode) {\n\t\n\t      var moduleCount = qrcode.getModuleCount();\n\t\n\t      var lostPoint = 0;\n\t\n\t      // LEVEL1\n\t\n\t      for (var row = 0; row < moduleCount; row += 1) {\n\t        for (var col = 0; col < moduleCount; col += 1) {\n\t\n\t          var sameCount = 0;\n\t          var dark = qrcode.isDark(row, col);\n\t\n\t          for (var r = -1; r <= 1; r += 1) {\n\t\n\t            if (row + r < 0 || moduleCount <= row + r) {\n\t              continue;\n\t            }\n\t\n\t            for (var c = -1; c <= 1; c += 1) {\n\t\n\t              if (col + c < 0 || moduleCount <= col + c) {\n\t                continue;\n\t              }\n\t\n\t              if (r == 0 && c == 0) {\n\t                continue;\n\t              }\n\t\n\t              if (dark == qrcode.isDark(row + r, col + c) ) {\n\t                sameCount += 1;\n\t              }\n\t            }\n\t          }\n\t\n\t          if (sameCount > 5) {\n\t            lostPoint += (3 + sameCount - 5);\n\t          }\n\t        }\n\t      };\n\t\n\t      // LEVEL2\n\t\n\t      for (var row = 0; row < moduleCount - 1; row += 1) {\n\t        for (var col = 0; col < moduleCount - 1; col += 1) {\n\t          var count = 0;\n\t          if (qrcode.isDark(row, col) ) count += 1;\n\t          if (qrcode.isDark(row + 1, col) ) count += 1;\n\t          if (qrcode.isDark(row, col + 1) ) count += 1;\n\t          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n\t          if (count == 0 || count == 4) {\n\t            lostPoint += 3;\n\t          }\n\t        }\n\t      }\n\t\n\t      // LEVEL3\n\t\n\t      for (var row = 0; row < moduleCount; row += 1) {\n\t        for (var col = 0; col < moduleCount - 6; col += 1) {\n\t          if (qrcode.isDark(row, col)\n\t              && !qrcode.isDark(row, col + 1)\n\t              &&  qrcode.isDark(row, col + 2)\n\t              &&  qrcode.isDark(row, col + 3)\n\t              &&  qrcode.isDark(row, col + 4)\n\t              && !qrcode.isDark(row, col + 5)\n\t              &&  qrcode.isDark(row, col + 6) ) {\n\t            lostPoint += 40;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var col = 0; col < moduleCount; col += 1) {\n\t        for (var row = 0; row < moduleCount - 6; row += 1) {\n\t          if (qrcode.isDark(row, col)\n\t              && !qrcode.isDark(row + 1, col)\n\t              &&  qrcode.isDark(row + 2, col)\n\t              &&  qrcode.isDark(row + 3, col)\n\t              &&  qrcode.isDark(row + 4, col)\n\t              && !qrcode.isDark(row + 5, col)\n\t              &&  qrcode.isDark(row + 6, col) ) {\n\t            lostPoint += 40;\n\t          }\n\t        }\n\t      }\n\t\n\t      // LEVEL4\n\t\n\t      var darkCount = 0;\n\t\n\t      for (var col = 0; col < moduleCount; col += 1) {\n\t        for (var row = 0; row < moduleCount; row += 1) {\n\t          if (qrcode.isDark(row, col) ) {\n\t            darkCount += 1;\n\t          }\n\t        }\n\t      }\n\t\n\t      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t      lostPoint += ratio * 10;\n\t\n\t      return lostPoint;\n\t    };\n\t\n\t    return _this;\n\t  }();\n\t\n\t  //---------------------------------------------------------------------\n\t  // QRMath\n\t  //---------------------------------------------------------------------\n\t\n\t  var QRMath = function() {\n\t\n\t    var EXP_TABLE = new Array(256);\n\t    var LOG_TABLE = new Array(256);\n\t\n\t    // initialize tables\n\t    for (var i = 0; i < 8; i += 1) {\n\t      EXP_TABLE[i] = 1 << i;\n\t    }\n\t    for (var i = 8; i < 256; i += 1) {\n\t      EXP_TABLE[i] = EXP_TABLE[i - 4]\n\t        ^ EXP_TABLE[i - 5]\n\t        ^ EXP_TABLE[i - 6]\n\t        ^ EXP_TABLE[i - 8];\n\t    }\n\t    for (var i = 0; i < 255; i += 1) {\n\t      LOG_TABLE[EXP_TABLE[i] ] = i;\n\t    }\n\t\n\t    var _this = {};\n\t\n\t    _this.glog = function(n) {\n\t\n\t      if (n < 1) {\n\t        throw 'glog(' + n + ')';\n\t      }\n\t\n\t      return LOG_TABLE[n];\n\t    };\n\t\n\t    _this.gexp = function(n) {\n\t\n\t      while (n < 0) {\n\t        n += 255;\n\t      }\n\t\n\t      while (n >= 256) {\n\t        n -= 255;\n\t      }\n\t\n\t      return EXP_TABLE[n];\n\t    };\n\t\n\t    return _this;\n\t  }();\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrPolynomial\n\t  //---------------------------------------------------------------------\n\t\n\t  function qrPolynomial(num, shift) {\n\t\n\t    if (typeof num.length == 'undefined') {\n\t      throw num.length + '/' + shift;\n\t    }\n\t\n\t    var _num = function() {\n\t      var offset = 0;\n\t      while (offset < num.length && num[offset] == 0) {\n\t        offset += 1;\n\t      }\n\t      var _num = new Array(num.length - offset + shift);\n\t      for (var i = 0; i < num.length - offset; i += 1) {\n\t        _num[i] = num[i + offset];\n\t      }\n\t      return _num;\n\t    }();\n\t\n\t    var _this = {};\n\t\n\t    _this.getAt = function(index) {\n\t      return _num[index];\n\t    };\n\t\n\t    _this.getLength = function() {\n\t      return _num.length;\n\t    };\n\t\n\t    _this.multiply = function(e) {\n\t\n\t      var num = new Array(_this.getLength() + e.getLength() - 1);\n\t\n\t      for (var i = 0; i < _this.getLength(); i += 1) {\n\t        for (var j = 0; j < e.getLength(); j += 1) {\n\t          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n\t        }\n\t      }\n\t\n\t      return qrPolynomial(num, 0);\n\t    };\n\t\n\t    _this.mod = function(e) {\n\t\n\t      if (_this.getLength() - e.getLength() < 0) {\n\t        return _this;\n\t      }\n\t\n\t      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\t\n\t      var num = new Array(_this.getLength() );\n\t      for (var i = 0; i < _this.getLength(); i += 1) {\n\t        num[i] = _this.getAt(i);\n\t      }\n\t\n\t      for (var i = 0; i < e.getLength(); i += 1) {\n\t        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n\t      }\n\t\n\t      // recursive call\n\t      return qrPolynomial(num, 0).mod(e);\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // QRRSBlock\n\t  //---------------------------------------------------------------------\n\t\n\t  var QRRSBlock = function() {\n\t\n\t    var RS_BLOCK_TABLE = [\n\t\n\t      // L\n\t      // M\n\t      // Q\n\t      // H\n\t\n\t      // 1\n\t      [1, 26, 19],\n\t      [1, 26, 16],\n\t      [1, 26, 13],\n\t      [1, 26, 9],\n\t\n\t      // 2\n\t      [1, 44, 34],\n\t      [1, 44, 28],\n\t      [1, 44, 22],\n\t      [1, 44, 16],\n\t\n\t      // 3\n\t      [1, 70, 55],\n\t      [1, 70, 44],\n\t      [2, 35, 17],\n\t      [2, 35, 13],\n\t\n\t      // 4\n\t      [1, 100, 80],\n\t      [2, 50, 32],\n\t      [2, 50, 24],\n\t      [4, 25, 9],\n\t\n\t      // 5\n\t      [1, 134, 108],\n\t      [2, 67, 43],\n\t      [2, 33, 15, 2, 34, 16],\n\t      [2, 33, 11, 2, 34, 12],\n\t\n\t      // 6\n\t      [2, 86, 68],\n\t      [4, 43, 27],\n\t      [4, 43, 19],\n\t      [4, 43, 15],\n\t\n\t      // 7\n\t      [2, 98, 78],\n\t      [4, 49, 31],\n\t      [2, 32, 14, 4, 33, 15],\n\t      [4, 39, 13, 1, 40, 14],\n\t\n\t      // 8\n\t      [2, 121, 97],\n\t      [2, 60, 38, 2, 61, 39],\n\t      [4, 40, 18, 2, 41, 19],\n\t      [4, 40, 14, 2, 41, 15],\n\t\n\t      // 9\n\t      [2, 146, 116],\n\t      [3, 58, 36, 2, 59, 37],\n\t      [4, 36, 16, 4, 37, 17],\n\t      [4, 36, 12, 4, 37, 13],\n\t\n\t      // 10\n\t      [2, 86, 68, 2, 87, 69],\n\t      [4, 69, 43, 1, 70, 44],\n\t      [6, 43, 19, 2, 44, 20],\n\t      [6, 43, 15, 2, 44, 16],\n\t\n\t      // 11\n\t      [4, 101, 81],\n\t      [1, 80, 50, 4, 81, 51],\n\t      [4, 50, 22, 4, 51, 23],\n\t      [3, 36, 12, 8, 37, 13],\n\t\n\t      // 12\n\t      [2, 116, 92, 2, 117, 93],\n\t      [6, 58, 36, 2, 59, 37],\n\t      [4, 46, 20, 6, 47, 21],\n\t      [7, 42, 14, 4, 43, 15],\n\t\n\t      // 13\n\t      [4, 133, 107],\n\t      [8, 59, 37, 1, 60, 38],\n\t      [8, 44, 20, 4, 45, 21],\n\t      [12, 33, 11, 4, 34, 12],\n\t\n\t      // 14\n\t      [3, 145, 115, 1, 146, 116],\n\t      [4, 64, 40, 5, 65, 41],\n\t      [11, 36, 16, 5, 37, 17],\n\t      [11, 36, 12, 5, 37, 13],\n\t\n\t      // 15\n\t      [5, 109, 87, 1, 110, 88],\n\t      [5, 65, 41, 5, 66, 42],\n\t      [5, 54, 24, 7, 55, 25],\n\t      [11, 36, 12, 7, 37, 13],\n\t\n\t      // 16\n\t      [5, 122, 98, 1, 123, 99],\n\t      [7, 73, 45, 3, 74, 46],\n\t      [15, 43, 19, 2, 44, 20],\n\t      [3, 45, 15, 13, 46, 16],\n\t\n\t      // 17\n\t      [1, 135, 107, 5, 136, 108],\n\t      [10, 74, 46, 1, 75, 47],\n\t      [1, 50, 22, 15, 51, 23],\n\t      [2, 42, 14, 17, 43, 15],\n\t\n\t      // 18\n\t      [5, 150, 120, 1, 151, 121],\n\t      [9, 69, 43, 4, 70, 44],\n\t      [17, 50, 22, 1, 51, 23],\n\t      [2, 42, 14, 19, 43, 15],\n\t\n\t      // 19\n\t      [3, 141, 113, 4, 142, 114],\n\t      [3, 70, 44, 11, 71, 45],\n\t      [17, 47, 21, 4, 48, 22],\n\t      [9, 39, 13, 16, 40, 14],\n\t\n\t      // 20\n\t      [3, 135, 107, 5, 136, 108],\n\t      [3, 67, 41, 13, 68, 42],\n\t      [15, 54, 24, 5, 55, 25],\n\t      [15, 43, 15, 10, 44, 16],\n\t\n\t      // 21\n\t      [4, 144, 116, 4, 145, 117],\n\t      [17, 68, 42],\n\t      [17, 50, 22, 6, 51, 23],\n\t      [19, 46, 16, 6, 47, 17],\n\t\n\t      // 22\n\t      [2, 139, 111, 7, 140, 112],\n\t      [17, 74, 46],\n\t      [7, 54, 24, 16, 55, 25],\n\t      [34, 37, 13],\n\t\n\t      // 23\n\t      [4, 151, 121, 5, 152, 122],\n\t      [4, 75, 47, 14, 76, 48],\n\t      [11, 54, 24, 14, 55, 25],\n\t      [16, 45, 15, 14, 46, 16],\n\t\n\t      // 24\n\t      [6, 147, 117, 4, 148, 118],\n\t      [6, 73, 45, 14, 74, 46],\n\t      [11, 54, 24, 16, 55, 25],\n\t      [30, 46, 16, 2, 47, 17],\n\t\n\t      // 25\n\t      [8, 132, 106, 4, 133, 107],\n\t      [8, 75, 47, 13, 76, 48],\n\t      [7, 54, 24, 22, 55, 25],\n\t      [22, 45, 15, 13, 46, 16],\n\t\n\t      // 26\n\t      [10, 142, 114, 2, 143, 115],\n\t      [19, 74, 46, 4, 75, 47],\n\t      [28, 50, 22, 6, 51, 23],\n\t      [33, 46, 16, 4, 47, 17],\n\t\n\t      // 27\n\t      [8, 152, 122, 4, 153, 123],\n\t      [22, 73, 45, 3, 74, 46],\n\t      [8, 53, 23, 26, 54, 24],\n\t      [12, 45, 15, 28, 46, 16],\n\t\n\t      // 28\n\t      [3, 147, 117, 10, 148, 118],\n\t      [3, 73, 45, 23, 74, 46],\n\t      [4, 54, 24, 31, 55, 25],\n\t      [11, 45, 15, 31, 46, 16],\n\t\n\t      // 29\n\t      [7, 146, 116, 7, 147, 117],\n\t      [21, 73, 45, 7, 74, 46],\n\t      [1, 53, 23, 37, 54, 24],\n\t      [19, 45, 15, 26, 46, 16],\n\t\n\t      // 30\n\t      [5, 145, 115, 10, 146, 116],\n\t      [19, 75, 47, 10, 76, 48],\n\t      [15, 54, 24, 25, 55, 25],\n\t      [23, 45, 15, 25, 46, 16],\n\t\n\t      // 31\n\t      [13, 145, 115, 3, 146, 116],\n\t      [2, 74, 46, 29, 75, 47],\n\t      [42, 54, 24, 1, 55, 25],\n\t      [23, 45, 15, 28, 46, 16],\n\t\n\t      // 32\n\t      [17, 145, 115],\n\t      [10, 74, 46, 23, 75, 47],\n\t      [10, 54, 24, 35, 55, 25],\n\t      [19, 45, 15, 35, 46, 16],\n\t\n\t      // 33\n\t      [17, 145, 115, 1, 146, 116],\n\t      [14, 74, 46, 21, 75, 47],\n\t      [29, 54, 24, 19, 55, 25],\n\t      [11, 45, 15, 46, 46, 16],\n\t\n\t      // 34\n\t      [13, 145, 115, 6, 146, 116],\n\t      [14, 74, 46, 23, 75, 47],\n\t      [44, 54, 24, 7, 55, 25],\n\t      [59, 46, 16, 1, 47, 17],\n\t\n\t      // 35\n\t      [12, 151, 121, 7, 152, 122],\n\t      [12, 75, 47, 26, 76, 48],\n\t      [39, 54, 24, 14, 55, 25],\n\t      [22, 45, 15, 41, 46, 16],\n\t\n\t      // 36\n\t      [6, 151, 121, 14, 152, 122],\n\t      [6, 75, 47, 34, 76, 48],\n\t      [46, 54, 24, 10, 55, 25],\n\t      [2, 45, 15, 64, 46, 16],\n\t\n\t      // 37\n\t      [17, 152, 122, 4, 153, 123],\n\t      [29, 74, 46, 14, 75, 47],\n\t      [49, 54, 24, 10, 55, 25],\n\t      [24, 45, 15, 46, 46, 16],\n\t\n\t      // 38\n\t      [4, 152, 122, 18, 153, 123],\n\t      [13, 74, 46, 32, 75, 47],\n\t      [48, 54, 24, 14, 55, 25],\n\t      [42, 45, 15, 32, 46, 16],\n\t\n\t      // 39\n\t      [20, 147, 117, 4, 148, 118],\n\t      [40, 75, 47, 7, 76, 48],\n\t      [43, 54, 24, 22, 55, 25],\n\t      [10, 45, 15, 67, 46, 16],\n\t\n\t      // 40\n\t      [19, 148, 118, 6, 149, 119],\n\t      [18, 75, 47, 31, 76, 48],\n\t      [34, 54, 24, 34, 55, 25],\n\t      [20, 45, 15, 61, 46, 16]\n\t    ];\n\t\n\t    var qrRSBlock = function(totalCount, dataCount) {\n\t      var _this = {};\n\t      _this.totalCount = totalCount;\n\t      _this.dataCount = dataCount;\n\t      return _this;\n\t    };\n\t\n\t    var _this = {};\n\t\n\t    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\t\n\t      switch(errorCorrectionLevel) {\n\t      case QRErrorCorrectionLevel.L :\n\t        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\t      case QRErrorCorrectionLevel.M :\n\t        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\t      case QRErrorCorrectionLevel.Q :\n\t        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\t      case QRErrorCorrectionLevel.H :\n\t        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\t      default :\n\t        return undefined;\n\t      }\n\t    };\n\t\n\t    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\t\n\t      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\t\n\t      if (typeof rsBlock == 'undefined') {\n\t        throw 'bad rs block @ typeNumber:' + typeNumber +\n\t            '/errorCorrectionLevel:' + errorCorrectionLevel;\n\t      }\n\t\n\t      var length = rsBlock.length / 3;\n\t\n\t      var list = [];\n\t\n\t      for (var i = 0; i < length; i += 1) {\n\t\n\t        var count = rsBlock[i * 3 + 0];\n\t        var totalCount = rsBlock[i * 3 + 1];\n\t        var dataCount = rsBlock[i * 3 + 2];\n\t\n\t        for (var j = 0; j < count; j += 1) {\n\t          list.push(qrRSBlock(totalCount, dataCount) );\n\t        }\n\t      }\n\t\n\t      return list;\n\t    };\n\t\n\t    return _this;\n\t  }();\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrBitBuffer\n\t  //---------------------------------------------------------------------\n\t\n\t  var qrBitBuffer = function() {\n\t\n\t    var _buffer = [];\n\t    var _length = 0;\n\t\n\t    var _this = {};\n\t\n\t    _this.getBuffer = function() {\n\t      return _buffer;\n\t    };\n\t\n\t    _this.getAt = function(index) {\n\t      var bufIndex = Math.floor(index / 8);\n\t      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t    };\n\t\n\t    _this.put = function(num, length) {\n\t      for (var i = 0; i < length; i += 1) {\n\t        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t      }\n\t    };\n\t\n\t    _this.getLengthInBits = function() {\n\t      return _length;\n\t    };\n\t\n\t    _this.putBit = function(bit) {\n\t\n\t      var bufIndex = Math.floor(_length / 8);\n\t      if (_buffer.length <= bufIndex) {\n\t        _buffer.push(0);\n\t      }\n\t\n\t      if (bit) {\n\t        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n\t      }\n\t\n\t      _length += 1;\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrNumber\n\t  //---------------------------------------------------------------------\n\t\n\t  var qrNumber = function(data) {\n\t\n\t    var _mode = QRMode.MODE_NUMBER;\n\t    var _data = data;\n\t\n\t    var _this = {};\n\t\n\t    _this.getMode = function() {\n\t      return _mode;\n\t    };\n\t\n\t    _this.getLength = function(buffer) {\n\t      return _data.length;\n\t    };\n\t\n\t    _this.write = function(buffer) {\n\t\n\t      var data = _data;\n\t\n\t      var i = 0;\n\t\n\t      while (i + 2 < data.length) {\n\t        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n\t        i += 3;\n\t      }\n\t\n\t      if (i < data.length) {\n\t        if (data.length - i == 1) {\n\t          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n\t        } else if (data.length - i == 2) {\n\t          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n\t        }\n\t      }\n\t    };\n\t\n\t    var strToNum = function(s) {\n\t      var num = 0;\n\t      for (var i = 0; i < s.length; i += 1) {\n\t        num = num * 10 + chatToNum(s.charAt(i) );\n\t      }\n\t      return num;\n\t    };\n\t\n\t    var chatToNum = function(c) {\n\t      if ('0' <= c && c <= '9') {\n\t        return c.charCodeAt(0) - '0'.charCodeAt(0);\n\t      }\n\t      throw 'illegal char :' + c;\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrAlphaNum\n\t  //---------------------------------------------------------------------\n\t\n\t  var qrAlphaNum = function(data) {\n\t\n\t    var _mode = QRMode.MODE_ALPHA_NUM;\n\t    var _data = data;\n\t\n\t    var _this = {};\n\t\n\t    _this.getMode = function() {\n\t      return _mode;\n\t    };\n\t\n\t    _this.getLength = function(buffer) {\n\t      return _data.length;\n\t    };\n\t\n\t    _this.write = function(buffer) {\n\t\n\t      var s = _data;\n\t\n\t      var i = 0;\n\t\n\t      while (i + 1 < s.length) {\n\t        buffer.put(\n\t          getCode(s.charAt(i) ) * 45 +\n\t          getCode(s.charAt(i + 1) ), 11);\n\t        i += 2;\n\t      }\n\t\n\t      if (i < s.length) {\n\t        buffer.put(getCode(s.charAt(i) ), 6);\n\t      }\n\t    };\n\t\n\t    var getCode = function(c) {\n\t\n\t      if ('0' <= c && c <= '9') {\n\t        return c.charCodeAt(0) - '0'.charCodeAt(0);\n\t      } else if ('A' <= c && c <= 'Z') {\n\t        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n\t      } else {\n\t        switch (c) {\n\t        case ' ' : return 36;\n\t        case '$' : return 37;\n\t        case '%' : return 38;\n\t        case '*' : return 39;\n\t        case '+' : return 40;\n\t        case '-' : return 41;\n\t        case '.' : return 42;\n\t        case '/' : return 43;\n\t        case ':' : return 44;\n\t        default :\n\t          throw 'illegal char :' + c;\n\t        }\n\t      }\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // qr8BitByte\n\t  //---------------------------------------------------------------------\n\t\n\t  var qr8BitByte = function(data) {\n\t\n\t    var _mode = QRMode.MODE_8BIT_BYTE;\n\t    var _data = data;\n\t    var _bytes = qrcode.stringToBytes(data);\n\t\n\t    var _this = {};\n\t\n\t    _this.getMode = function() {\n\t      return _mode;\n\t    };\n\t\n\t    _this.getLength = function(buffer) {\n\t      return _bytes.length;\n\t    };\n\t\n\t    _this.write = function(buffer) {\n\t      for (var i = 0; i < _bytes.length; i += 1) {\n\t        buffer.put(_bytes[i], 8);\n\t      }\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // qrKanji\n\t  //---------------------------------------------------------------------\n\t\n\t  var qrKanji = function(data) {\n\t\n\t    var _mode = QRMode.MODE_KANJI;\n\t    var _data = data;\n\t\n\t    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n\t    if (!stringToBytes) {\n\t      throw 'sjis not supported.';\n\t    }\n\t    !function(c, code) {\n\t      // self test for sjis support.\n\t      var test = stringToBytes(c);\n\t      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n\t        throw 'sjis not supported.';\n\t      }\n\t    }('\\u53cb', 0x9746);\n\t\n\t    var _bytes = stringToBytes(data);\n\t\n\t    var _this = {};\n\t\n\t    _this.getMode = function() {\n\t      return _mode;\n\t    };\n\t\n\t    _this.getLength = function(buffer) {\n\t      return ~~(_bytes.length / 2);\n\t    };\n\t\n\t    _this.write = function(buffer) {\n\t\n\t      var data = _bytes;\n\t\n\t      var i = 0;\n\t\n\t      while (i + 1 < data.length) {\n\t\n\t        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\t\n\t        if (0x8140 <= c && c <= 0x9FFC) {\n\t          c -= 0x8140;\n\t        } else if (0xE040 <= c && c <= 0xEBBF) {\n\t          c -= 0xC140;\n\t        } else {\n\t          throw 'illegal char at ' + (i + 1) + '/' + c;\n\t        }\n\t\n\t        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\t\n\t        buffer.put(c, 13);\n\t\n\t        i += 2;\n\t      }\n\t\n\t      if (i < data.length) {\n\t        throw 'illegal char at ' + (i + 1);\n\t      }\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //=====================================================================\n\t  // GIF Support etc.\n\t  //\n\t\n\t  //---------------------------------------------------------------------\n\t  // byteArrayOutputStream\n\t  //---------------------------------------------------------------------\n\t\n\t  var byteArrayOutputStream = function() {\n\t\n\t    var _bytes = [];\n\t\n\t    var _this = {};\n\t\n\t    _this.writeByte = function(b) {\n\t      _bytes.push(b & 0xff);\n\t    };\n\t\n\t    _this.writeShort = function(i) {\n\t      _this.writeByte(i);\n\t      _this.writeByte(i >>> 8);\n\t    };\n\t\n\t    _this.writeBytes = function(b, off, len) {\n\t      off = off || 0;\n\t      len = len || b.length;\n\t      for (var i = 0; i < len; i += 1) {\n\t        _this.writeByte(b[i + off]);\n\t      }\n\t    };\n\t\n\t    _this.writeString = function(s) {\n\t      for (var i = 0; i < s.length; i += 1) {\n\t        _this.writeByte(s.charCodeAt(i) );\n\t      }\n\t    };\n\t\n\t    _this.toByteArray = function() {\n\t      return _bytes;\n\t    };\n\t\n\t    _this.toString = function() {\n\t      var s = '';\n\t      s += '[';\n\t      for (var i = 0; i < _bytes.length; i += 1) {\n\t        if (i > 0) {\n\t          s += ',';\n\t        }\n\t        s += _bytes[i];\n\t      }\n\t      s += ']';\n\t      return s;\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // base64EncodeOutputStream\n\t  //---------------------------------------------------------------------\n\t\n\t  var base64EncodeOutputStream = function() {\n\t\n\t    var _buffer = 0;\n\t    var _buflen = 0;\n\t    var _length = 0;\n\t    var _base64 = '';\n\t\n\t    var _this = {};\n\t\n\t    var writeEncoded = function(b) {\n\t      _base64 += String.fromCharCode(encode(b & 0x3f) );\n\t    };\n\t\n\t    var encode = function(n) {\n\t      if (n < 0) {\n\t        // error.\n\t      } else if (n < 26) {\n\t        return 0x41 + n;\n\t      } else if (n < 52) {\n\t        return 0x61 + (n - 26);\n\t      } else if (n < 62) {\n\t        return 0x30 + (n - 52);\n\t      } else if (n == 62) {\n\t        return 0x2b;\n\t      } else if (n == 63) {\n\t        return 0x2f;\n\t      }\n\t      throw 'n:' + n;\n\t    };\n\t\n\t    _this.writeByte = function(n) {\n\t\n\t      _buffer = (_buffer << 8) | (n & 0xff);\n\t      _buflen += 8;\n\t      _length += 1;\n\t\n\t      while (_buflen >= 6) {\n\t        writeEncoded(_buffer >>> (_buflen - 6) );\n\t        _buflen -= 6;\n\t      }\n\t    };\n\t\n\t    _this.flush = function() {\n\t\n\t      if (_buflen > 0) {\n\t        writeEncoded(_buffer << (6 - _buflen) );\n\t        _buffer = 0;\n\t        _buflen = 0;\n\t      }\n\t\n\t      if (_length % 3 != 0) {\n\t        // padding\n\t        var padlen = 3 - _length % 3;\n\t        for (var i = 0; i < padlen; i += 1) {\n\t          _base64 += '=';\n\t        }\n\t      }\n\t    };\n\t\n\t    _this.toString = function() {\n\t      return _base64;\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // base64DecodeInputStream\n\t  //---------------------------------------------------------------------\n\t\n\t  var base64DecodeInputStream = function(str) {\n\t\n\t    var _str = str;\n\t    var _pos = 0;\n\t    var _buffer = 0;\n\t    var _buflen = 0;\n\t\n\t    var _this = {};\n\t\n\t    _this.read = function() {\n\t\n\t      while (_buflen < 8) {\n\t\n\t        if (_pos >= _str.length) {\n\t          if (_buflen == 0) {\n\t            return -1;\n\t          }\n\t          throw 'unexpected end of file./' + _buflen;\n\t        }\n\t\n\t        var c = _str.charAt(_pos);\n\t        _pos += 1;\n\t\n\t        if (c == '=') {\n\t          _buflen = 0;\n\t          return -1;\n\t        } else if (c.match(/^\\s$/) ) {\n\t          // ignore if whitespace.\n\t          continue;\n\t        }\n\t\n\t        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n\t        _buflen += 6;\n\t      }\n\t\n\t      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n\t      _buflen -= 8;\n\t      return n;\n\t    };\n\t\n\t    var decode = function(c) {\n\t      if (0x41 <= c && c <= 0x5a) {\n\t        return c - 0x41;\n\t      } else if (0x61 <= c && c <= 0x7a) {\n\t        return c - 0x61 + 26;\n\t      } else if (0x30 <= c && c <= 0x39) {\n\t        return c - 0x30 + 52;\n\t      } else if (c == 0x2b) {\n\t        return 62;\n\t      } else if (c == 0x2f) {\n\t        return 63;\n\t      } else {\n\t        throw 'c:' + c;\n\t      }\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // gifImage (B/W)\n\t  //---------------------------------------------------------------------\n\t\n\t  var gifImage = function(width, height) {\n\t\n\t    var _width = width;\n\t    var _height = height;\n\t    var _data = new Array(width * height);\n\t\n\t    var _this = {};\n\t\n\t    _this.setPixel = function(x, y, pixel) {\n\t      _data[y * _width + x] = pixel;\n\t    };\n\t\n\t    _this.write = function(out) {\n\t\n\t      //---------------------------------\n\t      // GIF Signature\n\t\n\t      out.writeString('GIF87a');\n\t\n\t      //---------------------------------\n\t      // Screen Descriptor\n\t\n\t      out.writeShort(_width);\n\t      out.writeShort(_height);\n\t\n\t      out.writeByte(0x80); // 2bit\n\t      out.writeByte(0);\n\t      out.writeByte(0);\n\t\n\t      //---------------------------------\n\t      // Global Color Map\n\t\n\t      // black\n\t      out.writeByte(0x00);\n\t      out.writeByte(0x00);\n\t      out.writeByte(0x00);\n\t\n\t      // white\n\t      out.writeByte(0xff);\n\t      out.writeByte(0xff);\n\t      out.writeByte(0xff);\n\t\n\t      //---------------------------------\n\t      // Image Descriptor\n\t\n\t      out.writeString(',');\n\t      out.writeShort(0);\n\t      out.writeShort(0);\n\t      out.writeShort(_width);\n\t      out.writeShort(_height);\n\t      out.writeByte(0);\n\t\n\t      //---------------------------------\n\t      // Local Color Map\n\t\n\t      //---------------------------------\n\t      // Raster Data\n\t\n\t      var lzwMinCodeSize = 2;\n\t      var raster = getLZWRaster(lzwMinCodeSize);\n\t\n\t      out.writeByte(lzwMinCodeSize);\n\t\n\t      var offset = 0;\n\t\n\t      while (raster.length - offset > 255) {\n\t        out.writeByte(255);\n\t        out.writeBytes(raster, offset, 255);\n\t        offset += 255;\n\t      }\n\t\n\t      out.writeByte(raster.length - offset);\n\t      out.writeBytes(raster, offset, raster.length - offset);\n\t      out.writeByte(0x00);\n\t\n\t      //---------------------------------\n\t      // GIF Terminator\n\t      out.writeString(';');\n\t    };\n\t\n\t    var bitOutputStream = function(out) {\n\t\n\t      var _out = out;\n\t      var _bitLength = 0;\n\t      var _bitBuffer = 0;\n\t\n\t      var _this = {};\n\t\n\t      _this.write = function(data, length) {\n\t\n\t        if ( (data >>> length) != 0) {\n\t          throw 'length over';\n\t        }\n\t\n\t        while (_bitLength + length >= 8) {\n\t          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n\t          length -= (8 - _bitLength);\n\t          data >>>= (8 - _bitLength);\n\t          _bitBuffer = 0;\n\t          _bitLength = 0;\n\t        }\n\t\n\t        _bitBuffer = (data << _bitLength) | _bitBuffer;\n\t        _bitLength = _bitLength + length;\n\t      };\n\t\n\t      _this.flush = function() {\n\t        if (_bitLength > 0) {\n\t          _out.writeByte(_bitBuffer);\n\t        }\n\t      };\n\t\n\t      return _this;\n\t    };\n\t\n\t    var getLZWRaster = function(lzwMinCodeSize) {\n\t\n\t      var clearCode = 1 << lzwMinCodeSize;\n\t      var endCode = (1 << lzwMinCodeSize) + 1;\n\t      var bitLength = lzwMinCodeSize + 1;\n\t\n\t      // Setup LZWTable\n\t      var table = lzwTable();\n\t\n\t      for (var i = 0; i < clearCode; i += 1) {\n\t        table.add(String.fromCharCode(i) );\n\t      }\n\t      table.add(String.fromCharCode(clearCode) );\n\t      table.add(String.fromCharCode(endCode) );\n\t\n\t      var byteOut = byteArrayOutputStream();\n\t      var bitOut = bitOutputStream(byteOut);\n\t\n\t      // clear code\n\t      bitOut.write(clearCode, bitLength);\n\t\n\t      var dataIndex = 0;\n\t\n\t      var s = String.fromCharCode(_data[dataIndex]);\n\t      dataIndex += 1;\n\t\n\t      while (dataIndex < _data.length) {\n\t\n\t        var c = String.fromCharCode(_data[dataIndex]);\n\t        dataIndex += 1;\n\t\n\t        if (table.contains(s + c) ) {\n\t\n\t          s = s + c;\n\t\n\t        } else {\n\t\n\t          bitOut.write(table.indexOf(s), bitLength);\n\t\n\t          if (table.size() < 0xfff) {\n\t\n\t            if (table.size() == (1 << bitLength) ) {\n\t              bitLength += 1;\n\t            }\n\t\n\t            table.add(s + c);\n\t          }\n\t\n\t          s = c;\n\t        }\n\t      }\n\t\n\t      bitOut.write(table.indexOf(s), bitLength);\n\t\n\t      // end code\n\t      bitOut.write(endCode, bitLength);\n\t\n\t      bitOut.flush();\n\t\n\t      return byteOut.toByteArray();\n\t    };\n\t\n\t    var lzwTable = function() {\n\t\n\t      var _map = {};\n\t      var _size = 0;\n\t\n\t      var _this = {};\n\t\n\t      _this.add = function(key) {\n\t        if (_this.contains(key) ) {\n\t          throw 'dup key:' + key;\n\t        }\n\t        _map[key] = _size;\n\t        _size += 1;\n\t      };\n\t\n\t      _this.size = function() {\n\t        return _size;\n\t      };\n\t\n\t      _this.indexOf = function(key) {\n\t        return _map[key];\n\t      };\n\t\n\t      _this.contains = function(key) {\n\t        return typeof _map[key] != 'undefined';\n\t      };\n\t\n\t      return _this;\n\t    };\n\t\n\t    return _this;\n\t  };\n\t\n\t  var createDataURL = function(width, height, getPixel) {\n\t    var gif = gifImage(width, height);\n\t    for (var y = 0; y < height; y += 1) {\n\t      for (var x = 0; x < width; x += 1) {\n\t        gif.setPixel(x, y, getPixel(x, y) );\n\t      }\n\t    }\n\t\n\t    var b = byteArrayOutputStream();\n\t    gif.write(b);\n\t\n\t    var base64 = base64EncodeOutputStream();\n\t    var bytes = b.toByteArray();\n\t    for (var i = 0; i < bytes.length; i += 1) {\n\t      base64.writeByte(bytes[i]);\n\t    }\n\t    base64.flush();\n\t\n\t    return 'data:image/gif;base64,' + base64;\n\t  };\n\t\n\t  //---------------------------------------------------------------------\n\t  // returns qrcode function.\n\t\n\t  return qrcode;\n\t}();\n\t\n\t// multibyte support\n\t!function() {\n\t\n\t  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n\t    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\t    function toUTF8Array(str) {\n\t      var utf8 = [];\n\t      for (var i=0; i < str.length; i++) {\n\t        var charcode = str.charCodeAt(i);\n\t        if (charcode < 0x80) utf8.push(charcode);\n\t        else if (charcode < 0x800) {\n\t          utf8.push(0xc0 | (charcode >> 6),\n\t              0x80 | (charcode & 0x3f));\n\t        }\n\t        else if (charcode < 0xd800 || charcode >= 0xe000) {\n\t          utf8.push(0xe0 | (charcode >> 12),\n\t              0x80 | ((charcode>>6) & 0x3f),\n\t              0x80 | (charcode & 0x3f));\n\t        }\n\t        // surrogate pair\n\t        else {\n\t          i++;\n\t          // UTF-16 encodes 0x10000-0x10FFFF by\n\t          // subtracting 0x10000 and splitting the\n\t          // 20 bits of 0x0-0xFFFFF into two halves\n\t          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n\t            | (str.charCodeAt(i) & 0x3ff));\n\t          utf8.push(0xf0 | (charcode >>18),\n\t              0x80 | ((charcode>>12) & 0x3f),\n\t              0x80 | ((charcode>>6) & 0x3f),\n\t              0x80 | (charcode & 0x3f));\n\t        }\n\t      }\n\t      return utf8;\n\t    }\n\t    return toUTF8Array(s);\n\t  };\n\t\n\t}();\n\t\n\t(function (factory) {\n\t  if (true) {\n\t      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t      module.exports = factory();\n\t  }\n\t}(function () {\n\t    return qrcode;\n\t}));\n\n\n/***/ }),\n\n/***/ 146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _assign = __webpack_require__(10);\n\t\n\tvar _assign2 = _interopRequireDefault(_assign);\n\t\n\tvar _qrcanvasVue = __webpack_require__(75);\n\t\n\tvar _qrcanvasVue2 = _interopRequireDefault(_qrcanvasVue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    Qrcanvas: _qrcanvasVue2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      qrcodeObj: {},\n\t      qrcodeImg: '',\n\t      info: {}\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    getTicketInfo: function getTicketInfo() {\n\t      var _this = this;\n\t\n\t      var ticketsId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\t\n\t      this.$mui.showWaiting();\n\t      this.$server.movie.getTicketInfo({ ticketsId: ticketsId }).then(function (_ref) {\n\t        var data = _ref.data;\n\t\n\t        if (data.usefulTime) {\n\t          var datetimeStr = data.usefulTime.split(' ');\n\t          data.dateStr = datetimeStr[0];\n\t          data.timeStr = datetimeStr[1].substring(0, datetimeStr[1].length - 3);\n\t        }\n\t        _this.info = data;\n\t\n\t        _this.qrcodeObj = (0, _assign2.default)({}, {\n\t          data: data.number,\n\t          cellSize: 5,\n\t          correctLevel: 'H',\n\t          typeNumber: 5,\n\t          logo: {\n\t            fontFamily: 'Arial',\n\t            size: 0.15,\n\t            color: '#000',\n\t            text: 'U视一号',\n\t            clearEdges: 2,\n\t            margin: 10\n\t          },\n\t          effect: {\n\t            key: 'round',\n\t            value: 0.2\n\t          }\n\t        });\n\t\n\t        _this.$nextTick(function () {\n\t          _this.qrcodeImg = _this.convertToImage();\n\t        });\n\t      }).finally(function () {\n\t        _this.$mui.hideWaiting();\n\t      });\n\t    },\n\t    convertToImage: function convertToImage() {\n\t      var qrcodeCanvas = this.$refs.qrcode.children[0];\n\t      if (!qrcodeCanvas) return '';\n\t\n\t      var type = 'image/png';\n\t\n\t      var imageData = qrcodeCanvas.toDataURL(type) || '';\n\t      return imageData;\n\t    }\n\t  },\n\t  mounted: function mounted() {\n\t    this.getTicketInfo(this.$route.params.id);\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 257:\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(2)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".l-movie-quan[data-v-b9078570]{background:#fff;margin:.75rem;overflow:hidden}.l-movie-quan ._name[data-v-b9078570]{margin:.5rem .75rem}.l-movie-remark[data-v-b9078570]{font-size:.75rem;list-style:decimal;border-top:1px dashed #ddd;padding-top:.75rem;padding-right:.75rem}.l-qrcode-img[data-v-b9078570]{width:8rem;height:8rem;margin:0 auto;text-align:center;position:relative;z-index:1;background:#fff;padding:.75rem}.l-qrcode-img .canvas[data-v-b9078570]{display:none}.l-qrcode-img img[data-v-b9078570]{width:100%;height:100%}.l-qrcode-img[data-v-b9078570]:after{content:\\\"\\\\4E8C\\\\7EF4\\\\7801\\\\751F\\\\6210\\\\4E2D...\\\";position:absolute;left:0;right:0;text-align:center;top:50%;margin-top:-.3rem;font-size:.6rem;color:#999;z-index:-1}\", \"\", {\"version\":3,\"sources\":[\"/./src/pages/movie-quan.vue\"],\"names\":[],\"mappings\":\"AACA,+BAA+B,gBAAgB,cAAc,eAAe,CAC3E,AACD,sCAAsC,mBAAmB,CACxD,AACD,iCAAiC,iBAAiB,mBAAmB,2BAA2B,mBAAmB,oBAAoB,CACtI,AACD,+BAA+B,WAAW,YAAY,cAAc,kBAAkB,kBAAkB,UAAU,gBAAgB,cAAc,CAC/I,AACD,uCAAuC,YAAY,CAClD,AACD,mCAAmC,WAAW,WAAW,CACxD,AACD,qCAAqC,4CAAoB,kBAAkB,OAAO,QAAQ,kBAAkB,QAAQ,kBAAmB,gBAAgB,WAAW,UAAU,CAC3K\",\"file\":\"movie-quan.vue\",\"sourcesContent\":[\"\\n.l-movie-quan[data-v-b9078570]{background:#fff;margin:.75rem;overflow:hidden\\n}\\n.l-movie-quan ._name[data-v-b9078570]{margin:.5rem .75rem\\n}\\n.l-movie-remark[data-v-b9078570]{font-size:.75rem;list-style:decimal;border-top:1px dashed #ddd;padding-top:.75rem;padding-right:.75rem\\n}\\n.l-qrcode-img[data-v-b9078570]{width:8rem;height:8rem;margin:0 auto;text-align:center;position:relative;z-index:1;background:#fff;padding:.75rem\\n}\\n.l-qrcode-img .canvas[data-v-b9078570]{display:none\\n}\\n.l-qrcode-img img[data-v-b9078570]{width:100%;height:100%\\n}\\n.l-qrcode-img[data-v-b9078570]:after{content:'二维码生成中...';position:absolute;left:0;right:0;text-align:center;top:50%;margin-top:-0.3rem;font-size:.6rem;color:#999;z-index:-1\\n}\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(257);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(3)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!../../node_modules/less-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./movie-quan.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!../../node_modules/less-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./movie-quan.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }),\n\n/***/ 365:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/* styles */\n\t__webpack_require__(300)\n\t\n\tvar Component = __webpack_require__(1)(\n\t  /* script */\n\t  __webpack_require__(146),\n\t  /* template */\n\t  __webpack_require__(428),\n\t  /* scopeId */\n\t  \"data-v-b9078570\",\n\t  /* cssModules */\n\t  null\n\t)\n\t\n\tmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports) {\n\n\tmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('div', {\n\t    staticClass: \"l-page\"\n\t  }, [(!_vm.$device.isWechat) ? _c('header', {\n\t    staticClass: \"mui-bar mui-bar-nav l-black\"\n\t  }, [_c('h1', {\n\t    staticClass: \"mui-title\"\n\t  }, [_vm._v(_vm._s(_vm.$route.meta.title))]), _vm._v(\" \"), _c('a', {\n\t    staticClass: \"mui-icon mui-icon-arrowleft mui-pull-left _nav-back\"\n\t  })]) : _vm._e(), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"mui-content\",\n\t    attrs: {\n\t      \"id\": \"scroll-content\"\n\t    }\n\t  }, [_c('div', {\n\t    staticClass: \"l-movie-quan\"\n\t  }, [_c('div', {\n\t    staticClass: \"_name\"\n\t  }, [_c('p', {\n\t    staticClass: \"l-fs-s l-text-gray\"\n\t  }, [_vm._v(\"电影名称\")]), _vm._v(\" \"), _c('h3', [_vm._v(_vm._s(_vm.info.projectName))])]), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": _vm.info.projectImage,\n\t      \"alt\": \"\"\n\t    }\n\t  }), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"l-flex-hc l-margin\"\n\t  }, [_c('div', {\n\t    staticClass: \"l-rest\"\n\t  }, [_c('p', {\n\t    staticClass: \"l-fs-xs l-text-gray\"\n\t  }, [_vm._v(\"日期\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.dateStr))])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"l-rest\"\n\t  }, [_c('p', {\n\t    staticClass: \"l-fs-xs l-text-gray\"\n\t  }, [_vm._v(\"场次\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.timeStr))])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"l-rest\"\n\t  }, [_c('p', {\n\t    staticClass: \"l-fs-xs l-text-gray\"\n\t  }, [_vm._v(\"券码\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.number))])])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"l-margin\"\n\t  }, [_c('p', {\n\t    staticClass: \"l-fs-xs l-text-gray\"\n\t  }, [_vm._v(\"影院地址\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.address))])]), _vm._v(\" \"), _c('div', {\n\t    staticClass: \"l-margin l-text-center\"\n\t  }, [_c('div', {\n\t    staticClass: \"l-qrcode-img\"\n\t  }, [_c('div', {\n\t    ref: \"qrcode\",\n\t    staticClass: \"canvas\"\n\t  }, [_c('qrcanvas', {\n\t    attrs: {\n\t      \"options\": _vm.qrcodeObj\n\t    }\n\t  })], 1), _vm._v(\" \"), _c('img', {\n\t    attrs: {\n\t      \"src\": _vm.qrcodeImg,\n\t      \"alt\": \"\"\n\t    }\n\t  })]), _vm._v(\" \"), _c('p', {\n\t    staticClass: \"l-text-gray l-fs-s\"\n\t  }, [_vm._v(\"(建议截图保存)\")])]), _vm._v(\" \"), _vm._m(0)])])])\n\t},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n\t  return _c('ul', {\n\t    staticClass: \"l-movie-remark\"\n\t  }, [_c('li', [_vm._v(\"电影票资源珍贵，请持票的您务必到场以免造成浪费，如果无法到场，可以将电子票截图赠送好友；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"向工作人员出示二维码即可领票入场；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"本活动最终解释权归贵州优视一号生物科技有限公司；\")])])\n\t}]}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/5.3c0f05602f0a149956ee.js","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/defineProperty.js\n// module id = 23\n// module chunks = 2 5","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/objectSpread.js\n// module id = 24\n// module chunks = 2 5","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/classCallCheck.js\n// module id = 43\n// module chunks = 2 5","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/createClass.js\n// module id = 44\n// module chunks = 2 5","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/objectWithoutProperties.js\n// module id = 45\n// module chunks = 2 5","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\n// module id = 46\n// module chunks = 2 5","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar _objectSpread = _interopDefault(require('@babel/runtime/helpers/objectSpread'));\nvar qrcanvas = require('qrcanvas');\n\nvar index = {\n  props: ['options'],\n  render: function render(h) {\n    return h('canvas');\n  },\n  methods: {\n    update: function update(options) {\n      // Render only if mounted, skip SSR.\n      if (!this.mounted) return;\n      this.$emit('beforeUpdate', this.$el);\n      qrcanvas.qrcanvas(_objectSpread({}, options, {\n        canvas: this.$el\n      }));\n      this.$emit('updated', this.$el);\n    }\n  },\n  watch: {\n    options: 'update'\n  },\n  mounted: function mounted() {\n    this.mounted = true;\n    this.update(this.options);\n  }\n};\n\nmodule.exports = index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qrcanvas-vue/lib/qrcanvas-vue.common.js\n// module id = 75\n// module chunks = 2 5","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar _objectSpread = _interopDefault(require('@babel/runtime/helpers/objectSpread'));\nvar _classCallCheck = _interopDefault(require('@babel/runtime/helpers/classCallCheck'));\nvar _createClass = _interopDefault(require('@babel/runtime/helpers/createClass'));\nvar _defineProperty = _interopDefault(require('@babel/runtime/helpers/defineProperty'));\nvar qrcode = _interopDefault(require('qrcode-generator'));\nvar _objectWithoutProperties = _interopDefault(require('@babel/runtime/helpers/objectWithoutProperties'));\n\nvar COLOR_BLACK = '#000';\nvar COLOR_WHITE = '#fff';\n\nvar cache = [];\n\nvar notImplemented = function notImplemented() {\n  throw new Error('Not implemented');\n};\n\nvar helpers = {\n  createCanvas: notImplemented,\n  isCanvas: notImplemented,\n  isDrawable: notImplemented,\n  getCanvas: getCanvas,\n  cacheCanvas: cacheCanvas,\n  drawCanvas: drawCanvas,\n  drawText: drawText\n};\n/**\n * @desc Create a new canvas.\n * @param {Int} width Width of the canvas.\n * @param {Int} height Height of the canvas.\n * @return {Canvas}\n */\n\nfunction getCanvas() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      width = _ref.width,\n      height = _ref.height,\n      canvas = _ref.canvas;\n\n  var rCanvas = canvas || helpers.createCanvas();\n\n  if (width) {\n    rCanvas.width = width;\n    rCanvas.height = height == null ? width : height;\n  }\n\n  return rCanvas;\n}\n\nfunction cacheCanvas() {\n  cache.push.apply(cache, arguments);\n}\n/**\n * @desc Draw to the canvas with given image or colors.\n * @param {Canvas} canvas The canvas to initialize.\n * @param {Image | String | Array} data\n * @param {Object} options\n *    cellSize: {Int}\n *    clear: {Boolean}\n */\n\n\nfunction drawCanvas(canvas, data, options) {\n  var _ref2 = options || {},\n      cellSize = _ref2.cellSize,\n      context = _ref2.context,\n      _ref2$clear = _ref2.clear,\n      clear = _ref2$clear === void 0 ? true : _ref2$clear;\n\n  var width = canvas.width,\n      height = canvas.height;\n  var queue = [data];\n  var ctx = context || canvas.getContext('2d');\n  if (clear) ctx.clearRect(0, 0, width, height);\n  ctx.globalCompositeOperation = 'source-over';\n\n  while (queue.length) {\n    var item = queue.shift();\n\n    if (Array.isArray(item)) {\n      queue = item.concat(queue);\n    } else if (item) {\n      var obj = void 0;\n\n      if (helpers.isDrawable(item)) {\n        obj = {\n          image: item\n        };\n      } else if (typeof item === 'string') {\n        obj = {\n          style: item\n        };\n      } else {\n        obj = item;\n      }\n\n      var x = ('col' in obj ? obj.col * cellSize : obj.x) || 0;\n      var y = ('row' in obj ? obj.row * cellSize : obj.y) || 0;\n      if (x < 0) x += width;\n      if (y < 0) y += width;\n      var w = ('cols' in obj ? obj.cols * cellSize : obj.w) || width;\n      var h = ('rows' in obj ? obj.rows * cellSize : obj.h) || width;\n\n      if (obj.image) {\n        ctx.drawImage(obj.image, x, y, w, h);\n      } else {\n        ctx.fillStyle = obj.style || 'black';\n        ctx.fillRect(x, y, w, h);\n      }\n    }\n  }\n\n  return canvas;\n}\n\nfunction drawText(text, options) {\n  var _ref3 = options || {},\n      _ref3$fontSize = _ref3.fontSize,\n      fontSize = _ref3$fontSize === void 0 ? 64 : _ref3$fontSize,\n      _ref3$fontStyle = _ref3.fontStyle,\n      fontStyle = _ref3$fontStyle === void 0 ? '' : _ref3$fontStyle,\n      _ref3$fontFamily = _ref3.fontFamily,\n      fontFamily = _ref3$fontFamily === void 0 ? 'Cursive' : _ref3$fontFamily,\n      color = _ref3.color,\n      _ref3$pad = _ref3.pad,\n      pad = _ref3$pad === void 0 ? 8 : _ref3$pad,\n      _ref3$padColor = _ref3.padColor,\n      padColor = _ref3$padColor === void 0 ? COLOR_WHITE : _ref3$padColor,\n      _ref3$mode = _ref3.mode,\n      mode = _ref3$mode === void 0 ? 1 : _ref3$mode;\n\n  var canvas = getCanvas();\n  var ctx = canvas.getContext('2d');\n  var padColorArr;\n\n  if (padColor) {\n    ctx.fillStyle = padColor;\n    ctx.fillRect(0, 0, 1, 1);\n\n    var _ctx$getImageData = ctx.getImageData(0, 0, 1, 1);\n\n    padColorArr = _ctx$getImageData.data;\n    if (!padColorArr[3]) padColorArr = null;\n  }\n\n  var height = fontSize + 2 * pad;\n  var font = [fontStyle, \"\".concat(fontSize, \"px\"), fontFamily].filter(Boolean).join(' ');\n\n  var resetContext = function resetContext() {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.font = font;\n  };\n\n  resetContext();\n  var width = Math.ceil(ctx.measureText(text).width) + 2 * pad;\n  canvas.width = width;\n  canvas.height = height;\n  resetContext();\n\n  var fillText = function fillText() {\n    ctx.fillStyle = color || COLOR_BLACK;\n    ctx.fillText(text, width / 2, height / 2);\n  };\n\n  if (mode === 1) {\n    ctx.fillStyle = padColor;\n    ctx.fillRect(0, 0, width, height);\n    fillText();\n  } else {\n    fillText();\n\n    if (padColorArr) {\n      (function () {\n        var imageData = ctx.getImageData(0, 0, width, height);\n        var data = imageData.data;\n        var total = width * height;\n        var padded = [];\n        var offset = 0;\n\n        var _loop = function _loop(loop) {\n          var current = [];\n          var unique = {};\n          padded[offset] = current;\n          offset = 1 - offset;\n          var last = padded[offset];\n\n          if (!last) {\n            last = [];\n\n            for (var i = 0; i < total; i += 1) {\n              last.push(i);\n            }\n          }\n\n          last.forEach(function (i) {\n            if (data[4 * i + 3]) {\n              [i % width ? i - 1 : -1, (i + 1) % width ? i + 1 : -1, i - width, i + width].forEach(function (j) {\n                var k = 4 * j;\n\n                if (k >= 0 && k <= data.length && !unique[j]) {\n                  unique[j] = 1;\n                  current.push(j);\n                }\n              });\n            }\n          });\n          current.forEach(function (i) {\n            var j = 4 * i;\n\n            if (!data[j + 3]) {\n              for (var k = 0; k < 4; k += 1) {\n                data[j + k] = padColorArr[k];\n              }\n            }\n          });\n        };\n\n        for (var loop = 0; loop < pad; loop += 1) {\n          _loop(loop);\n        }\n\n        ctx.putImageData(imageData, 0, 0);\n      })();\n    }\n  }\n\n  return canvas;\n}\n\nvar effects = {\n  default: renderDefault,\n  round: renderRound,\n  fusion: renderFusion,\n  spot: renderSpot\n};\n\nfunction renderDefault(_ref) {\n  var foreground = _ref.foreground,\n      cellSize = _ref.cellSize,\n      isDark = _ref.isDark,\n      count = _ref.count;\n  var getCanvas = helpers.getCanvas,\n      drawCanvas = helpers.drawCanvas,\n      cacheCanvas = helpers.cacheCanvas;\n  var width = cellSize * count;\n  var canvasMask = getCanvas({\n    width: width\n  });\n  var context = canvasMask.getContext('2d');\n  context.fillStyle = COLOR_BLACK;\n  drawCells({\n    cellSize: cellSize,\n    count: count\n  }, function (_ref2) {\n    var i = _ref2.i,\n        j = _ref2.j,\n        x = _ref2.x,\n        y = _ref2.y;\n\n    if (isDark(i, j)) {\n      context.fillRect(x, y, cellSize, cellSize);\n    }\n  });\n  var canvasFg = getCanvas({\n    width: width\n  });\n  drawCanvas(canvasFg, foreground, {\n    cellSize: cellSize\n  });\n  var ctx = canvasFg.getContext('2d');\n  ctx.globalCompositeOperation = 'destination-in';\n  ctx.drawImage(canvasMask, 0, 0);\n  cacheCanvas(canvasMask);\n  return canvasFg;\n}\n\nfunction renderRound(_ref3, maskOptions) {\n  var foreground = _ref3.foreground,\n      cellSize = _ref3.cellSize,\n      isDark = _ref3.isDark,\n      count = _ref3.count;\n  var getCanvas = helpers.getCanvas,\n      drawCanvas = helpers.drawCanvas,\n      cacheCanvas = helpers.cacheCanvas;\n  var width = cellSize * count;\n  var canvasMask = getCanvas({\n    width: width\n  });\n  var _maskOptions$value = maskOptions.value,\n      value = _maskOptions$value === void 0 ? 1 : _maskOptions$value;\n  var radius = value * cellSize / 2;\n  var context = canvasMask.getContext('2d');\n  context.fillStyle = COLOR_BLACK;\n  drawCells({\n    cellSize: cellSize,\n    count: count\n  }, function (_ref4) {\n    var i = _ref4.i,\n        j = _ref4.j,\n        x = _ref4.x,\n        y = _ref4.y;\n\n    if (isDark(i, j)) {\n      context.beginPath();\n      context.moveTo(x + 0.5 * cellSize, y);\n      drawCorner(context, x + cellSize, y, x + cellSize, y + 0.5 * cellSize, radius);\n      drawCorner(context, x + cellSize, y + cellSize, x + 0.5 * cellSize, y + cellSize, radius);\n      drawCorner(context, x, y + cellSize, x, y + 0.5 * cellSize, radius);\n      drawCorner(context, x, y, x + 0.5 * cellSize, y, radius); // context.closePath();\n\n      context.fill();\n    }\n  });\n  var canvasFg = getCanvas({\n    width: width\n  });\n  drawCanvas(canvasFg, foreground, {\n    cellSize: cellSize\n  });\n  var ctx = canvasFg.getContext('2d');\n  ctx.globalCompositeOperation = 'destination-in';\n  ctx.drawImage(canvasMask, 0, 0);\n  cacheCanvas(canvasMask);\n  return canvasFg;\n}\n\nfunction renderFusion(_ref5, maskOptions) {\n  var foreground = _ref5.foreground,\n      cellSize = _ref5.cellSize,\n      isDark = _ref5.isDark,\n      count = _ref5.count;\n  var getCanvas = helpers.getCanvas,\n      drawCanvas = helpers.drawCanvas,\n      cacheCanvas = helpers.cacheCanvas;\n  var width = cellSize * count;\n  var canvasMask = getCanvas({\n    width: width\n  });\n  var context = canvasMask.getContext('2d');\n  context.fillStyle = COLOR_BLACK;\n  var _maskOptions$value2 = maskOptions.value,\n      value = _maskOptions$value2 === void 0 ? 1 : _maskOptions$value2;\n  var radius = value * cellSize / 2;\n  drawCells({\n    cellSize: cellSize,\n    count: count\n  }, function (_ref6) {\n    var i = _ref6.i,\n        j = _ref6.j,\n        x = _ref6.x,\n        y = _ref6.y;\n    var corners = [0, 0, 0, 0]; // NW, NE, SE, SW\n\n    if (isDark(i - 1, j)) {\n      corners[0] += 1;\n      corners[1] += 1;\n    }\n\n    if (isDark(i + 1, j)) {\n      corners[2] += 1;\n      corners[3] += 1;\n    }\n\n    if (isDark(i, j - 1)) {\n      corners[0] += 1;\n      corners[3] += 1;\n    }\n\n    if (isDark(i, j + 1)) {\n      corners[1] += 1;\n      corners[2] += 1;\n    }\n\n    if (isDark(i, j)) {\n      if (isDark(i - 1, j - 1)) corners[0] += 1;\n      if (isDark(i - 1, j + 1)) corners[1] += 1;\n      if (isDark(i + 1, j + 1)) corners[2] += 1;\n      if (isDark(i + 1, j - 1)) corners[3] += 1;\n      context.beginPath();\n      context.moveTo(x + 0.5 * cellSize, y);\n      drawCorner(context, x + cellSize, y, x + cellSize, y + 0.5 * cellSize, corners[1] ? 0 : radius);\n      drawCorner(context, x + cellSize, y + cellSize, x + 0.5 * cellSize, y + cellSize, corners[2] ? 0 : radius);\n      drawCorner(context, x, y + cellSize, x, y + 0.5 * cellSize, corners[3] ? 0 : radius);\n      drawCorner(context, x, y, x + 0.5 * cellSize, y, corners[0] ? 0 : radius); // context.closePath();\n\n      context.fill();\n    } else {\n      if (corners[0] === 2) {\n        fillCorner(context, x, y + 0.5 * cellSize, x, y, x + 0.5 * cellSize, y, radius);\n      }\n\n      if (corners[1] === 2) {\n        fillCorner(context, x + 0.5 * cellSize, y, x + cellSize, y, x + cellSize, y + 0.5 * cellSize, radius);\n      }\n\n      if (corners[2] === 2) {\n        fillCorner(context, x + cellSize, y + 0.5 * cellSize, x + cellSize, y + cellSize, x + 0.5 * cellSize, y + cellSize, radius);\n      }\n\n      if (corners[3] === 2) {\n        fillCorner(context, x + 0.5 * cellSize, y + cellSize, x, y + cellSize, x, y + 0.5 * cellSize, radius);\n      }\n    }\n  });\n  var canvasFg = getCanvas({\n    width: width\n  });\n  drawCanvas(canvasFg, foreground, {\n    cellSize: cellSize\n  });\n  var ctx = canvasFg.getContext('2d');\n  ctx.globalCompositeOperation = 'destination-in';\n  ctx.drawImage(canvasMask, 0, 0);\n  cacheCanvas(canvasMask);\n  return canvasFg;\n}\n\nfunction renderSpot(_ref7, maskOptions) {\n  var foreground = _ref7.foreground,\n      cellSize = _ref7.cellSize,\n      isDark = _ref7.isDark,\n      count = _ref7.count;\n  var getCanvas = helpers.getCanvas,\n      drawCanvas = helpers.drawCanvas,\n      cacheCanvas = helpers.cacheCanvas;\n  var width = cellSize * count;\n  var canvasMask = getCanvas({\n    width: width\n  });\n  var value = maskOptions.value,\n      _maskOptions$foregrou = maskOptions.foregroundLight,\n      foregroundLight = _maskOptions$foregrou === void 0 ? COLOR_WHITE : _maskOptions$foregrou;\n  var context = canvasMask.getContext('2d');\n  var canvasLayer = getCanvas({\n    width: width\n  });\n  var canvasFg = getCanvas({\n    width: width\n  });\n  var ctxLayer = canvasLayer.getContext('2d');\n  [{\n    dark: true,\n    foreground: foreground\n  }, {\n    dark: false,\n    foreground: foregroundLight\n  }].forEach(function (item) {\n    context.fillStyle = COLOR_BLACK;\n    context.clearRect(0, 0, width, width);\n    drawCells({\n      cellSize: cellSize,\n      count: count\n    }, function (_ref8) {\n      var i = _ref8.i,\n          j = _ref8.j,\n          x = _ref8.x,\n          y = _ref8.y;\n\n      if (isDark(i, j) ^ !item.dark) {\n        var fillSize;\n\n        if (i <= 7 && j <= 7 || i <= 7 && count - j - 1 <= 7 || count - i - 1 <= 7 && j <= 7 || i + 5 <= count && i + 9 >= count && j + 5 <= count && j + 9 >= count || i === 7 || j === 7) {\n          fillSize = 1 - 0.1 * value;\n        } else {\n          fillSize = 0.25;\n        }\n\n        var offset = (1 - fillSize) / 2;\n        context.fillRect(x + offset * cellSize, y + offset * cellSize, fillSize * cellSize, fillSize * cellSize);\n      }\n    });\n    drawCanvas(canvasLayer, item.foreground, {\n      cellSize: cellSize,\n      context: ctxLayer\n    });\n    ctxLayer.globalCompositeOperation = 'destination-in';\n    ctxLayer.drawImage(canvasMask, 0, 0);\n    drawCanvas(canvasFg, canvasLayer, {\n      cellSize: cellSize,\n      clear: false\n    });\n  });\n  cacheCanvas(canvasMask, canvasLayer);\n  return canvasFg;\n}\n\nfunction drawCells(_ref9, drawEach) {\n  var cellSize = _ref9.cellSize,\n      count = _ref9.count;\n\n  for (var i = 0; i < count; i += 1) {\n    for (var j = 0; j < count; j += 1) {\n      var x = j * cellSize;\n      var y = i * cellSize;\n      drawEach({\n        i: i,\n        j: j,\n        x: x,\n        y: y\n      });\n    }\n  }\n}\n\nfunction drawCorner(ctx, cornerX, cornerY, x, y, r) {\n  if (r) {\n    ctx.arcTo(cornerX, cornerY, x, y, r);\n  } else {\n    ctx.lineTo(cornerX, cornerY);\n    ctx.lineTo(x, y);\n  }\n}\n\nfunction fillCorner(context, startX, startY, cornerX, cornerY, destX, destY, radius) {\n  context.beginPath();\n  context.moveTo(startX, startY);\n  drawCorner(context, cornerX, cornerY, destX, destY, radius);\n  context.lineTo(cornerX, cornerY);\n  context.lineTo(startX, startY); // context.closePath();\n\n  context.fill();\n}\n\nqrcode.stringToBytes = qrcode.stringToBytesFuncs['UTF-8'];\nvar DEFAULT_PROPS = {\n  typeNumber: 0,\n  correctLevel: 'L',\n  data: ''\n};\n\nvar QRCanvasRenderer =\n/*#__PURE__*/\nfunction () {\n  function QRCanvasRenderer(options) {\n    var _this = this;\n\n    _classCallCheck(this, QRCanvasRenderer);\n\n    _defineProperty(this, \"options\", _objectSpread({}, DEFAULT_PROPS));\n\n    _defineProperty(this, \"cache\", {});\n\n    _defineProperty(this, \"isDark\", function (i, j) {\n      var _this$cache = _this.cache,\n          qr = _this$cache.qr,\n          count = _this$cache.count;\n      if (i < 0 || i >= count || j < 0 || j >= count) return false;\n      return qr.isDark(i, j);\n    });\n\n    this.setOptions(options);\n  }\n\n  _createClass(QRCanvasRenderer, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _objectSpread({}, this.options, options);\n      this.normalizeEffect();\n      this.normalizeLogo();\n      var _this$options = this.options,\n          typeNumber = _this$options.typeNumber,\n          data = _this$options.data,\n          logo = _this$options.logo; // L / M / Q / H\n\n      var correctLevel = this.options.correctLevel;\n      if (logo && ['Q', 'H'].indexOf(correctLevel) < 0) correctLevel = 'H';\n      var qr = qrcode(typeNumber, correctLevel);\n      qr.addData(data || '');\n      qr.make();\n      var count = qr.getModuleCount();\n      this.cache = {\n        qr: qr,\n        count: count\n      };\n    }\n  }, {\n    key: \"normalizeEffect\",\n    value: function normalizeEffect() {\n      var effect = this.options.effect;\n\n      if (typeof effect === 'string') {\n        effect = {\n          type: effect\n        };\n      }\n\n      this.options.effect = effect || {};\n    }\n  }, {\n    key: \"normalizeLogo\",\n    value: function normalizeLogo() {\n      var isDrawable = helpers.isDrawable,\n          drawText = helpers.drawText;\n      var logo = this.options.logo;\n\n      if (logo) {\n        if (isDrawable(logo)) {\n          logo = {\n            image: logo\n          };\n        } else if (!isDrawable(logo.image)) {\n          if (typeof logo === 'string') {\n            logo = {\n              text: logo\n            };\n          }\n\n          if (typeof logo.text === 'string') {\n            logo = {\n              image: drawText(logo.text, logo.options)\n            };\n          } else {\n            logo = null;\n          }\n        }\n      }\n\n      this.options.logo = logo;\n    }\n  }, {\n    key: \"render\",\n    value: function render(canvas) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _this$options2 = this.options,\n          _this$options2$backgr = _this$options2.background,\n          background = _this$options2$backgr === void 0 ? 'white' : _this$options2$backgr,\n          _this$options2$foregr = _this$options2.foreground,\n          foreground = _this$options2$foregr === void 0 ? 'black' : _this$options2$foregr,\n          effect = _this$options2.effect,\n          logo = _this$options2.logo;\n      var onRender = effects[effect.type] || effects.default;\n      var count = this.cache.count;\n      var getCanvas = helpers.getCanvas,\n          drawCanvas = helpers.drawCanvas,\n          cacheCanvas = helpers.cacheCanvas;\n      var size = config.size;\n      var canvasOut;\n      var canvasBg;\n      var canvasFg; // Prepare output canvas, resize it if cellSize or size is provided.\n\n      {\n        var cellSize = config.cellSize;\n        if (!canvas && !cellSize && !size) cellSize = 6;\n        if (cellSize) size = count * cellSize;\n\n        if (size) {\n          canvasOut = getCanvas({\n            canvas: canvas,\n            width: size\n          });\n        } else {\n          size = canvas.width;\n          canvasOut = canvas;\n        }\n      } // Create foreground and background layers on canvas\n\n      {\n        var _cellSize = Math.ceil(size / count);\n\n        var sketchSize = _cellSize * count;\n        canvasBg = getCanvas({\n          width: _cellSize * count\n        });\n        drawCanvas(canvasBg, background, {\n          cellSize: _cellSize\n        });\n        canvasFg = onRender(_objectSpread({\n          foreground: foreground,\n          cellSize: _cellSize,\n          isDark: this.isDark\n        }, this.cache), this.options.effect); // draw logo\n\n        if (logo) {\n          var logoLayer = _objectSpread({}, logo);\n\n          if (!logo.w && !logo.h && !logo.cols && !logo.rows) {\n            var _logo$image = logo.image,\n                width = _logo$image.width,\n                height = _logo$image.height;\n            var imageRatio = width / height;\n            var posRatio = Math.min((count - 18) / count, 0.38);\n            var h = Math.min(sketchSize * posRatio, sketchSize * posRatio / imageRatio);\n            var w = h * imageRatio;\n            var x = (sketchSize - w) / 2;\n            var y = (sketchSize - h) / 2;\n            logoLayer.w = w;\n            logoLayer.h = h;\n            logoLayer.x = x;\n            logoLayer.y = y;\n          }\n\n          drawCanvas(canvasFg, logoLayer, {\n            clear: false\n          });\n        }\n      } // Combine the layers\n\n      drawCanvas(canvasOut, [{\n        image: canvasBg\n      }, {\n        image: canvasFg\n      }]);\n      cacheCanvas(canvasBg, canvasFg);\n      return canvasOut;\n    }\n  }]);\n\n  return QRCanvasRenderer;\n}();\n\nfunction qrcanvas(options) {\n  var canvas = options.canvas,\n      size = options.size,\n      cellSize = options.cellSize,\n      rest = _objectWithoutProperties(options, [\"canvas\", \"size\", \"cellSize\"]);\n\n  var renderer = new QRCanvasRenderer(rest);\n  return renderer.render(canvas, {\n    size: size,\n    cellSize: cellSize\n  });\n}\n\nhelpers.createCanvas = createCanvas;\nhelpers.isCanvas = isCanvas;\nhelpers.isDrawable = isDrawable;\n\nfunction createCanvas() {\n  return document.createElement('canvas');\n}\n\nfunction isCanvas(el) {\n  return el instanceof HTMLCanvasElement;\n}\n\nfunction isDrawable(el) {\n  return isCanvas(el) || el instanceof HTMLImageElement;\n}\n\nexports.qrcanvas = qrcanvas;\nexports.helpers = helpers;\nexports.effects = effects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qrcanvas/lib/qrcanvas.common.js\n// module id = 76\n// module chunks = 2 5","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += ' width=\"' + size + 'px\"';\n      qrSvg += ' height=\"' + size + 'px\"';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\">';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += alt;\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/qrcode-generator/qrcode.js\n// module id = 77\n// module chunks = 2 5","<template>\n  <div class=\"l-page\">\n    <header class=\"mui-bar mui-bar-nav l-black\" v-if=\"!$device.isWechat\">\n      <h1 class=\"mui-title\">{{ $route.meta.title }}</h1>\n      <a class=\"mui-icon mui-icon-arrowleft mui-pull-left _nav-back\"></a>\n    </header>\n    <div class=\"mui-content\" id=\"scroll-content\">\n      <div class=\"l-movie-quan\">\n        <div class=\"_name\">\n          <p class=\"l-fs-s l-text-gray\">电影名称</p>\n          <h3>{{info.projectName}}</h3>\n        </div>\n        <img :src=\"info.projectImage\" alt=\"\">\n        <div class=\"l-flex-hc l-margin\">\n          <div class=\"l-rest\">\n            <p class=\"l-fs-xs l-text-gray\">日期</p>\n            <p>{{info.dateStr}}</p>\n          </div>\n          <div class=\"l-rest\">\n            <p class=\"l-fs-xs l-text-gray\">场次</p>\n            <p>{{info.timeStr}}</p>\n          </div>\n          <div class=\"l-rest\">\n            <p class=\"l-fs-xs l-text-gray\">券码</p>\n            <p>{{info.number}}</p>\n          </div>\n        </div>\n        <div class=\"l-margin\">\n          <p class=\"l-fs-xs l-text-gray\">影院地址</p>\n          <p>{{info.address}}</p>\n        </div>\n\n        <div class=\"l-margin l-text-center\">\n          <div class=\"l-qrcode-img\">\n            <div class=\"canvas\" ref=\"qrcode\">\n              <qrcanvas :options=\"qrcodeObj\"></qrcanvas>\n            </div>\n            <img :src=\"qrcodeImg\" alt=\"\">\n          </div>\n          <p class=\"l-text-gray l-fs-s\">(建议截图保存)</p>\n        </div>\n\n        <ul class=\"l-movie-remark\">\n          <li>电影票资源珍贵，请持票的您务必到场以免造成浪费，如果无法到场，可以将电子票截图赠送好友；</li>\n          <li>向工作人员出示二维码即可领票入场；</li>\n          <li>本活动最终解释权归贵州优视一号生物科技有限公司；</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Qrcanvas from 'qrcanvas-vue'\n\nexport default {\n  components: {\n    Qrcanvas\n  },\n  data () {\n    return {\n      qrcodeObj: {},\n      qrcodeImg: '',\n      info: {}\n    }\n  },\n  methods: {\n    getTicketInfo(ticketsId = '') {\n      this.$mui.showWaiting()\n      this.$server.movie.getTicketInfo({ticketsId}).then(({data})=>{\n        if(data.usefulTime){\n          let datetimeStr = data.usefulTime.split(' ')\n          data.dateStr = datetimeStr[0]\n          data.timeStr = datetimeStr[1].substring(0, datetimeStr[1].length - 3)\n        }\n        this.info = data\n\n\n        this.qrcodeObj = Object.assign({}, {\n          data: data.number,\n          cellSize: 5,\n          correctLevel: 'H',\n          typeNumber: 5,\n          logo: {\n            fontFamily: 'Arial',\n            size: 0.15,\n            color: '#000',\n            text: 'U视一号',\n            clearEdges: 2,\n            margin: 10\n          },\n          effect: {\n            key: 'round', // image liquid round\n            value: 0.2  \n          }\n        })\n\n        this.$nextTick(()=>{\n          this.qrcodeImg = this.convertToImage()\n        })\n\n      }).finally(()=>{\n        this.$mui.hideWaiting()\n      })\n    },\n    convertToImage(){\n      const qrcodeCanvas = this.$refs.qrcode.children[0]\n      if(!qrcodeCanvas) return ''\n\n      const type = 'image/png'\n      // let imageData = qrcodeCanvas.toDataURL(type).replace(type, 'image/octet-stream') || ''\n      let imageData = qrcodeCanvas.toDataURL(type) || ''\n      return imageData\n    }\n  },\n  mounted() {\n    this.getTicketInfo(this.$route.params.id)\n  }\n}\n</script>\n<style scoped lang=\"less\">\n.l-movie-quan{\n  background: #fff; margin: 0.75rem; overflow: hidden;\n  ._name{\n    margin: 0.5rem 0.75rem;\n  }\n}\n\n.l-movie-remark{\n  font-size: 0.75rem; list-style: decimal; border-top: 1px dashed #ddd; padding-top: 0.75rem;\n  padding-right: 0.75rem;\n}\n.l-qrcode-img{\n  width: 8rem; height: 8rem; margin:0 auto; text-align: center; position: relative; z-index: 1; background: #fff; padding: 0.75rem;\n  .canvas{display: none;}\n  img{width: 100%; height: 100%;}\n  &:after{\n    content: '二维码生成中...'; position: absolute; left:0; right: 0; text-align: center; top: 50%; margin-top: -0.3rem;\n    font-size: 0.6rem; color: #999; z-index: -1;\n  }\n}\n</style>\n\n\n// WEBPACK FOOTER //\n// movie-quan.vue?7dcc96f2","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".l-movie-quan[data-v-b9078570]{background:#fff;margin:.75rem;overflow:hidden}.l-movie-quan ._name[data-v-b9078570]{margin:.5rem .75rem}.l-movie-remark[data-v-b9078570]{font-size:.75rem;list-style:decimal;border-top:1px dashed #ddd;padding-top:.75rem;padding-right:.75rem}.l-qrcode-img[data-v-b9078570]{width:8rem;height:8rem;margin:0 auto;text-align:center;position:relative;z-index:1;background:#fff;padding:.75rem}.l-qrcode-img .canvas[data-v-b9078570]{display:none}.l-qrcode-img img[data-v-b9078570]{width:100%;height:100%}.l-qrcode-img[data-v-b9078570]:after{content:\\\"\\\\4E8C\\\\7EF4\\\\7801\\\\751F\\\\6210\\\\4E2D...\\\";position:absolute;left:0;right:0;text-align:center;top:50%;margin-top:-.3rem;font-size:.6rem;color:#999;z-index:-1}\", \"\", {\"version\":3,\"sources\":[\"/./src/pages/movie-quan.vue\"],\"names\":[],\"mappings\":\"AACA,+BAA+B,gBAAgB,cAAc,eAAe,CAC3E,AACD,sCAAsC,mBAAmB,CACxD,AACD,iCAAiC,iBAAiB,mBAAmB,2BAA2B,mBAAmB,oBAAoB,CACtI,AACD,+BAA+B,WAAW,YAAY,cAAc,kBAAkB,kBAAkB,UAAU,gBAAgB,cAAc,CAC/I,AACD,uCAAuC,YAAY,CAClD,AACD,mCAAmC,WAAW,WAAW,CACxD,AACD,qCAAqC,4CAAoB,kBAAkB,OAAO,QAAQ,kBAAkB,QAAQ,kBAAmB,gBAAgB,WAAW,UAAU,CAC3K\",\"file\":\"movie-quan.vue\",\"sourcesContent\":[\"\\n.l-movie-quan[data-v-b9078570]{background:#fff;margin:.75rem;overflow:hidden\\n}\\n.l-movie-quan ._name[data-v-b9078570]{margin:.5rem .75rem\\n}\\n.l-movie-remark[data-v-b9078570]{font-size:.75rem;list-style:decimal;border-top:1px dashed #ddd;padding-top:.75rem;padding-right:.75rem\\n}\\n.l-qrcode-img[data-v-b9078570]{width:8rem;height:8rem;margin:0 auto;text-align:center;position:relative;z-index:1;background:#fff;padding:.75rem\\n}\\n.l-qrcode-img .canvas[data-v-b9078570]{display:none\\n}\\n.l-qrcode-img img[data-v-b9078570]{width:100%;height:100%\\n}\\n.l-qrcode-img[data-v-b9078570]:after{content:'二维码生成中...';position:absolute;left:0;right:0;text-align:center;top:50%;margin-top:-0.3rem;font-size:.6rem;color:#999;z-index:-1\\n}\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!./~/less-loader?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/movie-quan.vue\n// module id = 257\n// module chunks = 5","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!../../node_modules/less-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./movie-quan.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!../../node_modules/less-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./movie-quan.vue\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!../../node_modules/less-loader/index.js?sourceMap!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./movie-quan.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=data-v-b9078570&scoped=true!./~/less-loader?sourceMap!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/movie-quan.vue\n// module id = 300\n// module chunks = 5","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!../../node_modules/vue-loader/lib/style-rewriter?id=data-v-b9078570&scoped=true!less-loader?sourceMap!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./movie-quan.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./movie-quan.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?id=data-v-b9078570!../../node_modules/vue-loader/lib/selector?type=template&index=0!./movie-quan.vue\"),\n  /* scopeId */\n  \"data-v-b9078570\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/movie-quan.vue\n// module id = 365\n// module chunks = 5","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"l-page\"\n  }, [(!_vm.$device.isWechat) ? _c('header', {\n    staticClass: \"mui-bar mui-bar-nav l-black\"\n  }, [_c('h1', {\n    staticClass: \"mui-title\"\n  }, [_vm._v(_vm._s(_vm.$route.meta.title))]), _vm._v(\" \"), _c('a', {\n    staticClass: \"mui-icon mui-icon-arrowleft mui-pull-left _nav-back\"\n  })]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"mui-content\",\n    attrs: {\n      \"id\": \"scroll-content\"\n    }\n  }, [_c('div', {\n    staticClass: \"l-movie-quan\"\n  }, [_c('div', {\n    staticClass: \"_name\"\n  }, [_c('p', {\n    staticClass: \"l-fs-s l-text-gray\"\n  }, [_vm._v(\"电影名称\")]), _vm._v(\" \"), _c('h3', [_vm._v(_vm._s(_vm.info.projectName))])]), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": _vm.info.projectImage,\n      \"alt\": \"\"\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"l-flex-hc l-margin\"\n  }, [_c('div', {\n    staticClass: \"l-rest\"\n  }, [_c('p', {\n    staticClass: \"l-fs-xs l-text-gray\"\n  }, [_vm._v(\"日期\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.dateStr))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"l-rest\"\n  }, [_c('p', {\n    staticClass: \"l-fs-xs l-text-gray\"\n  }, [_vm._v(\"场次\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.timeStr))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"l-rest\"\n  }, [_c('p', {\n    staticClass: \"l-fs-xs l-text-gray\"\n  }, [_vm._v(\"券码\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.number))])])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"l-margin\"\n  }, [_c('p', {\n    staticClass: \"l-fs-xs l-text-gray\"\n  }, [_vm._v(\"影院地址\")]), _vm._v(\" \"), _c('p', [_vm._v(_vm._s(_vm.info.address))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"l-margin l-text-center\"\n  }, [_c('div', {\n    staticClass: \"l-qrcode-img\"\n  }, [_c('div', {\n    ref: \"qrcode\",\n    staticClass: \"canvas\"\n  }, [_c('qrcanvas', {\n    attrs: {\n      \"options\": _vm.qrcodeObj\n    }\n  })], 1), _vm._v(\" \"), _c('img', {\n    attrs: {\n      \"src\": _vm.qrcodeImg,\n      \"alt\": \"\"\n    }\n  })]), _vm._v(\" \"), _c('p', {\n    staticClass: \"l-text-gray l-fs-s\"\n  }, [_vm._v(\"(建议截图保存)\")])]), _vm._v(\" \"), _vm._m(0)])])])\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('ul', {\n    staticClass: \"l-movie-remark\"\n  }, [_c('li', [_vm._v(\"电影票资源珍贵，请持票的您务必到场以免造成浪费，如果无法到场，可以将电子票截图赠送好友；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"向工作人员出示二维码即可领票入场；\")]), _vm._v(\" \"), _c('li', [_vm._v(\"本活动最终解释权归贵州优视一号生物科技有限公司；\")])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?id=data-v-b9078570!./~/vue-loader/lib/selector.js?type=template&index=0!./src/pages/movie-quan.vue\n// module id = 428\n// module chunks = 5"],"sourceRoot":""}